(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1064360,      20034]
NotebookOptionsPosition[    947473,      17834]
NotebookOutlinePosition[   1033587,      19601]
CellTagsIndexPosition[   1033505,      19596]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a0f5d527-7abc-443f-af60-c264045018c7"],

Cell["0.5 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938145688149681*^9, 3.9381456899328117`*^9}, {3.938148094502344*^9, 
   3.938148095872241*^9}},ExpressionUUID->"10f348fd-c2cb-4221-9468-\
ae9de3210783"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Zwk4lgx+xfcUfL5EfHZX/oTvn+h688QrmT3DnqXrWH/RW/UbvVX/wVddfcDX
pVf+Y7G9z/VghQV9Ivg86OfF528wnibKzzjcjMv/h7xMmC+DzS+b6Hgylp9y
/Ricj8mTH2PnlA3JkRtTa+eUpXAxjZF5ST0MiUQikUik5lRDOP3PfvN5MrF+
egHOxV4XTuNcYB6GYVzQuWIpfgvCtwS5LQjX4rItNkcEz2WJ8ywzoc+C8Cv+
/K58PAr3OfpKr4OvyvfI43nsXbZO9Cg3OdU7xyrrZu927O+/ledYlq5T/RKo
Lp7PA1f1eIv5NP2AT2Ofd5+bycPLwJ87Nr8sYGRQPybCx1Sk8TFNwMVE8mIm
N9CLISaGRCKRSCRSU6uhrMuHYr9YfThfzMl0sXvwYZ5LFucyqlLPFqvxPBd5
TXocwrmEfAvut0zwrpPLz5s2ryWLa3FmW4H5V4U4Fo/vEPxH57i/ov0J6J9Y
HyWf57HtunnJTZ1U72HWXvJrtt6cst4cWbG//9LBJ3P1L/z+b+zk+Tfebf/x
Xm/W0KfxeZo0fibGzUR5Gc+XQTmZXH4MxsfE82NiuTHai9FczKg8XAyaFwPn
k0kuhnoYEolEIpFIZ6Ia2rscO3JSzRerdzJdjO+iru/CPBfHcwnmig2NzxUL
/JYax2+5UvktkHHJw7fE/ZaQa8HyWdxZVy5vgXMscZ/FFMKjBD6F2ucFfY88
nsdDrGe4mf39W4SXItegWP9R0gr+/Yknn808lnfffIv1MGvFccCK+TvocxD4
NJCnwf2ZkJ8BzAzKy+CcjOhlkPllxfyYgUF+DNzv6HoxYW7MmCqXixmdxsWo
vBjLxNS6Pky1O59s47LNDephaD8ZiUQikUikxtTXDeT017PPNr7voq/fWtal
1t0vlpXn4nAuvuficS4VeI5LLL8F8i0Blw/4FpgHks61uH5LjGeJciyp/kof
h0+BXoT2K1z/RH7uz+N5PLl1p+w3IjU7ZZ2dcVuvi/uMyDU/WddbJ15Jtl03
V/o5nXubVT8u8zj140cL+lFxjsbhZ1BmJs7LxPJl3NllsTyZdD4mOz8mb26M
fP3Y3MsIF6Nej5aJqTNejD+fjJgYEolEIpFILa2G9C6cdeGcPsx1gZ5LLS+V
O1Esz8XzXFSOi5vl4nIuV1WGc8XS81t4vzIwyG2BuR9uXovkH2Jcy0zgtxie
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
15bAxPC/v5rPT+vgPp8LnEI8mYCXyeZksDyZND4mOz8mb24M4GKQvBjTx6jX
U+p8sgrrxeA5MbgPg/Ew9cTDkEgkEolEytCXX37Z7c9//vMfGpt3qc3gXUb4
vgvgXdJzXSDrYueLid5F733JyHOZ6vku05Xv4me5OJ4LmCuG57fgfEtqXgvk
Wjr1RL2WGM8S51hwj0X2K93NKvoU4FeIz/ztwxI9QvtLgnUb6ynePn6ySXuX
EwceT5ay+4rVEqfC49SPYW3P2pJ6GP3cuXxQmGNjfJkILwM5GSdXJs/cshx8
jOFiOufkYtAZZVlcjHx9aa7sauV7ujkxg4KcmGA2GWDctA8z3PdhGpmHUe9v
Y1r6vZZEIpFIJFLjiP1eP91cvIvwXFJ8lzHAd0FzXZTv4ma6DHLniyG+C5bn
Mh3kuUjGxctxKcP4lr4yv6ULnt+Sh2+B+SEB19IRcC2dXL8F8hgBx9IR8Csd
e6T6K3c45foXsJbyau+vlyTL2NfLwLpn1q2N7sXw73cv64/4918u7gsr9ziW
qePDjnuJ8GGK9zDPbN1hn8uOds6ZLteXCXkZp/cEflpqnkwOPsblYtSsMnV+
urkx3pyysn5IZozlYqwPMyBzPtkEwMSk5cQYJibCw4xsJh6G9zD8Wk1Lv9+S
SCQSiURqmErpXbjvMrBIvktVhu9SmeG7RHJdUueLgf38k9U+f+i75OdcZP5G
OFcMz2/JxbcgeS0Y14LnsWTNCUO4FVWur6L9Cd/DiHsdokdodzGyXizWI1u2
B35MnvwVePvI5vuTPTNnJ8vZ9wtK3Y8p5HiW6jVSa3sOdXqYPMe3/47Vhgfi
zy98vl2uKORlJCfTI+Bk3EyZbD8Gy4/R598Nnh9znefHzPL8mCAzJvBi+rtZ
Mex1NElxMdh8Ms2dpebEYDyMynYa2Yw8DO9hWvo9l0QikUgkUunie8Kblnep
tb5Llczgtr6LzYcYreaLuTPG7Fyj1FwXnR+u5iZNKoesy4BieS5qv1gm59LZ
nyuWl2/pifAtsYyWyNywlDlhWfyKz41oP0V4FFGPQ/ofWK0Q68ViXQHW+0ZN
TB5jn/nzejJHWd+zl/UsG3oOSVa0u1h9L1X+be/++P3Hji/m29zFepiiftEB
9nj8+WZwdrP2ZXBeJs2PuQzxY3oW5GOQ3Jg0Lkb36pG8mKmKi4nmxETmk7lc
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
lrw+y516TeFRtK+x1lllrcOqjeoz1HpXsFZnr23y/D33+8L7xY7L9Wvs41nj
lc/T8Ofn8YIsjJ83syzoYywfswTOLQO5Pfi8Mpsf43Mx2KwyjIspKS+mi58V
k54To9kz34eBPMyEAjxM4MMg+TDiPUe8/9hcGJ+H4SwMzSQjkUgkEunsUim8
Pp81NribnjU2DDAv8vpmbYrvAnmXPHPGMN5lQgbv4uS6ILwLzHVB54tB36VL
H3M9Oi3PBZ8r1jPIcYnlt2i+JZwlhvEtbk4LxrUEPIuqLI7FciLdDK8COZN1
7bSnIgv6J1jdnVHrU1Zb1c5t7O/nKfwYoU/jls/XQI7mnstqklcOPJ67h+Hz
y/y8Gd+PEQX4pRgf4/gx6vy53ZxTl+F+DGCvsDllaXkx7nyyvp4X00/1MXY+
WVpOTMyHmVRhM2JcHsb3YcJ8mNEIDzOi2vVh6jEfhmaSkUgkEol01qkUXl/O
GlO+S1fruwwBvoueN8ave6bxLqMivkuY7xLyLhMR3sX6Lm6uyzSQWYHnuvRx
WBftuzjzxbI4l46ac+kZci4d/ByXYnwLnF/l57Xg88Py8Czp3Eqqr9LG9VWg
P3K3+FquWK0Ha/6qKvT3Y/et6y6n7PHDx5Xm02iO5p4eRfaRnUw2sJ4H5sw4
TBKfCac5mRx8zKIifkyH9DllGBejPca888lSfRiQE4P6MGXIXDKEh8HyYcw+
Ms+HkR7MEHcmGeLDSBamrqQehl/7aen3cBKJRCKRvk0qhXl5ZOeBZBDwXWoi
voveN2YyXgzv4vouoyvlLCHfdzHeS8x3SeFdpqbwLnlzXSzr0lh5LjbDI8a5
+PktPt+CsS06Jx5yLW6+fcxn6eb6LB63Yqtr1F9xvI02yh9xVtlLbNBribUx
43ZmqftfH6z82KtR/wbjbXyORte+mbfk7mGe23K/+Llg+TIxP0bzMWGOTOjH
GC6mg8/F9MC5mKy8mGA+WW83JyZlPlnUhylL92Emqtd3vnwYkA3j+TCahcF8
mDrgw0gPpvS5ysTCkEgkEonUfCq6b8zOGoM5L3Xidz/qu1TXGt8Fei9ij0du
3yU/7zIF4V1M7+KwLoB36dw3yHVx8ig7qf4lyHTB8lwui/ctIMfF5VsuRfNb
onwL8FuyuBaHxY/6LN0cnwV6DgGf0qZr1E/B/BLZP8DVrY1FqnW+v7cBrLb8
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
D8blYGQPo+eRFfFg9ixdl5+DScuDqXDzYK5EOBjdv/gcjGBgqkIORjMwQwrm
WfLZ+i39e4pEIpFIJK0ie8fG10135o7VVMOZY3bumOu9wLljLvcyVs3T8bmX
q9X+b597uQbhXvJy+zxj7qZO3HuR/svsHNyLZF587qV7wL2Yecn+vLF2kXlj
bSPzxnLmvBjfpVXEd0nJd4nxLvtSeJcgj1LMFmvnsS4u5/I04Fx43/LerXMD
vyXGtZiexfNZfrFjR/JLVj9duy452aki8FdgiR5C+SZ85b2IXk/AVdXJnKup
c8Lb8v7Oc+73OHJsrj9jmRnIy7hzzHA/5gjgY/z8GGxOWeZ8MuXDvHLjrckn
J05k+jAHuvUyPUzgw1yI+zDCg7nQ8vx2JlmF9WGcXJjKnLkw3YJcGOvBXBRw
MOE8shgHk+7BRDl+zsAUyIPBOZgBwofWHMyV0IPx5pCNVt625mD0HDKfg9Fz
yIao9/CP3j9Fe8hIJBKJdNYp794xwe1z76Wb9l6GGe5F+y+O96L8l5G+9wK4
F83t+9zLeD1zzMt74XkJUwD3wj8DHLp3d6GZYzLvJcK9mN4F414uxbkXOG+s
PZw3dnGOeWNdc80b08yL5l5c38XyLpw32MUK9V2yeBfEd8nKddHX86OcC/v8
/NaU6XaemM+3aL8F41qAz/JL0Le83qM34FhwXwXWSVHngVXWK+fInuSVc0B9
N+cK/r39nvZ+Tpg1za9BfBmPl0H9GMHJ+GwMlh8jc3RCL8bmxcTmkx0dWJd8
evy408NgPszhISPEeaTPKZeH6eLMJNM8zI5MH6bSsDDpuTBdU3JhLnLmka3E
5pGp1y+cRyb2hnYIOZj5moPp2DP3LLLVY6cl13fpk5oHMy3Ig7H+i5sHY+eQ
WQ6mxvFgLAejGJhqxfHrWSrKG/fnkG0swPE3xh6yf/mXf6n5/e9/P+Of/umf
rm+Gmsbu79JG+DXZLPriiy+uYsd8XVM8F/w5/+Mf/9irpR/jmSr2/PT853/+
5+lNeT6yn+9Mdh99m/JxfPbZZ13Yff2c3c8fWH3B6vdnYrHn4nfsOH/Dvv4V
Wz9h9SP2Z2+z2yfY10+z2slqKaup7GfTnz2uc5ryefumiz2vj7Ln8nNW/9LS
P3us2HHx9R/4ucvqA/b199n58ByrA6x2sLqbnw/sz+eymsC+bsV/H+XeO8Z+
z+m5Y4Ph3DHgvwjuRc0dGy5KXgvEuJexCPfC93lfbbiXgcZ7mVSmst487oXv
I3/jxKv5vBeV9xJwLx0l9zIXei8R7kX7LnHuJe+8serIvLFKh3mJ5byY/uVC
7b3Ya9y7EN/FMC+RfBefd7EzxrBcF8i6yGv6Ns/FXvcXjMvWbXaeGORboN/i
cy3Aa/nF9u3JL1n9dM3a5PVLeyH8CvQ5lL+C+CYnv3uuWUUPItbGK/197f0g
fs13Q3/G52l8XsZhZMD8siw/Bp9T5ubFSB+mjcfEyPlkT1V1Tz59+eXkk2PH
Un2Y19bcJc4jwVCJ8yv0YYQHA3yYHZ4Pcx/wYbYBHyZvLsxdmoVpq1kYy5oJ
Fka9JlfCWWTKh1nieTCLwDwy6cFcKt4LIAdz9+jJ+feQKQ+mMAej3vcmIByM
nkPmcjCagYEczFCbBaPyYJw5ZIqDae49ZOx3z172u+c/2fr/sTVp4vpf7Pfe
u7/97W97NMJHgCYV67Nas+M9wY73/2qi5+L/YfURe94Ht/RjPdP0b//2b23Z
8/LXzXA+8p/tmqZ8LOz7X90Mj6PZiv1c/out/8zq79lr40O2nmS1m/eaZ9O1
iZYWe86+aOmfZSPVf7P6T1af/+u//uuX7LWb/Od//mfyX//1X8l///d/R393
Dew23HAvg9X+acO+eNyLP3dMey/uzOSQe/HnjkHuZbLOewHcS172Zet18wrl
vWjf5fYOrveyWM8uau96L8vVtd1w3pjMp9C+S3zemM28uKdNWs5LuTNrTOe8
aN8FMi8+77K3kX0XfR3f8V3Y5+Lny7slP1612s4Vg4yLym1x+Bafa1Fei+lb
evRCeRafU3H8FeiXqHpV1LnIKuuDkWOSvz9wMHmNfR2rV8GKfb9XzOr6Nb5P
A7kanJfxOBkvX8b3Y/z8mHxcTFvDxGA+zHtb7xU9TJoP88FTz4jz6GFRnZy9
ZDofRnswdq6y9WG2Ax/G7CXLlQvjcjCQhTH7yBwPxs4j0x7McrOPDHIwgIVR
r/8FioHRHAzPg8nznsMzcm9gfQvkYGYhHIxmYKaWhx7MRISDkRy/fN8cBzmY
KpkJPErPSkHnkEEOph5kweTbQ9YYWTDsM8hd7HdPc/QusJY0xmeAptSvfvWr
89hnsqPN8Fw83tKP9UwTOyfnNuO5eEtTPhb2mX7WGfAZszmK94J/y+oZ9vO7
ma29P/vss3ZJkvyPpnx+z0Zt27btf7Ln51/OgJ9ZkxV770xYP5P88Y9/TP79
3/9d9DS8n/nqq69A5ovcM23mJhvvRf1urFL9izd3THovsH/R3MvggHsRe8eA
96K5F997mS7YlwXFuP3MvJceqdzLHeqzjsu9XBxwL6Z/CeaNqf7Fnzemexc/
56VVvpwX7bvsEtw04rvk5F0C3yUl1+Ww47vI3gXmuDj5LWCeWMC3AK4F+i1v
19Q5fgvkSSB/ctKp0F95NVKiJ/mL75n1t6+/kfzhr/9a9DHwz/OssftwfZqI
PwN5mXNcXgb1Yxw+BvNi3NyYmA/jzicLZ5O9ev3NyacvvRT3YXgPw+qpmuHK
y5M+zN4ID+Pz/Hoe2fZWeiaZx8KoeWQwF2aTzoWBuZbah2nrejA+BxPMI0vh
YBahHMxlxoN5+eATuRgY0b8ADsbpX7QHo/wXy/FbD0b0L8qLHl+hPRjNwUj/
xedgtP/iczC2f/E8mIJZMA3dQ8Z+x3Rmv2/+3Jy/29jnm3ca6aNAk4od65hm
eD7+xHql77b0Yz2TxJ6THzbTucivHXdsyseC9i+//33yxd/9XfLFr3515tTf
/m3yxa9/nXzxD/8g67PPki8+/zz5p3/8R3G8JTy3/5vVz9jn2C3s9T7gP/7j
P85tyuf5bFKsfxHPO/85tPS5wOtv/saeD/Bc+O1vG/Sa+8Mf/pC8dOR4cs2I
Wcngi4ajc8ek9wLZF7n/WnovQw334novNYZ7uQrzXpT/orMRprCC3MuMAuxL
NvfC814s9yKYF8G9XBpwL0szuRcwb0xxL5J56Qa8F5ln4c8b43v90ZyX1nLe
mPVdAPOC5LyIjJcL3VljefJdYr6Lk+uC+C7H+gxIPr33PpdzUb2Lk9+C8S3Q
b1m7Nnn/yquF/3CcfU7HuBbts/hcyqvnaI/lPNWfnOd4J98Hq1+f3jRb+I+8
fsf6mNfZn70u/t/3zNfwNvY9vu/djy3lz+jjg77MOb4v43oygR+TxscoLsbP
jcHyYtJyYrQP8/yAocmnL74oPRjWv8R8mKdZ/yLyTtX5ZX0Yef7tMdkwng+T
IxdmK/BhNAcTzCNr62fCQA4GziOTr0/NwazQez/bhxzM4kgejOZg1o+Zkut9
584x05IbulgPxuVgLnc8GJsHM8D1YJT/MkG9PxoPRmf+ag6mSs0i0xnBenZK
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
hTvad0Gy6Tp9tUUL3+vWa7SO0D7rZ3o9Okf7WgQaRRm/eF17Rg+dSD6cu5Rc
v3bdwcmBf57f9wF4P+LP2btxKxnUrKMx90X6jg0QveKSf3m7+3NB8xfgdUKL
R1jv2MvId4zxL9UMmS+K71jjwL5jlfXMF+w7hrQv8dJ3zO7Zf9ege1F8x5Du
ZUkFZ97L+lYdydmvvyZnKXY5C5oX4F6k35hL1ssF4Tf23YQ3yHqWS8i9cb8s
I7kX6T3F994dOS+loc61eZcdKOOF9SiJ/X7Ju+yVtTSts/Nb56dNmcLyUo4L
P7HTIejgQbsi+8BCfU155JEC45ZrgwZZ+hjwOzsboCfNFb9QPAf5N5CHc6gk
z8eBnBypheF6GJwPgzzJIBtGfGeSh/GUCyPuC+Dq4P6B++gC6iPDmTBJi5dQ
/FJZcDBVrDyYzwPkwXzsooNZZNDBSA0M9JC9i3Qw0odsru5DVgn7kCEdjPj9
cg1MQ4MPGdfBMA0MyoEBnnbDnPeV54vbBN9DyJ8aUUPzIDP4kA0UPmRSA9NP
8i+ggTHkwDyNcmCeNObASP4lUA5MO8G/cB+yDg2cOTD50fD7pYGBQdeE+tCf
Ya0RN2+SlLp1fVt/DL0gKUUlW5vWqM3wvjPoVtN69gzpelxt1Uq/HlDzt4j2
uYY66Dl8iM/rJl0vQ/Vahf6knKNHleuVm5vbJdrnCuMfCb/IAb8Hekx7dQyT
c+iQL1gVT7h3DLmv86N9DQKNoopffvnll5e8rj2tGnUmrRp2Ii/1f41cunBZ
5cjS09nzzc/7QPeBuX71Ghnb5TlF+9JX7EXi3BfGv4i9y9EPdPG0D/pO92eY
75ie+2JpX6px3zE190X4jlXFvmN8r9bhOybzKnXtSyWVe9F9x6Tu5X2ke/kQ
6V4WI93LR0j3sn3ICHJ282aGX4B7sXQvyC9ZyXpBfWP7n+kjsEslJ/ci+8Yc
uhc150XyLjLnxfYa4/v9knfZhzyybrvoWvL2JBr/O/SRXezchXuLIV8x0MVf
HTzYtU/MNDMnTw6Ze8EcTH4wC3w2/JszQh8jPc2YL7PLOQTim8516coycDgH
o/EwpZy+ZLKPjPMwdh+Z5GHMuTBOPzK4N3Y2b8n86iQHo/SRIT/lbx5sS9bE
VeEYJkgezKcuOpglondS5WAMPmSaDsbyIZM6focPGWhguA5miuJDJnrIpFeH
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
+6Nzuva2ahI9/+VN4Z1s8y9I/1JZ5V+g5yRQPoTuPbZ9+iy2P8x6XUTvPudf
ahr4l+qW/mWZ2I9W+ZcqyHusCsvVWFdW5V+gd8zBv8Sq2hdd/7JD7LXvEnXr
oUZNXWvfjGXLee5LKWfuy7co94XzLzj3JXhuSiBPZS/6l8Ke/6L3jYXy/pJ/
Oa3kwPDrfrFTZ9fPvTRkKOPPgEdj/Aud+yz9C+dgJP9ia2DKcQ8yOo/2fIJc
XrDA6EF2ETQwn3xCzsybT7FLPOJfKhn4F5wBo/EvcVL/wjUwRv4FMmDoDMy/
1OX8SzzWv9Qnu2ROk8vEv2/OvTRm/IvUv4ynr07+pamif3kF6V+UDBhd/1KT
61+GIP2LkX9h+peWCv/ytIN/4Rkwqv6ltcW/9FAyYKT+pV1g/oXpXzoynr4w
4heoVWgNcVbhJ/r29aVOAQ4G8AJ673+htcpjkTw/+pmbw1WHFXTmHDig1wwr
IrH/TD9nBJ1/seqUK1dC0u2DX52OxSgOaBnu8wjHKMYv9qDHOkmpZzMzWS6t
H/c+ywm6fh1fl79Gek/D64gEfqH3xL/6xL/c9rK2vDxoHBk1cAw5fvSEA7ew
czxzhqS2aBHy9wz+KLe0frQPX59GnmP7hwK/BNC/gBePQ/8i+saV7BeFf7nH
1r9Ut/mXsWKfdMp9HVj+3Jdz3mO4ZeWYN9m+qsQvnH9p5ORfhFeR1375k8J7
bO/Hn7J94YUCv1j8SwXpPVbT4l+gT8apf6mG+JeqCv+C+8fAo9bIv5Th3Etg
/oXnfOwqzfmXPWyWJYcbu2MYyBI5IrJfjin8izn3JQnlvgTjFYJpYX4N/EtB
NS/61HNg4Jpf6tzF9XOvTZnKcOchkd8D+OWA8Jaz+RfhoWzhF94/ZvEvFL8w
/gXhF9DAXEYZMIBfnPwLyoApZ+Jf9AwYk/6lppN/qQi/L8m/1DHwL/Us/Qtg
mIC6NW1umrOAPRfg+eDkX5ow/cs4pH+x+BfRPxZQ/1LTi/7lAa5/qe2mf8H4
pRXrHwuuf2kbRP8iPZRR/5jgXzLTswodfoFB15bXlRofsmD80PHT31XW55om
NC9veQTPK55Oq4cf9D1X27QJ6ZyudeoUsh9P+vDhet3wz5DJEoHrcUSp0UPU
Y6ePHq3UKLQWSw/3OYRrFOMXPuhxtsA1O0zg2JLj4nzBL2l9+jD/DPT+mdE+
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
ferAXybe0sm3doGs5ElifRbzlymCv7xd3eYv0zz4y6yqugfGm7/gDOXFJv4i
fASfCf5ieWDk/jGNv6y0OmCqcAbjwl82Mv6CGAydx56d9IbrfL5gcwpb199D
58V7EX/ZL/KvQL+cSu7iSxMEPUJ5XkzvGyoXLNZeGLduF8yJLP1yI9cuqYJx
HU1MJIUujOvHs1zD8Oxkzl8ke9km9o7p/GWT4C8bxB7D9ULz7n3wYebdPyO6
Kx38hWoXm78Yul/EPWzvH1P5i9X9IviL9L7o/GXDlHfI4QMHfH2PNy/6hLFS
+M6+JfjLm3JNIgR/eVlkrL9Ui3v3nf4XlD0m+MtIwV9GePCXQYi/9Df6X1T+
IvePPSUyUNz4yyPY+yL4y/2u/AXpF+F96Sy8L1cDf4FDMJjzeD0/e9SoQJ5t
F6dOdewhC6cPMScnB3pqduHXiMa3n16nDttrhV+Pzmtf9joHOp9/VNF3p09H
5b2BceHll/Xrkgv75PxcE/rfjlL0XEpK5NcDfqfu34/P4+/0evzK78+nJB3X
9UuE9+oLL5i0y3/Q0TfeP9Noj+v6JZgB+R+5a9c67pOD23aRATd1DsFfRAdM
PR/8xfK/3OTKX9aH4dmf0/VhNq+x+Qvfc8L5i5v/pZHaAVNN5y/12frxXD2D
rIo7f1ks9MtSsefG0QED88QKtn5hGWQVpAcG6ZdyXL+spvNQ2wNT2cBfeIfl
ga7dXefysJ9sp9iXtFt4LPYKvzjwl7TEJFcmEGvtEk0+cygvTKy6abz0i9y/
JjPJ0tjgnqLDgnGBVkyjGuanM2ddNUxa1252b6XMHtP4i/Ttb2LsBfOXyhZ/
sbLHhH6x+IvIHjsyfYbNXypi/pJg8xeT96USv+/nK/6Xuih7zOYve75dQw75
0C+71m1g39Gpgpfq+sWVv9Rsanv3df6CvC+wLjLG1f9ys8pfsH5x8b8w7VLv
dgN/uTMEf2ln85dGJv7SQeUvIfwvCn+ho+c9T/nSLn/4wx+uxPu5rR/0WfNa
IfZTbNvGusyifa6d795dybUCn/zPP/9cM4zzuk/MlThryMmJqpcve8wYpeOE
jj/Rc2ridQ7QgUL/u99gfXdh3LiorktGs2Z6js9/0/PoEep6iMy4nYqee/XV
iM8D/AwaezkbaR5acT+u65fwB+t3hRxndV76T/n5+Y/F++cZxBEr/XKuY0e2
BgSZgEGNn+mz2o9+uTxgQHzulzJlHN4+GJs+/Zr0TWzHPTD19Q6Y29i+cOiA
8eYvt7B1Tnf+0oqtk37QZ4hv7bLynZlsPdaTvzAPTBOLv7zfqg1ZkPwAWdj5
fjK3xZ2MwcySHphqagaZxV9YDwznLx9b/AU8MHVU/lLZ7oCRPTDGDDI6OH9B
DMbiL+CBqco7YEQPzHrMYMryHhiYwx7odp+3dilTjnkpdrMB/KUsOZzYlPkt
3DiAsn+L/jex0AFB+Fi8PPV+X8OvZoHX8tJLJv10kf6dE1SrSPbC9ItgXmn0
Z+D2d7mGuVfLHpO9LxWs7h+mX8pJ70tly/sC98vBvs/a/EVmj334ITkN3n3B
X47MeJfdh19UdOcv0vsC9/Xiypi/1EH8BWWPCWY5V3yHti5YRA772Ds2P/lB
9v2cKr6vJv7C1ijod93iLzURf6mF+UsLV/8L1y/S+4L5C/foufMXsUbj6n+5
E2WPcf/LE2y09eYvjTl7cecv3PvSNdGLv3S2+EvPzr1KrH6h89a6hby/gT93
6Nw6o3nzqJ9pkP8KmWbaHPlRv+dVUFCwSNm7tXAhy2+N6HxKlSK5VJfh16Ov
v9DPXil6zvOUfTP790eXYUu1IXQOaueyOtR5FPK9fv9jzbdOnSLn7r474vPQ
e3ro53zb78+mpB3X9Yv/kV67Nsmhzy4tU5txQnqP3B/vn2VQR0z0C3y31683
7reLZsD8xI9++f7rr0lW797kfLduzOuXXr8+z90ugvuG5ZMsWuQ49yWTZrDn
dG/BX/qKfeBWBlldM38ZIviL3QHD1z11/jJG8Bc5pwnVD7Fj3Xq2h+R1kUk0
SazTWhlkgr+8JdZ1Z1Hdshl3fx84QHatXku+eW4s87+8J/iLxWCqaB0wmv9F
9sAsFOvSSgYZ4i+fCv/L8gqSwQgPTHmVv1gemHLSA6Pyl3WCv8gemP1d3bXL
FToH3i72IO0UnvCDdM4M+5P8zsH1+Thwh6B6VvzkiPl5HT8MJ9Lel4thahav
a5fRrx9jLzD2w6Aa5my//p4aJpVqGOZ9Qb0vKSJ3jPGXMtL7UtHqfVkr7pkD
fZ4hp3X+IrLHThr4y+fC/6J6Xzh/WWLgLwsqq90voF8+rOzkLytHvuDKX+T3
e37yA4yNTqWDe184f3nTw/+iZI8lcP4ywZW/tODeFzqk9wX4y3MG/8tQ4X+R
3pdBrPvFwF+E/6WP4C+y+8WNv+jdL8BfHvLwv3QX/IV5X4T/JdmDv3QQ/pfh
vUf73T+WGu/ntumgz5ntyrr+a68F8kyD19GeZ19QzVDOx/mAzyMf/93zPXpE
fB6ZDz2k5+WA7+RWP9fmhx9+AB//XzCDAd97NNcla8AAfX74b3SOXd3rPOj5
Po+vx+XPP4+4sxJ0j9ZB+A/6OSPOuC7ux3X94mP+Wb48yezZk+Tt2GGaQ39f
GIF/rTgfMdEvpUubuj2jHr/88osv/QL/nfX3cnLI5VWrSA6di2T16UPSGzcO
hKt73kM1apDL337rOP/ZIyY4+Itj/5hkMCb+ItY7R8oOGMFfZAbZV9Nm+WYv
s7s+wvaRSP5iMRi5f0ys40r+AntUlNeg86fD+/eTw3v3kvVvTnXwl/cFf5lb
RXpgZAcMX3eWHTALBX9ZLDwCagaZzV+Wy7XuCmoPjOQv3wj+YjGYcjyHzNo/
JvgLaJjtzVp5ape9TVtYPZbnJk6Oeg6uz8dBY8i9UuHyjFCel3C9K0F5YSLh
LOFet8sLF5F0qlv2iz18mR56Uv4ctwr+klJG975U5N6Xspy/rEP85QDwF5k9
JvgLzk4+RbUo8JcvFfZi7x1zZI9VFvpF3O8LpYbX+YvYc/mB+P583OJ2snvt
Otfv8LJe/dmeznfEGoMbf1G8L4K/vGrwv6jdLy0Ee+H8ZYyBv1jdL3XFGktd
bf+YsfuF85e+Hv6XJxty/4tkL9b+MRf/ywOCv1j7x4T3ReaP6f4Xq/uFeV/s
/WMjeo8p6frlWTr+n/UsP3qU9bhE+zxjeV/nzuE1/iuQ6+XjfMDnYfVHwtwi
YvZCx+WvvtJ5x8Ewr89J/PcvLVgQ1VwA2JTB9zrS7f3pNatK//02/N9nDxsW
8ftfnDRJf+99JTUH189xXb+E+J7eeSfJXb3abf78T6Dh4/0zDPqImX45fLh4
6BdtQHZjDp2bZLRuHdN7Kb1BA5K3c6fy3uknTpFR7R4Q/MXZAYP5yyChX2A9
k2kYi7/cjPiLrV+mduvpW7tsXLyMzV/c+QtnMDAPgvXcpXSe5HgdWBcW+uXw
nj1k/eS3hIdf5y+8A+ZDMU+zGYzkL8LDb+kXPu/7RKxjWx6YCnyeKPnLl6LD
Uu+BYRlkIodsDe6BER6HbVS75KZscZ33Hh8wiKRPmszmv7GYh5vm5cBmIF84
lJ6JxvPipTsi9cLEWrO4Dcgbu0S1DGRa59A/vTTMHqph3HpfpH5hvS+Yv1D9
wrLHDPrlpMhOPvDyK4K9VHfoF8jPY9ljiL8sQvpF5y+294V/Z1h2Mv0Tvkfz
qIbZgrmn8LsAdwEv2rRqtn6R/GVKDZW9TK5Bv+M1kpz8RfG+mPgLZ7qQDTKm
tht/sf0vQ+vK7DHkfRFcuZ/B/2LiL0+yIfQL8760UbtfGtrel4cYe7mL6xfk
f7H4C/O+YP7SyZ2/0PHGuKl+94+tiPdz23TQZ0wdOrIU3vHAA1E/yyCH7PKX
XyrPsvz8/NE+zucI/jsX33wz4nOAbkdtH//fqY56OszrM64QeYSgMzKaHDQY
OTNnKteFntNx8Nu4vP89hbirJzOTZNxyS2Q/kwoVSN7Bg/p7DwvnepS047p+
cZlr1qvHMtPhfjbNeel9sZx+X2vH++cXi6MI9cthOjYVFBSsi3TQOclFP/oF
5i5+9BB4HLMHDyZnypaNyX0F11HvCmJeGMxfhP+FZ5Dd5spfYMA+czuDTPIX
3gGzbsmnvvXLWzd3YPvfYR32dcZfsAeGapcEtQNm8+JPnK8D/IVqmMP79pFU
qmFSd+8mq0aMYRlk7+semKqYv0AGWV22/rywch2UQcbXqTl/qWXxF5gPLq9k
8MA4+Iu5B4ZnkNk5ZF7aJRLNAnNp6IHP6Nef5HrMpSPRM0F7XiL1wuBssCA1
i+RQsdRA8DPd3aylr96XtULzpo0azbwvZ0C7QPYYaBeUPXaK6ZdXEX/h9yfk
5UFvkWQvnwieuEQwRku/VOH8RbKXeUK/SP+L5C9z2H7MBoxtLkq+nyzv1Y8s
pLrlXZEBOJ1lajS29Ytcc5BrEAmJ7Pus85fXqFZ5VQzsf5mAvS9G/nIT6n7R
+AvyvgypJ9ZgLP7Cf7+p3hfOX3o7/C9tOH9piPlLO+bdd/O/KN0vCn9B/pdE
E3/h3hfJX94cX7L1Cxzgf1DmePS+jYZ5yJHVv7/+/Nzq5Tuh/741HX+2/vu8
PJLRokXE739x+nSdvWTB3CWca1PI97MV4teBPRnRXJfz992nsCkxOrv8bN7B
/93lL75g2jCS982kulTr8oCMhGrh3i8l6biuX9QBe4kgh6IgPd28Vl9QkE3H
r67GLG15FJF++btYe6gGIzc3t1Ykgz43xkmNQv+39Tz53e9+x8ZvfvMb8utf
/5pkpJ8n61ZtJGdOnQ2tY/Lz2V7BzEcfjck9Bv0wyroV/T0+c/ALDv7ST/CX
AYi/DJb8pY6TvzxX2/bAvH3v4761y7zeg9icRecvE621WsFgqvM9KLCe+90i
s35h3RRUvwB/ObxrF0nduZOsGjaazbvmyLVkPYNM4y8LBH9xeGA0/vJZBXMP
zNdh9MBc9tAu4Y6CzZuZB2PfjWoXDGT8nuvXj2oZ95ytSPSM354XOcLtZ7kY
gu2EOodwNYv+/qCLzlKN5pVPFo2G2dm0JWcvbr0vZTl7Ad8U6BfJX05J74vM
HhP8ZffQ4bb3Ret9WSZ6XyR/sbwvCntx5y/QnwTfH2CZs9howHqWIOvvXdG9
BD1MjL0I/vK2B3+ZJPgLZy+cv7xi4C+MvQj+8oIHfxkp+Iv0vgxn3hd3/tJf
8BfpfQH90sfAX2zvC2cvMHo2cOcvD0r+AuzFg78o2WOCv3S8CvkLHHSO16EQ
ZW3BmmzGzTdH/RzLgOxy1XvyL/SZ3N7tPOhcfaGyVrh9e8R7tWB9uSArC7/3
3+h4I5Lro5/X5ZUrydkqVSK/NvQzwf50bd44V39fkXF9WNFO9DkR6fteWrZM
n8tsjOR6lKTjun5RB/Swall8cvw7vQc/vHLlStN4/8xifRSRfvmPH374oV60
50qfHff5eb4c3JtKurd9jDzVox8Z3nsMGT/0FfLVshXk5LGT7vvKsrNJ9ujR
5Gy5csHeZ5CZsm6d8l5Z6efIsFu7CAbD1yV1/mLtH6ND8pfhLvzFL3vZsHgZ
m6/wtVeeQYQ9MJb/JYGv374l1nNXT33X+HqSv7A9ZLt3k1TQMFQLfjtslIO/
2BnKgsFUtj0wspMc+ItbD8xy1APzZYgemG8NPTBBaBfZMQJd7zJHGcYB2QVD
xyGRlwXjOH3mn6fPqFjMyfEIqq8lVucpNYvXe4OOOULnAtD5clxowO99ZLyF
pWGatTL2vkjfi8VfRo+xeiut3hfhfQHv/slFi6h+GeHIHeP8RfO+oN6XRVKz
a/zF8r6I3pcPBHuZIzqVZomM8pkis1yyFzf+MkXwF85eOH+ZaOAvln6p1Zzt
HXPjL0r2mPC/POfBXwYL/iK9L278pY/gL5K9uPGXnoK/cPbC+ctDHvylu+Z9
Af6SbPS/dEbdL53J/NmLfemX3/72tzMCePTG5BDz5I34eZM9YkT0zzH6TAde
gF+XagFjZyP9d+Xp+DVeI4zmHLIGDtT1QS6sZ0ZyffLz87vRv/9v+NzOd+oU
1bWBz6bNJ3Lz8vKa4fel16pLIdo7Bu+bTn/PRfJ+wGwKzp/H7wddmI9Ecj1K
0nFdv6gDcsi1DG/GCui9Nga+g/H+eRXFUUT65Q9B6Jdf//rXTf08Xy5euETa
JCWTtnS0o+MuOuD59FS3PuT9qXNJ2sE06B01shjo6zpbrVqg99m5O+5g1xW/
18KXpnD9gvgL88DUBQ9Ma5u/1FX9L8OFfpH8ZXafob7Zy8xuj7L5CuYvrzH9
wtdnmYbBGWQ1eAbZe63aml8TPDAG/ZK6bRtZNXQkW0fGHhiLv3j0wEgPDKxf
L1N6YGr46IGpauUorxL8BcaJyW9GNe/NmDiZ7E9qxnLIoN99DxuyC6Y0y8Pi
DIb3WXINI7oXb7iR9ZiAxoA9YUFrhCD7ZUJ5YYLWLFi7pN2A+15upNfwRnYd
j9BnPHj2/eRV+/lZ2uzFzh2T+oXzlyrkONWoUr9YvS+aftkF+kVk4oXqfXHy
F9n7Ukf0VvLcMZu/yL1jnL8w7VKV65cZFn9pJLz7jZD3hecGOvhLgup9cfIX
rl+gu1Lvfnm+Ftcvo63ul1Z871ht7H3hjNjJX1q78xesX1z4i/S+9BTZYzZ/
uUvNHmvMs8d6CPbSvTHVL43vdvKXRM5eQL90FAPzl7Vfbyjx+gUOOn8Zip81
uRs2MK95tM+xzMcf13XEadP7F/LOF3vPwdGjjKFE8p6sr5I+VzTdNDfSawPz
Or1/Jefdd6PKUs5o2ZJ9Ru3aDNR+JjP1n0mkuWNZzzyjz11+prq1bKTXpKQc
1/WLc0B3kHYvfE/ntg3j/bMqquNq1C8w2jbtQtrRcVdTql2acv0i9zp3apZM
Xh3+KtmxeQf8nnHoGPAqptetG+h9dnHaNOU9ju8/REbc2kV0wNxu5C+wjsk9
MLca+AvvgPHLXla88x7b5w5ZQ6+I9VdYh2X8pabNX2C8iXpgpAfmyzHjnfxF
ZpCJPWSpYg9Z2vbtZN+XX5HVVMN8IPb08wyyesgDY/fALLI8MLgHBmWQmXpg
KkAPTHVDD0w1pQfm0KChEc1zwcPPcsjKlCc76IBOxF2iB2aPGNAHw7os2UAM
hg7gL6lscKYAbOEojBtuCEzLBNXREo4XJijNougXcY3SmOaz+14Oiet5QGjE
VNG982MU2Qrws5W+F7X3hfulgNkdpz97mZvMel+Q9wX2jp1cvJhsffJp196X
Zaj3ZYlr7wviL+L74fC+VOPsBfqV3mNdsSp/kezlnRqNra4mlb8kIe9LEvue
8+6XZmr2WC01e2wc9L7UMnS/WN4XsYYi11Qs/nKr4C+tleyxAXKNRnj+LP7S
QGaPIfYi+MuvMH9pZPC+CP7yABsdOH9pgrtfMH/pxNiLxV+SdP4Cz4dkcmhv
qq9ny+9+97vhATx6Y3b8+OOPDegz5l/w3gLIHo72GQb7rDTPxX/S5/qd+L0z
MjLK0rn62qDmmWyPjPp8/rf8/Py7o7k+4HPHrwldMNF4c8A/C5lAmsbaKTUF
/RPmWJnKHoz+/SN7L6p5DD3Z86K5HiXluK5fDN/J8uUdOQ50bI33z6qojpKk
X+CA7jA/z5ihvcc4+Auss91trb3xDJoxfUaTC9kXHBqGXYdofqdpA1hfwZkz
ynvMHjoeeWDM/GWw4C9DRcaP5YFh7GWYq17R+1/e7fYY2+f+kpi3vCIyiF4T
67KMv9Sw+csbYg13iuiAgfVdrGHY6wsPjMwgAw/MYeAvVL+kbt1K9n3xJfl2
8HNsXdmtB0byF7UHphbjL5DhhHtgPjP1wAj+4sgho/PRnffeH9EcN3vRYnK8
/yCyJ6kF6xDhXTBlWRfMzlJlyW42yigMRvfBcA5zIzksmELqDZwx6D0p0WiY
oPpk9D9DZTSbRjT9NnBdUtng1+sQuoYHWOcLv77QHXqsS1e2hw9yEyK9bj9Q
DbNeel9Q7thq0R10DOkXyV9OIu8L0y9PPO3d+1JR732pZXlf5sveF/C+GHpf
5qAuJcZfhP9F975ME70vOn/h7KWJ1fsC+uX1GobuF8v7wnPHuP/FyV/GYPYi
/C8jamvZY3Uke7nF8r7A77H+Bv7St77qfYHxlAd/wd0vDwv+8iDyvzD+0gh3
v9zNul+6Mfbi9L8o2WOCv9xFR072JV/6BdbRgniWxeqA+TL0OuJnzSV67wbx
HNNzyOh4H7831RbNC1E/I+zPz7z//sjer1Qpx541OlZFuzeGzoMTC3HXJx3Z
Q4dGdV3OtW+vnyfsFbtHvN8doPUsPXnhQsTro5BXpr0PfA5jXsDVdsRCv7C9
MadOMX9WHp2zxHLkbtlCLn/zDUlv1ChQDQN9L5o3DfIBH4v3z6sojpKmXyB7
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
k3A9Nke0fpfjdE7j9lmgO2c/6tKBTOo9omcHxi6mXSR3UfeNbS3Dfz4pZcHz
UkFhL+6+l8qK70XeI/v6D3Tkjp1EuWOwd2z/65O4htZyx5ZauWO1LC8X977w
PZKy82WelZsse1/qK3vHHLljUr+Yel9qNHHkJvvrfWnm2vvyQm2+d8zyvgB7
qa15Xwz8xdIvWu+Lzl/03pdeQr9I/qJkj1m9L5y/PCT5SyMtewz1vtwr16Dk
/jHsfUnk2WN3J/H9Y7CmNaL3mKtav9BnWMdC5E3JP348Yn1hDfp9hmxkk36J
uEuFzhv0jjShLaLqqwx10PnkS4WoKyePPr/O1qgR8bUB/w5cA/w5YN9epPvP
c2bO1K9JicnAC/K4WvQLzIXpe+Xq35mg95EB79M+2xX6rK0U689XlEdJ1C9h
ZSgL/tJOdMBYHhgHf6H6hQ357LubPHJrd3LyyHH7d9CxY6xTK9r7CvITcS9X
5pl00q/BHWoGGfS/1bX1C+SQbfOZmTz13sfZ+ulYzF+Eh3+8zEx16YGR+kXP
IdN7YKaKPfiwHgx78meIedbcFneQLfMWqD0wQr/gHDLMYI5++y05MH8B+SSx
lcMHIz0wkOuk+mA4f1legXdZhvbBVDH6YNa6+GA2lREaRjCYFLHGv1XsV5Ic
BubTO9koS3IWLXbMy8/066/0whxA3fJcw9zIRqrFYmwOA8NLv4AGMWUewz8L
lanstm8M/l60+gV3uwBbwv0ubp8FcqfhOu2V2gVxl12Iu2D2ovpeEHtRPC/+
fC8rxTg09kWuXTTfvmQvoF92Pjfa8r0sM/henLljdazcsXmm3LGqwF6cvS8z
RefLuyh3bJohd+wt4XsJ2fti8r7U5PrlxVotDPxFZS8jUe/LcEfvyy0Wexko
fn85ssdQb+XTMntM4S9q70tPkTtm8xfsfbnL6n2xeitl9lgTLXsMfsc3MXS/
iOfBGz6zk0tS9hg+8vLyqtLnzHaFMYwdG/VzLKNpU6dXnf5/6ASM6PXAe0x/
d2lz9cGxvj5U37UpKCi4gt8XOs2jmhc/9ZS6dwM6CyPokYO/U5CerrAXOo8f
EetrUhyPq0W/wEHf6xE6/urgflF+HuX7BJkPalcTjCL5fEV1lET98vuwMpS7
CA9MMtvnbPMXtQdGySBL5BrmkVvuIzs2qXtxswYMiPq+gg6wgrNn7ddMP0cG
Jd1F+okeGMlf7B6YW8mk+570pV3WLfnU6sy2GEztlg7+8pJnDwz3wVg9MAnO
Hpipgr9ME3vygcFAPwWsF3/Y4k6ycsTzjhyyIxqDOSoYzLHVq8mxVavIQdAw
TW5y5pBVVnPILB8M4i9OH0w1bx9MOZMPpjJnMIzDIAaDOAxnMDaHYQxGcBiT
fjnWpSvjCfvFsDlMaXKI/ik5DGcxpWwWcwP3xXjtHwvFUdz0RShuE7l+4bzl
COJJnC/Zn9HtsxwX14npF6pV9iDusktoRMZd2JCeF/7z4J6XCpZvydIvgrv4
8b0w/ULvk2NvvUVOg3bR2YvIHTuxbBnZOXK0kjsmfS9wny6prOeO1THkjtVz
5I4x/lKtgeV9wbljau9LY0u/TBXfybcEI2W5Ywn+e18m+Ox9GY16X56TvS91
7Nyxoaj3xZE9hnLHrOyxBjJ7TO994d59i780MnhfBH95gA3ufenRROUvsvel
q/C+OPlLZyV7bMFVmJ2sH/rcD/wU0TAG9hwzcYbUVHK2UqWIXs/gOz4d5LzB
66Dv9a2iNxYtiurapNevr3RNQi5ZJK9j6Hz5zbXm25fH1aRfII+Mvt8Hynfn
xAm29zBIDQNrCdp36s/0Ov6qKD5jURwlUb+Ek6HcJinZnEEm1uE6Cv4C63Od
BX/pIvjLQzd3I6uWrVB+/tH0CSvX59Qp+zXPZZIRtyQrGWT960oGw/dkLPfp
25/TZyibd0j+Mlasqbr3wDTz7IGZjHpgpjh6YLgPZjobDS0GA+vGc5vfTlYO
H+OdQ0b1yxGxh+wofQ4eXbmSHJw3nyxr0oosFGvYeg6Z7oOROWSR+mDWOHww
ImtX5pGhdX3phWF7lkqrDGYHnWebPP2HEpsKplDak8McEhxGemJSb+Ds4kwI
/QKcw0uP6H4UN54jfTN+9YvJ56IwFzHg88DnOsRGKVLo0lV5jHleyliel10w
SkvPC7++CncpbcgbA88L8r1I7uLV9yJ9L7IzyPK9QO4Y0i8yd+w41S8pvfqi
zpcEy/ei5o7Vsnwv8wV3YezF4HvxlzvGvS/wfbNzx8y9L9L3Yux9qRmq96Wl
796XYaj3BfOXAeL3l/S+PIt6X/rg3hdgL/W5d/8JA3/Re18elrnJGn/Re1+6
Mfbi5C+q94XzF3gm+M1OLmnZY/jIycmpT581/2Y9y+ic+Hy3btHPj3r3JkHM
KWE/W97evfpc68Wiuj7Cx2/PJU+fJufuuiuqa3OB/v6F1wJ+ElF/HP2deYn+
vtGuyYaiuibF7bia9Asc9L2a0PcsUNYVvvwyUP0CXv5Lzk6YwxcuXEgoqs8Z
y+Nq1i8wJH9h+qVpspqhjPjLPWKdjjMYvn73QKtuZPF78xUPzMU33gjkvsJZ
7hfOZ5IXOjzE1illD4zkLwMZf2ntOzN5tFg35fyllcVfXtQ9MFoPzKtijdbY
A2PKIauuemAsBiP27MP68UctuIZxyyGDPWSMwYg9ZMBgjn3zDTlENcyGvv0F
g+Fr2ktNPhiLwUTug4G5rN4Hs1HmkZXFeWR8jV/6YKx9ZJLD0Hk15GXp83Lg
CMAT9iJvh+QwB3xwGOio99IvksGY9oOZ9pF57RsLR78oe8UEL1KZi8pd4PMB
d3LTL2f6DXDlLjJvbDu65nzfmNjbp+eNlZV5Y5X43kCLvVRx9L3Ie+Kb8vw+
sXwvkDsmMpOBvbC9Y3QuceLTT8mG+x7k+kVqauR70dnLfCt3rI7a+WLxlwhy
x6R+ceSOJaq5Y1rvi9QvL9cK3fsyxqP3ZURd0aXr0vsyUOyB1fmLW++Lyl+c
vS+PCvZi7R9rrHlfmoB+udvBX7oo7MXeO6bzl5wLV2d2Mj6g55A+a5bgeczF
adOifo5BF4zMooGe50izzQzd4T/T+V3doro+P/30UwJ9z3PKWiXkQkVxbc61
acOuCctLoHOisOeeCQm6B/svdA7fu6iuSXE7rjb9Agd9zyeU+55+l7KHDAlU
w5y7806Hl59+zneK8nPG6iiJ+gUOvxnKLIOsqeQvtn7poGSQcf3C9pDJzjM6
7m+RTN6f/B7Jz0P6Zfr0QO4p6OGVr5l97jwZn/y4tVap98DM8OnbXzj2VbZe
yuce3IM7VnhyFf5Sy5lDJvnLa8IDw3LIDD0wU6pzD7/NYLinWHpgLAZTle+B
+aj57WTVsNFqDhmdQ7McMs3HLxnMsRUrqIb5mGzs0x8xmJp2F4zBB/O5wwdT
zaMPpqrRB8M0jGAwMo9M7iNT88hsDrOttNAwLvplt2AKe+TeKMRhwLMOLObg
jU5fv/TFnOkcWr/43Ufmxmn03hi//MXBW4SPR567/DySM8FnhYwx02tD9oHl
eVG4SzlHz4vD81JWzxurpOSNrVM8L5W5dtF8L3B/rK7XhPteXNgL6Jfjn31G
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
z79HWvcgRw6m2fuFjxxheYZR30dly7KsPLx/bECzDjxj1GIwfB3z02n+9o5N
uLUzzzgF/SLmHziHTPKXF4V+0XPIXkngHn5nDlmSmkNWwz2HjPtgcA6Z7YOZ
Jfb4w3xtfrPbuAdG5pBpXTDMByP0yzGhX2DeePj9D8imXn05g6kIHhhzHwzT
MEofTHWHD8bSMGJeK/PIrF5LlF2l9MKU1Xth+Jz6UNfujjn5yf4DlX4YzmH4
UD0xZTiLUXwxnFuc9NAvVl4Z6o9JvcHbM+NkKTcgjsP/dNMvufSfHzb4W7x4
C/zJe114t8vhxKbG1wbvkMPvUprnjG21WFcFJWvsO/QzUfLGyrnkjQF3KW/7
XuBeAC63Qvik9gwaarGXE9D5gvTLcapfjgv98onoI1qqsxfF91Lb4HvR2Ivs
q5S5Y5rvxfK+aL6XtwUDDTd3TOcvau6Ye+/Lc+H0vujeF1PvSwO33pc2Vu/L
Yx69L6BfejTSvC+o96WrYC/JIlNS5y+y9wUGrG9dS/oFDjpP2o/nMBcnToyb
frno7Kv8DWTLxuvaiD12f8DndGHChCK9JsCx9L0+dIyM1zUpLsfVrl+gh4ie
w0/Kd5PqWFjvDuregg7VvP379c+8OCMjo2y8Pnc0R0nVL+FkkA2zPDBdOH9B
PTAsgyyJr891xgyGPv8eb/sQyT6fpehh6NiK9h5i/S+ok+r8mXTybKM2gr/c
bvXAAIPZun6TL/0C66OwTgrrpbBu6pZDJvmLkkNWC+eQNWPrto4csgSPHDLh
g5mOfDDvogylWcgHM0fs+QcNs/+z5UqWsvTxHwMGA3vINAZzgs4dU6mG+e7p
Z1x9MNgL4/TBVLd8MJjBrEZ5ZMBg1jl6YQSD0XphsB/m+IBBTv1C/9mO0nY/
DOYwNospY8wnkzzmpAuv4PqllDJS0bjg4tWHAXzG9q6oA7RQrpd+0fwtFm8p
hX0uZQRzsT8T7nVx1S/I72LiLrjnBXOXTeVk3pj9M/PMGxM/f8ldVoj7Y8/g
YWrfi8Ze4P7b+8YUu++lkup7wX0vbO+Y8L3Mk/pF873ouWPS9wL+sRmm3LEa
jS3v2VsG34vtfZG5Y/Z32sodq+XMHXsR5Y7h3pdRqPdF5o7Z3hc7d2wwyh1j
+qW+s/elj0fvy5Om3peG5t6XB3HvS2O19+Ve1PuiZo+pvS93S/3S1L/3pSRn
j+kHzIULUXcerKWdKVOmyLULew5mZuJ51N/pmBjv60PPYRGe30FW6JlSpYrs
umT17av3gv5w+fLlBvG+LvE+rnb9AkdBQcFL+HyiyfRzvb/69LEyA8X4H/q5
74/n5470KKn6BQ6/Hv6PZy9hPTDtMINJVHtgJH+5h/EXzmAGP9hfubdzN2+O
KAdRH7C+UpCdbb3umaPH2fpkX8RfnhXrmH60y+fTZrP10ecEfxklfDAsh6yW
wQODfDATsAdGySHja7gsh6yGnUP2BsohewvlkE2VHmODD+Y9ywdjMxjY97+g
aWuy79PPFAZzBDGYY4jBHBMMhq2Bf/YZ+a5XX6MPxs4j4z4Yi8NYPhidw/A1
eemDceMwei/MJsEAJIc5ZtAve5OaK/0wO8Vg2cClJIsx5ZOVsXwxJ1z8IjD0
/hjcI3OsSSL53i2rODnZ6pnB/hX5p5d+OYhYi8pbSnHmcqPt69mL+JL8jPB5
TTltMKx+l9LlFb/LFuE30v0ubj0v61C3z2rke4Gf80qFvXDuAvcF5NUdmTbd
0/dy/IsvyPbRY8P2vXyk+16qct+LnjsmfS967hhnL87csTdR7tgkR+5YkuV7
ecXEXpDvJXTumNr7MhT1vgzC3hcTezH1vjSA3pc7rNyxiHpfGtnel+6o96Ur
7n1pgntfnPwlHO9LSc8ewwfMhfEzn62hde1a5PoFfP8aY/iFzhOS4n196Hnc
Q8d/4HM716FDkV2XyytW6HPqRfFkUsXluBb0S05OThV6DkeVfWT797OMvqDu
L3itS59+qn/u9JKYbVeS9Uu4HhjMX9x6YCR/geffwpnqXsFLdF4TxP3DfFQo
j3vvhhS2PtlXrFXKHphpzzznS7+Mv60LWx/lDIbvWYfeBtnhoOaQtVBzyGpK
H0wzJYdM+vjdcsh0H4zMIVN8MNXsHDLVB9OArT3DOvSCZq3Jd6+87umDOY4Y
DGgYthZOv3+ps+aQLxo1t30wlRKceWQVVA6zQqy5Mx+MJ4eprPTCSD+M7IXR
OczZSW849UvTFko/zA6NwyiemFLIFyPyyVITm5JLCxe56xetP0YfpuwyzFDc
hpt++enMWZLRrz/nLMjfYntcNN4itQvqdYFRYOj5ZPrFw++SYvK7ePa8VPbO
GyvP7wOWsS32GR6dPsPT9wL333d9+qm+l8qq72VBmL6X2Qbfy7vi+6P7XvTc
Mel7MeaOJdi+F0u/6Llj0vtiyh0z9L5I9jJM5CbrvS8DROcL8Jdnw+59aaPm
jhn4iyN3rLG/3hedv1j6Zbxv/ZIa9LMr3keh1gWTM2dOkTIY8PzDeqCy1lxQ
8FG8r4s86PnsVq7PrFmBrF2GGhm33MK6M/F703n73fG+HsXhuBb0i/icd9Dv
wv9a51VQEPgeT9hHpHXCgJd/brw/e7hHSdYvYXlgqG4x9cBI/qL3wDzW5iGS
uk/5DIF597NHjlT48Jr5n7Jcnr6iJ4FpGPr8/9RnbvJwsS8d5hmwXsp9/K2U
PWTPC4+uzWC4h3eC9PTiHLKaKIcsQc8hs30wbxl8MFK/mHwwszQGw/bQ0Hnd
wqa3kjUDh/n2wbC1cJhX0vll6qzZZF23+9UsMplHhnwwthdG7BmS3m3LCyO8
3S69MK4cRsynsxctcczHt4qeeDYnF54O6e9QWIzmizlEdUuOh26RQ+aV6bll
cpi8M6BNTFrnIPrTrWMS6xjocbF9+XKYectuwZvkZ4VcA9Prgt7D/S5+/C4b
kN/F0fNi5Y1VVTwvMm9McpevxP0B2uUEsBfQLqjvRbIXuP/W9niY6ZfFYfW9
cP4ifS/vm3wvVZFvX+SOSd+L5duX7EX4XtTcMZu9vC5zx2qa2YvSWemSO4b5
i+Xbl94XrfeFdb649b7UV3tfejl6X4R2UXpf2hl7Xx5Qel/aq70vKHesi1vv
C7AXwd2Bwa/9esM1532RR35+/oN0rvZHSztkZRWpjz/zwQf1eeO/0nlbh3hf
F3nQ6zNK0Vb0+mQkJcX8ulx45RWdScFRPt7Xozgc14p+gYOey3zl/jt3Lvp5
uTayR4/W77Xf0s/fPt6fPZyjJOuXcDww0APTztEDo/EXkUMGa3fvjH9b+dlC
32Qgv9/ptYE+XvzaSya/K/jLHRZ/gRwyP94X2DsG66KSvzzHPDC2D0b3wMAY
V9uZQ/YSyyHDXTAyh6wpyzPSfTDcA6P5YKwuGKcP5j0XHwwwmLls1CNrBg3n
XTDYB2PIIjtB55KMwUAfB51jplENk/Jkb+6DqUS1SyU7j0z6YJh+qWj7YKw8
Mp+9MOuwF8bgh8lerOqXK2fPKv0wksMwFiN4jO6LOdq1m+veKtMANrNf+E0w
C5FeFJN35jL9OzjfTB9efhuHZ4XqmMyJk1ifjeRGe0vbPhebuUjexD/vuUmT
zX6ert35NUP9Lt5+l0qK32WdyJDTuYulX9DPfAXiLl/R+2Nlw6a270Xrezkh
tAv0EX3TpiPre1ms+F7MfS/zJHvx63th+qWR0fei5o6JNYQEnb245I7VsnPH
FO9LbcleWlm5Y7j3ReaOPVfXzh0bpueOUb0yCOWO8d6X25Xcsb4NeO6Y3vvy
JOp9edzKHmtn7n1p5N770l30Vjr5i7P35W7U+5JzwV9v5dXkfZEH+HV1xhDI
+pyPcbZSJXKZfq+0udPKeF8TfOTm5jal55SFzzE7gK6cUEP37dP55NvxvhbF
5biW9MtvfvObykK72v4FOjeC7KfAvocVKzJPt/Y9TIv3Zw/nKMn6BQ7/HpjF
LIOsreAvXj0wfbo9TU4cOa78XMEPHcg9U64cydu+3f6deD6TTOs/hq1P9kH8
BfaOe+kW2f8ys+8wtid9uNjjwfgLG61UBiP2uI+Vnt2agsGIHLIJ0uOboPpg
ZA4Z98FgBoN9MJjBSB9MQ5XByG5xgw9GdpHDGvWipFvI/iVLzT4Y0QfD1sKF
Dwb8CWytnM47973yGvmyYTNnHlkFncNUs/LIZC+MlUlWzoXDiD4Rm8PIrnc+
p87V9kRlL1osssnK2xymtM1hsC/mHNUAoAX86gY8oE9F7ZGxh8k7c3nhQge3
kf4V+DOS84C/A/2TwI14zw3wljKcuZSyfT+SPUEum+l1IMPNq9/Fy++yVvG8
2N0+as+LyBsTvhe4D+Q9saZ1G85eXHwvcN/B/be8SUuLu3DfS+2w+17mmPpe
qkbme8G5Y9L3ouSOJUj24p47xtiLI3esFWcvgr8Mw94XPXcMOl8MvS927hh0
vjh7X54QnS/O3heZOwbshfOXBxy9L+3t3pcm3r0vnVDvC/AX+L0/vPfoa9L7
gg/6/BmHn3HQdXK2WrWYz9HPdeyo+Pbp+GteXl6PeF8P/aBz2YXK/HHtWnK2
Ro3YXZe77nL4qul1aRbv61BcjmtJv8BRUFDwK3pOf1bWGHr3DvSeO9+tG+ux
1a7BmHh/dr9HSdcv4XtgPHpggL00SybrV6xTNSn9+Wbcemsw+gUyV1CH0Gmq
k0be9RBbn8QemHee9ed9efG2LmxN1NIvIofM9sGYc8hUH4zIIauJfTB8DVfm
kKk+mETFB8MykZQ9ZH58MPUVBvOBWKMGn8DipFvJAaphvPpgLB+MYDAw54S8
qLR3Z5KvGjVHeWQ1lDwynKmscBicqaz3wrhwGOyHuaJxE9hPliI4whbBYTCL
gb1SGS4cIlztsA/5TnB+2QkDS5HMxjSyqAaJ6lzoNcihuu1gUjOFt1i5yKLX
JdWQNc202IBBPJOaMRf/fhdLv1jcxbvnxeIuUtPS+2JT1x48bwy0MOxNFOxF
7htjGRL0/sN5YzhzzNT3wjwv4fheqqm+F8lfmO+luu17meLme5HZG4KhWrnJ
Yp+onjv2Asodk145nDsmfS9WbrIjd+xWNXesnjN3zNT7YvVWNpTeF9z7ItkL
8r40jqz3RfpeGH9JVHtfrrXeStNBnz8tYN8W3qNyPjk55volZ+5cfc039Xe/
+12VeF8P/YC+SHpu/21dn+zsmOYc5Myerc8jj8X7GhSn41rTL9CnSs/pE3x+
0HuekZgY7H03Z47+ffxjfn5+83h/fj9HSdcvYXlgDD0wUr9IBvPOy++Q/Dxl
DYR/TwLy7oF3H7/2ng0pvBNBPONlDtlUn959WA8dxoZkMC45ZLV5vtDYWrLL
EuWQIR+M1C+vJOAuGNRnaWAwRh+MyCHTfTDvefhgJIP5UHCYdf2HOH0wX3/N
NMwxmFeCFwbmmTDfhHknzD+XLCFpM94lKb/qpeWRcS//F5jBuHCYVYjDrJYZ
vCH8MD9o+uXMpDcshpAi8rOALUDPZXqEugUYx3mDxgBNslfzzEOOmakrEv7b
fYpnhQ+3XknQR2f6DSAFITwxuo4Bj0ta13uVPheZL7bX0PUJ46y8ZmXD87us
1blLec5dHD0vVt6YzeJ4Rl0NsmvYc7bvBbpegL3A/QXsBe43YH/0/pO+l4XI
9yK5S9h9L1U9fC/VdN9LYxffS6Lie7HYCx3S9/KSYKzwPQfmGip3bJSSO3az
nTuGfPteuWM6f1Fyx3TviyF3zK33Rfpe3HpfJHtJFjmSXr0va75ef816X+QB
e8gKCgqWK8868PHHULtktGypdDfDgHlpvK+F6YAsKHp9dinX58MPY3JdgOtg
JkXfF/KtX4j3NShOx7WmX+Cgn7kVPa9L+BwvzZsX7HcyKcnUCbOc6qdi3wlT
0vVLVD0wiL90appMxg8eT3Ivqywtn2qEwLLrypYlOVpf17K3Z7N1ScjmgX6E
PswDcwdZNv39kNplzZLP2JxCZgKNQD4YJYdM8cHIHDLwwHAfzATkg3nZ0wdj
55BJHz/2wUyNwgdje2G4XwDmgEuEhjkGXhhgMNAJAwwGNAzaR3ZCaJiTy5ax
NXTmYVi0iOwaOtyZR+bSCyM5DKzVr0J+GLme7+WHgaHPxY8OGIw6YiqSXU1b
GjPK/GiBcxMnW1llwDb0/C74b4517Wb1yMg/j3V10S+ly1h9M+xP+v/d9Mkx
qmukn+VM/wGu2WFe55/Wtbvl/eHsqaW7fhHXjHMXzrY2uvpdKlt+F9zxgv0u
KxF3kT0vmLvIeyKNPgtPyrwxpF2k7wXuu20vjGd5Y4td8sY+xp4XV99LAxff
i933Ml36Xqo7fS9TpO8F9ItcU3DxvbwimKojd6y2yPIw5Y7VCZU7disZUk/P
HbvNyh3rV989d8ziLw1x7lhbNnrK3hfmfbnLmDtm9b40UXtfuoXR+9JB9L7k
ZF+73hd80OdyN+V5d/BgoFmt+rj4xhv6PAl8+9XjfR3cjvz8/P7K9UlLIxlN
mwZ+XTIfeURfA/+Bjmrx/vzF6bgW9Qsc9LyewedYcOkSyerXL9D7L6t/f/3+
g/FMvD97qKOk6xc4/Htgllj8pZ3IoIG1uB53PEQ+mjGP5OUqnVGkAOaO7dsH
do+k16lD8k+dwmssZNITQ9i6pOQvMofMj3d/+bTZrIeBaRiUEYR9MNIDM1oy
GK0L5kW2p8T2wbxk+WBEhpHmg5FdME4fjOwGFwymGu6D0XwwLn0wNoOxOQz4
CNb1G8wZjNAvbC0c9pFJBoPyyCSDgf506PJImzadfNu6rZVH5uiF0TiM4oWR
HMbqhsF+GJXD6HPx/V3vY3PwHXSubsomCzVgP1oG1S28N8bOK9tZqiw5QrWK
iZPsFnlfMvfrmIGpQK7ZHpQPBsPEdGCAppF+FtvXUpYcoBoqZ6E5Q8zr88D+
MJktpu+3g5FFrxNwF5W5hO93cecutudF3gPA5YDPpc58j+eNAXuRecmIvRyl
993WsePtvDHke5HcZV4V8L3UdfpeRN/LbJPvxdD3Ms3F9yL5i8JeRO6Yyffi
6HxB3/mxhtwx6XvRc8e47+VmQ+7YrSx3TPpe7N4X7uPzzh270/K92Lljovel
Ee99eQj1vhhzx1DvSxfc+5KIe184V++A+AusXV3r3hd5XLlypQJ9Fv2z9dyD
uRGdy8REv5Qrx+b/2nzxvXhfA6+D6pfa9Dz/hM8Z8kODvC5ny5cnl+jvHm3u
uDren724HdeqfoHuH3puX+LzzNu7N9C8QPDyX6LzJe0ePE9H43h/fq/jatAv
kfTAgIbpQP/s/9gQsnH1dw7tWXD+PMkaMCDQ31Pne/RQ3uPg1l1kyO3d2XP9
adFNLXPI/Owdm/HMcLYeCnlAw0Q3tpWjjBmM8ME8jxlMLclg+J748WKNVvpg
JH/RfTCSwTD9koAZjPTBAIdRfTAzfPTB2F4YvmYNc7+PqnAOA2vaS5NuJgcX
LOQMBvaSiX1kMMeEXnTJYGAOCvlRjMFAnhT9TkIv4dbHn2J5ZG69MFaussVh
hH7x4YfZ2vwmx1x8X7f7SG7Kloh0ywk6z9/OuujLK76RnWjkGzgI6JDdqGfl
qEHngD9lD8oHO0S1iNu5wN+Xr7VLGfwc9ic1Z2wo3M8HnCXPcP5wvbh2ERnV
5fh+sQ2ifyccvwvTLxp3sdiL+Pl/IbxRwOdw18sJyV7kvjG43+h9t/rBx5Dn
xfa9qHljdTl3qaKyl3D6Xqa59L1MEcxT973I3DElc4wN/n3WfS8viu+/zB2z
cpO13DErN1n4XpTcsbq3Wr4XO3fsNiV3TPpejLljDfTcsbbO3DGpX0y5Y429
csfs3peOjt6X5HB6X65a7ws+6LNoOn4ugY8/FvqFzRULCvAz8K8///xzo3h/
/lAHndMuxtcnNyUl0OuS0by5nmfwn1Q39Yz35y5ux7WqX+Cg59WEnt9flM8f
8F7PjJtv1u9DuB4fxvuzex1Xg34J2wPTNJk8lvw0+fKTFYyB6Nol/8wZkvnE
E4HeG5DrcpnOgfD7fD5zHnuew3O9F/LATOjRy5d+GXtbF5YDBGui0gcz3PLc
qj4Y28cvPLtKF0wLlEOm+mAkf1EYjPDBvIH6YLAPZqrug3Hpg8EMZjb2wYj5
n/QQMA1D54lLE28m654dZOkXtjau5ZFJL/8JtI+MdarPn0+OTH2HrGiQpHAY
6eeXHGaFF4cpb+AwdOy59/6wdYo+YD6/R/SfyL4Y3BuDu2NgpJkYDNur1Y1r
DBdOA9wE97G47QeD/25XaTs7TB3queyjOgZYkYmphKttNgqfvsJdDP0uDr9L
+dDc5SvL88J//p8Lb9SGbveb88aEZx/uN2B/nybeJPaNqXljH1fheWMfaZ4X
5tl3+F4aWH0vkrt49700Zt8rk+9F9+1L34vd+YJ8L0rumOp7GYN8LyMt38tN
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
oDaDUXPIpA9mhJsPppbtg3lB98EY+mDcfTA6gzH7YKaKNWbug8FeGL4mbcoj
szgMG3VtL4zohZFeGMlhQMNs6NPf3AsjOYzcR4Y5DNUvwGFOffgh2fbor4y5
ZNIPs0Ks99sspgq5hHKSfzibzvaTbaa6BWeU8fws29uxXnTJbxA9J5jHsCHZ
heaRwT4Z+edulz7IcMehrt0tvrNFGykhOIvOWzahHpdN6DPiXDFgUpe1jOnd
VL9gn8tqpddFZS5e/S4mv4vOXWCs6/6gnTcm941J9iL0y5G1a8lKql9k3tg8
t7yxKqa8sfrc81LVzkuWeWPuvhf+/XnTw/fir++ludX3gn0vzzPfS0uH7+U5
kTmm+16GMN/LLXbnC2iXupy9PIu9L5rvRc8dewLljvVs4Mwde9gzd6y9mjvW
WGMvptyxRDV3LJy9Y9eS90UewEToMyoNP6+y+vaN6hnI5ujqM/APdB56U7w/
ayTHTz/9lFBQUHAMf54Lr78e8bXJ3bJFXVstKFge789YnI/r+sU+CCEwb5+m
zHOPHSMZrVsHNn89W6kSuUTnS9r39zz9OSTG+/PLI1b6BTIY46JVjh8nl1et
IhcnTSKZDzzAGC3TLGXKFJlugZHRogXTTfjctqxcR55I6sj1i+idZh6Yhm2U
PWRLffCXT6fPsTKAsA9GemDYHjLkg5H8hflg6mAGw9dl/ffBNFN8MBMtH0yS
wwdjMRglj0zmKZvyyBogDlMfdcJ4cRi+Jj5feBPAY72xr6phTqBcZVMmmeQw
TMdQDXN0yltk+6OPWxrGxGG+KV/N6hn5J6pZYBynusXyxcheeJGZhfti1os+
kw1iWDxGDJ3HmLgM98vYPpNIOjLxgL8v/TY6V8F+FsmDNrtwFp23SM7EMpGV
XDHb5wKM6rzYg3do4FDOW8o5e10U7mLIGfuqQmi/i+Quy8TYPnqs3fOC8saY
dlmzhhyl2uXounWsfwizF8+8MalfjHljDS3ugtmLqe9F7hsLv+9FrEHIzpfa
2PeCOl/qYPaCvC+a78XyvijsxeYveudLH9HHa7MX1ffyK8xeLN+LljvWyM4d
+//svXeUllWWt71mprttFQSKULkKEZBUZCgyBSggmSLnJDlIFFCyIGJCCQoG
FBUlmHMbQNt27LbNbQK/1pnxm5l2Tb9/vGne9c27Zs538tkn3eGp8ACevdZZ
d9NC1ZOfe9/XufZPeC/63DE1N7k3Zy/SfSkVc5PV3DGSWfnkI8n2jv3c3BdY
+NxkMfzO+hp/hn5Yp05m34N/+7d0X4vxHX3nmTNnfpHt+5lp4du/Ct6fb199
lZ5jpD4/KCkxz5H+L16dsn3/zucK/YtepJ/Gt/db7f169Gi1uvwf437IPJfH
ffaRbN93UTXSv+D1SZ8+6PM5c9Dns2bVzJoxA31WWYk+HTUKfTp0KJ3j8Umv
XujjsjKac1+bvYq5aJ4uPheGz/mHv/sALRw0gV5vHMYXmb8DGcxovh47cDi2
f7l9yRp6HjG1SRs5E0j3YNQMIdrDNBIeTEs5c0h6MCnyYJJ6MILDCAZzs9gj
U094MHwPjdxHxvfY1FUuzK2ghzHnkcFcmLsAh9nL8znuK2qBXlu/kTGYpByG
+zCkh/lgzx702uRp6Gheic1hfi2cGObFvDltJsi7NOeTcfccshjOY47/SuWb
KB5zmfRjTCaj9QiEdwhfBh9friKDIZ59FFeBfOUZ6euY/YriLCrH5TJtpthx
nuMC81yE5/JMs6vR03g9cYk710VxF87CxHMi+hZPvgvrXRh3YewlBx3Ex4O4
f3n79ju83IX0L4S9vHv8uMx5uRNwF8he2LyxPP+8MeC9CO4ivJdN4D1yU71i
r/eyNqn3kiDvBXov8zzey8wmZuYL816mAO9lovBecln/UgnnjoHPtJHa3LGO
+tyxQs/cMe696HPHumlzx6S375o7JveOpZs79nN0X0Th86Hm+Pvqn+V31zff
oE/KyzM7Nxw82PT2/4tkqWT7Plalfvjhh1b4fvyrxqgmTEj92HyxapXZ131N
zsWyff/O5wr9i1349g78js3DYPfh3Dn02ejR1Xo++/ncueZj9L/xc3FNtu87
qZrqX37O6/N58ywutHvFzfR7muz1JvN2dAbTUZtDlqR/IfyFZC8I/jItt7Xm
wcySHgzJg1EeDHVgGsM8y+rJg1kHGQzgMJDBOD2Yemoe2S3AhUmWC9NEy4Uh
18cpg6nDOMz9xS3QyXGTaJ76+4DD/L3BYVw+DOljfi9ZzAg/h/k182GOAkYA
c2KeAA7HkzwvhhyfsniM8mNO8Nx5wS1OWZ7MZRaXIcc/pJjzBdd7U6Zz18Zk
PH6+8jS/HbRvEbcPeD0nfmXylsvtuWKXqDwXNVvMn+tyVHNdrlCuy6W8d+Gu
S5TvIrjLQboaotN33GXlvLzHexfCXX6Le5dnV6w2nBf2+ru9ru68aPPG6CrQ
5o1trwedF8BexMw+l/eisRd2zSDOe1ke4b0sdOS9zOOM1sx7mSnYi+G90MwX
MXcMsBc1d0z3XkYXCP7SEbCXjtJ7GYp7Fd/cMeq+FOtzx/rBuWOa+8K8l3Lu
vcj+pWm6uWM/x71johBCf4O/rx6C311kL0Mm34NfP/SQed7z5oV+js4fnwe1
a95HjqA/pJld+otfoLPvvgsfm//Ej83N2b5v53uF/sVd+HYf0/Yg/f731TqT
6sNLL7UyYfD6gOxhy/Z9D/1L9S7Chcze5dh9j6Bhpd3pNcah/Lqj4DDKg1EO
DOlf4vJfHt9/P1pVMRptmTAHrcHHBW17R3swjZQHc73Hg0mSB0P22a/0ejCl
ksGs59eQmQdjZ8JsvkLPhNHmkdGVpzJhRC5MHTWPTM+FgRyGzYgSHOYefI56
f1FzdJrMyCUZH2CuMplJZnEYsZcMcJjf33YbenXSVM5imGNx5BLoxOjzyY7y
+WSPXaJySmBejMgyMXnMUzxnXvdjbE/G7ctcSt34tL0LyaKR889+canmrzzN
f+4peHRyFuW1WKyF3y+R46LPFXPnuVDPhee6mJ7LI8JzucR2XVz5LqbvIrjL
gUtz0H58pOyFcBeQ8yK5C+5fCHt5auosB3cxcl7wUTkv4jXMvBd93lgB4y5X
2PPGTO9Fzhvj3ssa03uppryX5W16ovX9R6C7F69GO8bPwms2Wtd/pJw7Jr2X
Jsx7EXPHNO8l1547JryXUZy/iLljkL0MEXPHCmzvxZw71g/MHeutuS+4dykW
7MU3d+x42DuWsM6ePTtI2yOFz13+mJub6nvwo9at0bmvvtL3dp89e15cs61q
4ftSod2vDz5AH3fqlPixIX/XOEf4CZ83t8v2/TrfK/Qv7vrxxx8L8W3/N+2x
2b27eveRde/u8jU2ZPu+h/6lmhZ+rfxp0ybrOf70o0/QuLYD6LVFco1RMhgw
g4cymHyRBZPMf/HnwpxEh7fsQjsmzI73YBLmwbg9mKaWB6MYTKk9TxnOIzNc
GNc8MunC0EyYfODCsGvee8Q1cDhT2eAwwoe5l7OYU5WT5EwyuJdM+jBGPswH
gMP8Hvcxv92wEb04ZHhkTsyjl/h4jOILwos5JuZsOf0Y6MlcznoDg8tAX+Yk
903enTI9Vf/yRt8Kuf8Leivm8eQvbZ/lJL89Pq/lKZO3gByXY78yeYvDc7nE
9Fz0/WJyz5jBXQ4b+S4u7nIAr2MDh8hZY2JOsnBeaO9y4gR69+RJ9OjQUZ6c
l1ydu9TV541pzgvwXraA9wDtX8B7RGa9aPPGRFYl37vJ34O+vBexb8zMexHe
y72LV6Gn9t+f+POEZE3dsWQNmt+uT4T3wtyXSs174f0LnxWvsRfAXzT2wueO
DTTnjhUp78U7d6zENXcM9y8p5o79nPeOifr222/r4vO4f5D73b/8ku7VTvN9
+OXOneZ34bnz4XptddRf/vKXy/H9+UpjVBs2JHts/u7v0J+2bjV9gmezfZ8u
hAr9i7/Onj07C9/2/5L35dtvqVdRnee4X+JzIOOx+nf8WdE+m/c79C9VX2Tu
NplvZvYun3z4EVo8bBr9Xr5WOKoFLKvtOujAGB7MrUvj81+Snnscw+cp5Npq
ujwYNU95aYQHswp4MILDCAbjnkdWnGAeGXedo+aRGbkwsIdRM8lsDnMvOWet
uBadvnV3vA9j9DAf8B6GsJjfrt+Anrq6zDOfTHkxMPMSejGPX6LcmCd4vgnk
MV5PBnAZN5+5DL1wZQvvbGJzffPscxZHsf0VdYS/D96e479SnIUt+76oHJfL
tRwXylz44xPpuThyXRR3Ib4LzHZpAFwX4buw3uUAXQ0pezk5forOXcisMcJe
OHch/cs7uH/Z17S1P+elbq7tvFwRN2+sSJ83xt8fwnsRzoucOdZAsBc+AzCH
sxfOXZLkvaxqVY7uXbSqSp8nz+M+huxbXVkxWrGX3HbW3DHau+Q5Ml8KOkj3
T5871pl/RjLvhXr7hcDbp+ylq+Xte+eOlYa5Y1Wt71i+mtojhd8nib8Pr7gC
nfv0U3N/1I3Zvk/VWfg+rdQY1RtvJMqCIbka5z77zDwPnJnt+3MhVOhf/IVv
+yV4PQzvC5lv98e8vGo7zyVzKr597TXz8XqW/O5s3e/Qv1RtfdS0KZ3RYvYu
77/zHlo+dg69lkjm6Qj+MoRfcyRzd8j8HcFfRvBsBMJgjibwX9KuJ3EfswH3
MUnyYJQH48uDgS4M248vOMy61PPIiAujfBh9HpmRC1PXzoXZwz2EO4CfYPkw
gMOQdai4BXp67ES3D8PzYVyzyX4PWAzpY16fPBU9llfi9WLMvBibx+h+jJxX
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
0yfchT2/+8Bz/tzSFTZ34b0L4S6kd3nnuefQPVe24b6LynkRvkvanBfyOofO
y038/SC4i8p6Ye+ftTnCe1HvMdq/NFTzxiB7Wdu6PGufJaKHWTqwEuS9dOBu
H2cv/DNvqLiGI9wX6b2w3mWgx3txzx3rgXpw70XNHWPeS5q5Y2HvmLvwOcmj
2jnj9u30+9D1PWnyBbz+C59LDcv2fajJwvfxLu1a9+uvow8vu8x6bIjb/+2L
L5rnyguyffsvpAr9S/LC92W3do765Zfoo2bNqu2cmLzGv335ZfM8+Nx3tezy
h/7Fv8jshk+HD6f5VOe++MLZt/z+dx+gW2+8BVVc2Yvu0e7HrxlKBsP5i8uD
iepd4vJfquu/Uw7Tuqf0YKQL4/BgaA8j55FdqRiMax5ZfTGPrCT1PDJfLoya
SebhME4fpjHuYRo782H2Cg5zmeIwgsW8vmadxmJc88kIi7G8GN7DfLB7N3Bj
6lGPQ/AYnx+jezJ1NE/mMcg1fuX2Zuzj5egrg8G80m+g9FMgS3lCO/p+nvv3
P34J8Fqcc8Q8fovTc3HkuTg9F0euy6Us10W4LiZ3Ic81WeR5f3PffqfvQrkL
7l/O4P7lhd23y9dULHdx5bxckSznRXNeXNylgTlvjHkv5ryx4/vuq/XPD1cP
M72sQvNehmvsRXkvgzX20pnNHANzx/rzuWPUeymy544J76WccxfKXsLcsWot
fM44HH/P/XfJUz76yDvTiPQ2Bnt5E//7etm+DzVZuD/rju/nv2iMqrzcemw+
GzOGzqEGf+8/vv322yuzffsvpAr9S/L66KOPfonvzwfwvpE8WVdvnekiOUbm
eTF+/DbX5v0M/QtYf/M3NLeUXEcicxu+ef55dM6etUDXV19+hR7YexhN7j+e
fq+Sa4P9+D5tymD4Hm7BYEwPZsey9Vm9VmpyGOHBqH1kwINppPaRyXlkOWIe
mdqTHzmPjF5fjp9HZnEYMMdpB8iF2Vk3msPE+TB3g3yYewwOQzwJ0sMIFvP3
MCfG5cWQJfoYyGIieQycr+XzZOpqXMbHZ8x5ZnC9DBgM6WWgX2P+Xdd6XHIV
22OxOIs2R8zltfj9Fti7uHlLfa/nYs4X03yXyxtK5nKP7Fsbx3KXd/B7/9Sa
9Tp3Ef0Lf/3dAnJe2GuU731MlPMC9o1ps8b0eWN0b6Zr3lgOmDeGV236LnGL
zE+EeS9R3su1Du9F9i+G9yL7F8N7MeeOUfaSYu5YyHzx1w8//PBr/H33Lvzu
IzO0zO9Ocs5w9r33tO9IfL45Ldu3v6aL+wantPNq/Ln/4a9+pT0+Xz/8sHme
98zFkodTWxX6l3SF++OB+D79Fd6/z8aOrdZz5i937DDPjf8Xfp5a1NZ9/Nn3
LySj9Je/RH8sLkafz5+PvsHnMr49YvTxOXsWvfr8q2jh+AWoV3E5vRbYm363
svk4hMFQ5xQymCLhwDAPZt6gCRmdF5Brm7uXrEPLB4xFs8v60dmlJINhXru+
NJNh84S56In9hzL62Q9u2al5MGIemfBgFkMGAziMnEeW45lH1sAzj0y4MPW4
yxyTC+PzYXZl6MMoJ0ZxmHsu1zkMOQc+XNgM9zHjo70YssR+MpAXA3nM7zmP
sXJjHPkx0VzG781AfwbyGsFgTl11teWn+I7i39s/33ZZbM5yhea1wPyWaL+F
M5dL9TwX1rckyXXRuYuYM3cP4G2EvR29doSXu9D+BfcuZ154AT08bCx9PcHe
xeQuwnmB3GVrPZHzUshf04K9ROW8wHljTXX2At5jwnuB88a29r0uo/c8yYe6
a/FqtK5iJFrUtjea3qQ1WoiPC9r2Qavx5wnJrMz084TMIyHei8h8gd4L2Tsm
3Bfde+lCPy8Ve2Heizl3jPYuxUbmC/BeyOoU5o5VW507d26tdR23Th3te/SL
5cvpPnvw9/6R9D7Zvu21Uficd6x2jkDOoZo3l4/NHwsK0LnPP9f21eE1ONu3
+0Kr0L+kK95b36m9Nt95B31UUlJt589kpjp5vRvnya/W1j4yq3/54IOfRf9C
Zih80rMnnQn5DT53IfPbo/oWet3p40/R6jmr6XW/nnwPNllkPzZkMP0Fg/F4
MI8cTOe8kL6FZFqybIUyNC6f5S2Q3AWSfz2RrrZoEl4kG3s+7mdIzlzac46b
+o9gs8gat9QZDOAwsn/hHIYyGN88shzBYJpqLow5jyxJLgy5rr29nnJhJIcB
Psxulw8Tkw9De5g6yuvXnZhG9Fz4wOUN0QOFV6EzO291ezGklyEsxjWnzMFj
Xp88jTv+9TQmI/wYV46My5eR3oyRL2OuU1e1Qh/tO2hxkyiO4uIqj12i/96j
gK+YS90Pw23hfovgLH6/Rc9zcXsuar6YyHXZb3gujK/x2Q38+X52+apI7vLO
iy+iM3jtbdbW5i6G77JD+C4R3MWf81LizHmh88Zy3PPGVjS0541l0rfcMmE2
mtWkFZpJV2vau0zPbYOm4TUVryl0sc+T68v6osdTZlI9d+IUWjRonPJeCuK8
FzB3rBjOHOvm8V7g3LGeGnvp0rQXWr8s7B2rrvr+++/b4x7mv8l9YX/8I/q4
Y0f5XfrhpZeis++/b54Hbsr27a6twve1mO/9l/f/i0WL5OPz+ezZWm+H//6/
kP092b7dF1pZ/Qv+Pv3DL35RpfNAwiMu1v6F1NmzZwvx/fpE2zt06JDXYctk
fT59uut8eXFt3D+zfyH+3cft2mW9v6iWhZ+jD+vXR5/07UvZypf43JHMkiMz
sele1AQ9y2effIaOHXkSrZi9CvVrPYBe6yPfmeT6H81O49cEJYMpYt+7Pg9m
1eQFqc4D9m/bTWf5kDxrOpuU5MTRxTKvSf71BM5hSCb2JHzeMZmsJm3Q/LZ9
6LlK0t9FMi51D6aF9GAW8UwJbR5ZjmsembpubM0jqw85DM+88OTC+DjMduDD
3JLCh9kjfBgPh9GcGCMnhvGYHLanbPQ4vxfjmlPm4jF4vbthI3pxyHB0FPcx
DwEeAeeW+bmMm89ATuPiNWkW/DmupfhKXe32HTE8H8VZVH6Ly2+RvCU2z6UB
61kiPBfmutjc5W7+fL9x8D6n73KGcxfSu5x56SUwI1nnLnTPmMN3ETkvjLsU
as7LxoicFzFvTOS8rIbOSwObu9B5Yzls3tjDm29J9Xly9+LVaHbjq9EsvGY2
boVm4EV6l2l8TcVrCv/8IJ8jk/jnCvl8uXni3FS/i/h9NeG99ATeS3eH90L2
jn35+Vdh71g11Y8//ngp7l+egN+Lf9q4UT8H1NnL//zhhx/ysn27a6vIPjD8
+OyEj883Tz2F/tiwIX18vsWfJcZ5xUWZh1PTZfYvJGfo01Gj0EetW6NPystT
rY87d6a5KF/h7/GLuX8h9f3333fH9+0/5Tn+n/6Evli5kp7nE1ci7WNHHz/8
74j/QuYRfr5ggXXejN8P35I5aDV938z+hc5aW7aM3i5y+zK5b7W2evZEnw4b
hj6bOhV9sXgxnU/45e7ddK/pNydO0M+Ns2fO0OtF5776KrZXgXvEnjv1Atqy
dgca2n0U6tWiH722R67zdef7rSGDIdcFe/NrhNCDqXB4MM+eeDrx9//6SdfT
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
qzqcGMVixjq8mN6sjxE8hu8r+//bO5vdNpIrjOY5LEvUE9j6FynJ/4E8ySoe
L4IEsJFN4FnMdrJLVklWM5tkH29mFnmDLALoGYLkKeyHcFRkV9etW/dWN+Vu
kpbOAQo1hMcUKVEGL78+9eVuzNQ5p8zJYxqPwMpjvP6YJ+Lz86dGHqM9Gff8
sq2aL+P3y+ieGZnT/CLzONL1ZlZeY+U2v33wfL7+8Ovfz+eZz8lnQr4S1p/D
vPLi69bbsfcyR+nKU+weFsdfuae+j6qfpZqzbB0WXov+2VpeS3udWPM6ka8f
y2+52NY9Lr7fUpwr5nguXp/L3kCZC54+AAAA3AY+fPjwuyFmmJDFeH0x9XPK
ZpkXI3tjrPPKevkx8T1n33PLLE/m/mHq/KjkMla/TM2bydfC49C5Q82nsfya
vJ9m79NvHjz79O7F63lOE2absIe5JK5wO/z5u+dfX/+/z4v+lGK/V/arWH5K
3Vfp568s47H0yVmyvpatw5TBGc5Ulrc0r59H4jWl+1tKv+XE9FsKx6V53R/t
zDo9lyEcfa4XAwAAgNvGUFlM6Lxc1ouRbkzux/TIYyp+TMpjTgpHxuqR8XOZ
ozaP0b5Mdo5Z9Twz61yz8nwzy6fJ8xrfrynPQ9sv5hud63i3rV2e96X9lF+q
x1fzVeT5YDJX+ar4XtU8lvLcMNtnMfpa7vteS7/+Fs9vOXX8lrLHJc9cFr8P
B+05fvF3hswFAAAAoIuhrieTXsx8lpnkWcx+8zlzm8fsiDxmZ+rkMXU/Rnsy
MY+5EOdD5T0yx6Yno/tknpnnl/m5jJ3PpPPMpK9xqbtJlE/z8t6e4dWk3Mby
a1a5tJ9i9a4U/StFD4vIVzp6Wcp85SB3WXTOovpaql6Lep1cGHmLfJ3NKn6L
7HFJeYt3rths/vsQ85YhPZfQ+7Tuf1MAAAAAxiZkMdfvfa6GmGPeNH0x1Txm
Ustj+vkxtf6YuB6Jz9Mfbx+bZ5c9kZ5Mz1ym1i/zc5kXZNeZdeU0Ka/x+mjM
dU/lHIZ3s8xu3V/nY8h6V0pfxcpVcn9F9rIcZN/XF0vmLNlM2vx8y5zlOD9H
rOht+Ry/ZWr2uLTnik3yc8Vezl59+un9P8lcAAAAAJZkqOvJ0jVlr5o55mwx
x0ya92zZOWXL9MZU+mMaz9/PY6wembJPxs5l5Dlmfb2Zwx75jDff5N6H5dX0
3b/ayvMQ7/ZN7v9S7K0DlD1+Yz6p5Cupl8X2WNqc5X4/n+VJ83MtvJait+XY
dluanMXrbzlVeWHyW+weF+24hDXEtWLNotMFAAAA7ixDnLMcs5gf/vp3J4vp
1xuT3Bjlx0xkJpN6NrI8xvJkdnJX5nEll3kqfJmnsVdm28tm6j0z2Wr9Gat/
xvZprNxG72Mt6+u5Sz2fbL+f97BIfyXlK0efdC+L5bGEn4M8N6zmsySvpTxD
7KJ5fcjXi+5vyfKWnn7LUSVvCb8DoYfyf8OciYyjDwAAAPCzYbMY85yywo1J
vTF9/ZgTfV7ZdtyTp2BlMufic3fdJ7PYj4rzy2QuY3szYm2V+UzqnDksPI6a
T9OV20TPxr69L/pr6rf137P3Mj/xcxTtrXT7K/55YbbHkvssR0VPi+5rSV6L
1dtyUngtud8yLfpbyh6X3G/RPS5DnisWM5fwe7rufysAAAAANomhspg4x3z3
7Z+KPGZvV1xXVvTG9PNjpCPTXldW8WSi31C6MnmfjO3L5LlMeZ2Z7894vTMy
r3mxVXo1+X5geDYq72jXkreN+9NfT/spxXlgW/7ze6G+D26+YngsyWexcpby
/LALtdqcxfFadN5yKl5fJ0be0tdvCa/voRwXMhcAAACAbobMYuIcExz/Pr0x
vh8zc84sm+ZnlmXnlpXnl51vW50y6fP6PJex+mXq3oznz8RV5DRVr6aW3+g9
+STaL+m6bd2f/XXF4xOP13s++fM/cv2VPh6LPjdM+yy6ryXlLen8sNZr2ZZu
y1TkLdMyb6n6LbMsT1zkLa8+/fCXvw02t+DoAwAAAPRniM5LufzemH79MTKT
SX7MLPvcvMuTyX2ZE9OXkdnM4+28X8bMZ6Q7o3Iafb5ZzaWxcxt9DtpRJesY
YumvUz4OnaPIPMXyVjx/JS7bY7H7WUqf5cT1WXp7Lc05YnHlectZj7zlvJlb
BnPzyVwAAAAAbsgYWUyYY4o8po8fI/KYm3kyKY+p+zLlOWa2N5POM5P5jOfR
+Ct5HzqvSf0mybPx9lquU9ut+9NfV/opz9Tj1b6KzFP6+Cuux7JteyzWuWGt
z2L0tXhei85b5OvqsMhbUn+L9luGzFvIXAAAAACGYai+GJ3HvH39jXJjoh9j
98ckT0Y7MiKXkZ7MRLsyuS9j5jLbZS4jnZncnbH9GS+n0f0zaT/K9nidlZXd
LLMsz+SmSz4uy1PxfBU7V1kuX8lylqrP4vS1mL0t9llihyJvOVhh3hLmFjIX
AAAAgOEYOouRmcx33/6x9fwXfkzeH6M9mcKR6eXJlH0yvi9j98vk+Yzjz4gV
vQ3dP+P5NP3OP1vtqj2+9PhLX6XwVtTS/krm3Xs5y07dZ9F9LYXXMpFeyyzz
WrTfot2W6Lf8OKCXz7ViAAAAAOMz5hwT+2P21Ep5zPniM/Hd5CN0ezJln8zp
JHkQli9jZTOFN7Oz6BOJOYHlz+gl+0nkHvMJM69xfBu933RZ99dnycct8xTd
v6KX/H7JPX1fax6L9FmmZc5i9LXYXovf23LQvM7G6m/hWjEAAACA9TDGNWVx
jgn9MZezV20e83A3fQZun1tm9ciUfTK+L5POMDvdNryZbd+bsfIZ2Ttzrl2O
+75PY/k1j9rzz44zX2T8XeQnhp/i9q4Y/Suev3Jzj6XbZym9lvT68HpbZNYS
VrhG7L//GWduCedjrPt3GAAAAOAuMuYcs3Bk3hUdMvvi8/GsR2bX9mS888v6
+jJTkctYPTMynzlTnkbWP7Ojrz2reTXJr9H742K/6Up/X96f/XXLHMXqXcn7
V/R+2l4HVs9XpMdi+CzG+WHza8PcnCV5LQcT5bXE6xR3z0ZzW+TcwrViAAAA
AJtB+Dx5qO5La5bJHBmnR6bmyaTzy2xfpsxlZL+M4c3sJP/C92dKj8bPa9L7
/tKv6dqTf9Nnl/mIfdvabT+l6quoXKWPv1J6LHk/S1dPi/ZaDrKlXisx17ve
L6e/Gm1uCYu5BQAAAGDziG7MmHNMuLbs4e5Fb08my2V2Yy5j+zK985lJ6V9M
lT8zE7mClTe0eY1wPrLcRvXTZPnNiHv+9YzHY3gqlq/ieSuev6J7Wcp+lvq5
YclnsftaDsS5dvviNRPylp9GcPKZWwAAAAC+HMZy/OUcE64tC5lM1iPTnFtm
9cnsT2auL3Oocpn5f3d6MzKfyZc+30yec2blNcmrsf2avkt7JX33ZdZM7LkX
lD8/7a3kuUrur3TmKzt5P8uR+Ln1ylkmKWcJr5PL+TViw/a2GOsq/B6s+3cR
AAAAAPoz9hwjZxnLk7H6ZOq+TJnLlPnMtDOficvMGITXofMay6+p5TdjLvn1
/ZWeR81XsbyVm+Ursp+l22fROcvcxx/hHDHmFgAAAIDbxdjXldVmmSyX6fBl
qt7MxPBmOvwZr3+my6vxVpZv7Hh5Ts+9cn99H4/lqXj9K2a+Mkl7/L62Ocsk
91h0P0uXzxL7WkLOsoKZZX6dGHMLAAAAwO0ivL8Lnv/HEc4rWz6XUeeY7eaf
45f5jN0z4/szyqOZ98+IHppJmUdMtV+jPRvTu/GX65n0XeJxyMdn5Sin4vnp
5231sHj+iu5lsftZzrKf25pyFs4TAwAAALhDhFnm+v3f+7HfY8ZZJnj/b65n
mQeTc9Er0+QzE7tfpurNKH/mUPozatcuh8xrarlN7KdJPTX+7ucguW9SnutV
7vbXr+QolXUkl+WvdHosfj+L9ln+/a+r0V9LzC0AAAAAd5tVODJ6lgmfz9dy
mT2Vy+wrb8bzZ7zema68RuY2ll9T3p722k87bpe79/WknzJ1H7/lq1TPB2uu
3TM9ll3tsZxlP5+Ys6xqZolzC72TAAAAABBY9RwTZ5l4jtkb6czMl+HN9PRn
zJxG+TRlH02Z3xyL3fJtWn/EW8v++UTvdp6U+0D58/Ges/ZW4jLPCZvkHkv4
OVzOFv0sq7o2TC7cFgAAAADwiI7M2K6/N8+Ez/O78pn9bJ3ZvTOqf6bsocn7
aPLzz/Tu5zjeXstHrNtyr+UnMkex+lYO1fO1vBXPX7E8ljE7JbuyFq4RAwAA
AIBlWJXr3zXPRHdm4cvk55pZ/ozt0Vg+zZnyPWZFflPLccy103F7ySUfR7nk
OWC2r2LmKspfCd/Py+kiX/nxH+N1STK3AAAAAMAqWNX5y33mGfOM5opHY51z
1uXVeLvONdpd5x/ebb3E3y/ykq5d9OnsG3nKvspT9Lpcg7/SNbPgtgAAAADA
0GzKLCNnmjDP+B6N5dOcK7+j7tf0XQc99xsv8fisxy+fX3i+D5s5Jcx68Vqw
TZhX4mJmAQAAAIBVcv0e9OmqzmC+yVwTZ5vwvj3MNm9ff9PmNLW8RuY2ei/X
2Wfetpf2UWrr5QbPKMa64vowAAAAAFgnIZPZ5FnGmm3Ce/ww23zfzDYhtwlZ
ReqnKXtq/P2s8XGcfeL9ef73vfsPj+tyuphRvv8yZpRs4bQAAAAAwKYizi/7
ImaZ2owTV5gV4orXqsVcJ2Y7cYUZ420zC8X/Div+efw7c1de3Fe8//g11/38
mVkAAAAA4K5xW2YZFjMLAAAAANwt1Cxzte732qxh5pWPjc9CvyQAAAAA3GaY
Z768FeaV8PMK88r17afrfg0BAAAAAKwL5pnNW/F6MPIVAAAAAIA68Uyz5rN+
5pkVzyvr/vkDAAAAAHzJMM+MN6/QIQkAAAAAMC5hnokzjbzurHHK1z4bbMpq
nJXWWwnfq4+4KwAAAAAAG0OcbcJ79bsw2zCjAAAAAADcTmqzzabON2I+YUYB
AAAAAICCOOfEa9TiinNPWNF1DzNFXB8Xbk7Meq7E7fdx9ohL3le8//g11/38
ATaB/wNBJm2M
    "], {{0, 420.}, {816., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{401.2402597402642, Automatic},
  ImageSizeRaw->{816., 420.},
  PlotRange->{{0, 816.}, {0, 420.}}]], "Text",
 TextAlignment->Center,ExpressionUUID->"45ca76cc-28f1-401f-99c8-ba12e1478f3e"],

Cell[CellGroupData[{

Cell["The Wolfram React Boilerplate", "Title",
 CellChangeTimes->{{3.920894142151179*^9, 3.920894159635481*^9}, {
   3.920894388867655*^9, 3.9208944515770645`*^9}, {3.9332451222967844`*^9, 
   3.933245131661585*^9}, {3.9340214557702637`*^9, 3.9340214569671097`*^9}, {
   3.934021497005512*^9, 3.9340215352755737`*^9}, {3.9340223713772125`*^9, 
   3.9340223716521645`*^9}, {3.936681840846312*^9, 3.9366818589028997`*^9}, {
   3.936726159611093*^9, 3.93672618132244*^9}, 3.9379716655966578`*^9, {
   3.9380285608215847`*^9, 3.93802856156249*^9}},
 TextAlignment->Center,ExpressionUUID->"28529afc-3c16-4158-b86f-7ae84eac1bd5"],

Cell["\<\
Building cross-platform applications with computational intelligence\
\>", "Subtitle",
 CellChangeTimes->{
  3.921165072571169*^9, {3.933245134718528*^9, 3.933245149903206*^9}, {
   3.9332708337830563`*^9, 3.933270833846443*^9}, {3.9340226784431458`*^9, 
   3.934022684373333*^9}, {3.9366919394328527`*^9, 3.936691939557987*^9}, {
   3.9378486365841084`*^9, 3.93784866697248*^9}, 3.937848800919333*^9, {
   3.938082535182577*^9, 3.9380825354761133`*^9}},
 TextAlignment->Center,ExpressionUUID->"45fee397-5a76-4e67-9c40-7817723ff842"],

Cell[TextData[StyleBox["Antonis Aristeidou | WTC 2024",
 FontSize->36,
 FontColor->RGBColor[
  0.5294117647058824, 0.5294117647058824, 0.5294117647058824]]], "Subtitle",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938035811207512*^9, 3.938035834654037*^9}},
 TextAlignment->Center,ExpressionUUID->"6e55df08-a48b-4a3e-8bd7-96daaad169c2"],

Cell["", "Text",ExpressionUUID->"a3bb9a6d-0ad0-44d4-800b-2df6ccaec3a1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b600b26c-d45a-4a3f-9fdc-7c694c2d24a4"],

Cell["5 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938145688149681*^9, 3.9381456899328117`*^9}, {3.938145969992659*^9, 
   3.938146001311562*^9}, {3.938148084268889*^9, 3.938148089324198*^9}, {
   3.938152958678515*^9, 3.938152959167871*^9}, {3.9381638222324343`*^9, 
   3.93816382784096*^9}, 
   3.9381813989205112`*^9},ExpressionUUID->"cbe4d6aa-d589-4633-a309-\
ca0775f2075b"],

Cell[CellGroupData[{

Cell["Preamble", "Section",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379918633095903`*^9, 
   3.9379918762559958`*^9}},ExpressionUUID->"ee18775b-2335-4f1f-b7df-\
57e50fac12c7"],

Cell[CellGroupData[{

Cell["What is a framework?", "Subsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.483202458956058*^9, {3.514309203943825*^9, 3.514309209861143*^9}, 
   3.788017995841346*^9, {3.937985344717988*^9, 3.937985346085917*^9}, {
   3.9379854700463753`*^9, 3.937985498519979*^9}, {3.937985567205896*^9, 
   3.9379855744107924`*^9}, {3.9380282860146093`*^9, 
   3.9380282917737103`*^9}},ExpressionUUID->"ba6e4cb6-0846-4d11-9259-\
4eecb6fbab52"],

Cell["\<\
Frameworks are a repeating theme of this talk so before we proceed, let\
\[CloseCurlyQuote]s define what we mean by framework.\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.9332453452899075`*^9, 3.9332455156265144`*^9}, {
   3.9332455780820103`*^9, 3.9332455979932632`*^9}, {3.9332465634828796`*^9, 
   3.9332465804755917`*^9}, {3.933247317712223*^9, 3.9332473414463367`*^9}, {
   3.9332473912019196`*^9, 3.9332474062134724`*^9}, {3.9332477904489784`*^9, 
   3.933247790452976*^9}, {3.933247832317625*^9, 3.933247882740755*^9}, 
   3.933247919578785*^9, {3.936708011421554*^9, 3.936708324651778*^9}, {
   3.936708383346067*^9, 3.936708657564033*^9}, {3.9367087317032127`*^9, 
   3.936708745377736*^9}, {3.936708840758897*^9, 3.936708858020339*^9}, {
   3.936708987686612*^9, 3.9367090619980803`*^9}, {3.936709159390505*^9, 
   3.9367094036699047`*^9}, {3.936709443945594*^9, 3.9367094725545187`*^9}, 
   3.9367095185076027`*^9, {3.936721153623376*^9, 3.936721177297739*^9}, {
   3.936721525369176*^9, 3.936721591105054*^9}, 3.937973182285349*^9, {
   3.937977048893025*^9, 
   3.937977092363284*^9}},ExpressionUUID->"b718e72b-1063-4ceb-839c-\
30bc1d9293e2"],

Cell["\<\
A Framework is a set of pre-build and reusable set of libraries, tools and \
conventions.\
\>", "Item",
 CellChangeTimes->{{3.937985865640664*^9, 
  3.937985936624071*^9}},ExpressionUUID->"0e16071e-f2c5-4675-8ef8-\
554e3780ee39"],

Cell["\<\
Frameworks often aim to extend the core functionality of a language.\
\>", "Item",
 CellChangeTimes->{{3.937985865640664*^9, 3.937986028949931*^9}, {
  3.937986079558641*^9, 
  3.937986116865757*^9}},ExpressionUUID->"3ce18277-2793-4e2b-9bdd-\
6a8f9434f134"],

Cell["\<\
The often add abstractions to make code easier to write or more robust.\
\>", "Item",
 CellChangeTimes->{{3.937985865640664*^9, 3.937986028949931*^9}, {
  3.937986079558641*^9, 3.9379861398311653`*^9}, {3.937986171290965*^9, 
  3.93798617669172*^9}},ExpressionUUID->"ae11d090-e48e-4213-a5af-\
7bde67366afa"],

Cell["\<\
Larger frameworks can introduce completely new tooling, syntax and \
distribution methods.\
\>", "Item",
 CellChangeTimes->{{3.937985865640664*^9, 3.937986028949931*^9}, {
  3.937986079558641*^9, 3.9379861398311653`*^9}, {3.937986171290965*^9, 
  3.937986203539218*^9}},ExpressionUUID->"994db237-3144-412e-b1cc-\
821df685acac"],

Cell["The big frameworks making up this projects are:", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.9332453452899075`*^9, 3.9332455156265144`*^9}, {
   3.9332455780820103`*^9, 3.9332455979932632`*^9}, {3.9332465634828796`*^9, 
   3.9332465804755917`*^9}, {3.933247317712223*^9, 3.9332473414463367`*^9}, {
   3.9332473912019196`*^9, 3.9332474062134724`*^9}, {3.9332477904489784`*^9, 
   3.933247790452976*^9}, {3.933247832317625*^9, 3.933247882740755*^9}, 
   3.933247919578785*^9, {3.936708011421554*^9, 3.936708324651778*^9}, {
   3.936708383346067*^9, 3.936708657564033*^9}, {3.9367087317032127`*^9, 
   3.936708745377736*^9}, {3.936708840758897*^9, 3.936708858020339*^9}, {
   3.936708987686612*^9, 3.9367090619980803`*^9}, {3.936709159390505*^9, 
   3.9367094036699047`*^9}, {3.936709443945594*^9, 3.9367094725545187`*^9}, 
   3.9367095185076027`*^9, {3.936721153623376*^9, 3.936721177297739*^9}, {
   3.936721525369176*^9, 3.936721591105054*^9}, {3.937986235657043*^9, 
   3.937986258220479*^9}},ExpressionUUID->"60a2ed65-4d5e-4adc-832e-\
3d96de8e028d"],

Cell[CellGroupData[{

Cell[TextData[{
 " ",
 Cell[BoxData[
  GraphicsBox[GeometricTransformationBox[
    {Thickness[0.00045578851412944393`], 
     {FaceForm[{RGBColor[
      0.3803921568627451, 0.8549019607843137, 0.984313725490196], Opacity[
      1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
        3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
        0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxtlE1IFGEYx4dC8bCEaKAdvXjytqdAYg51qQh11thBBF10dLesaWdXV3d3
fMeV1YPKhqdBkQEjOkQEnbotJB5KwsqL0CGoowRRhJ70Xf//xXdkF5Znfs/3
+7wfXYmnA+NXNE0z5b8m5W/E+rqon38tp/UQC7smq3srJei7p2oy8H2vJvXo
hxTskQX47ydgP/QgT+LQHwv4HcXAO4J2A3mWBPKXDfjdbsiBf8OETIa4Hq9H
DRP5AwFZNdkf+303BH2vB1kZhb7DQ72HFuQ1+pcm4KfRvzoJ+2/Wu5pCH/3s
J5lEvfvzsP+dBP8qIu4lOVJU61X3egqQvWOIu5eH3UpAHysi/81h6G8xfzvn
cUc0Yrl/nO83N8zrBeaPs9856J0R6Jtz5Dh4N4u8vsH5ZBqxXAfrm1mV5f7N
sA77fzDLeSXAT3LoTx8Dr82o8wn899Pq/DStL6vOV54jR52/rMRz3JyC3wZ5
l/EiDVmZQF+PabdYr4v2YBR6N805DrEv1js0wWWH8VzvjgP/qKnO5zLLDAbk
sqOytDO+PYZ8L+rrGYT+p00787k2++E8rWdcb4pxj7gfU+D/4/D3bJUv7n+d
K9zXCOML05wX87/hPpVt+L/Kw37Efr7w3L1NQ38wD+50wC28N8+53g6e285M
mPezYW7NIf6fy/2YY37eo80C8v5xwd/Zx3W+K3eFyoG/KsL2j9Q38V6dUv+Z
/f/g+/CJ9dsWwNu8t1se6r7mfNZKsOd5jvG+Sn1G5fP5nwExcFqk
        "], {{536.0999755859375, 229.8000030517578}, {532.4000244140625, 
        242.6999969482422}, {527.7999877929688, 256.}, {522.5999755859375, 
        269.29998779296875`}, {518.5, 261.29998779296875`}, {
        514.2000122070312, 253.3000030517578}, {509.5, 245.3000030517578}, {
        504.8999938964844, 237.3000030517578}, {500., 229.5}, {
        495.1000061035156, 221.89999389648438`}, {509.29998779296875`, 
        224.}, {523., 226.60000610351562`}, {536.0999755859375, 
        229.8000030517578}}, CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQQHziypcwDTLKUOYBENKP8OlL+iFkQvmLmyDEQ7
GCvXQsQzyiHqTGogdE05RN65GiLfUQ6hA6qQ+QlpcZXI/ANnciqQ9TMwNJRD
7MuEmvcbau/qMoh4ZRlE3YNSiL4/pRBxzlKIumaouy1KIPIiUPHkYoj4Bqh4
TxFEXLgU4q5thaj6HxRA7YfK8xVAxCvKoO7Og/B/QN13OQfZHwlpYdkQ8Wyo
/3SyIXRMJUReLBs5fGD8BTMdq5H5DsbGNcj6GRgUaiHiwVDzlkDj40IORJ9a
HYROy4OoW1wHDZ8CiHqZeoj4baj/uuuh4VIIoT/UQ/S3FSHLA91djKrfGBqO
SOkHAET+joc=
        "], {{522.5999755859375, 323.29998779296875`}, {528., 
        336.70001220703125`}, {532.5999755859375, 350.1000061035156}, {
        536.4000244140625, 363.1000061035156}, {523.2999877929688, 
        366.29998779296875`}, {509.5, 369.}, {495.20001220703125`, 
        371.1000061035156}, {500.1000061035156, 363.3999938964844}, {505., 
        355.5}, {509.6000061035156, 347.3999938964844}, {514.2000122070312, 
        339.3999938964844}, {518.5, 331.29998779296875`}, {522.5999755859375, 
        323.29998779296875`}}, {{421.20001220703125`, 430.}, {
        411.8999938964844, 420.3999938964844}, {402.6000061035156, 
        409.70001220703125`}, {393.3999938964844, 398.}, {402.3999938964844, 
        398.3999938964844}, {411.6000061035156, 398.70001220703125`}, {
        420.8999938964844, 398.70001220703125`}, {430.29998779296875`, 
        398.70001220703125`}, {439.6000061035156, 398.5}, {
        448.70001220703125`, 398.}, {439.70001220703125`, 
        409.70001220703125`}, {430.3999938964844, 420.3999938964844}, {
        421.20001220703125`, 430.}}, {{346.79998779296875`, 
        371.1000061035156}, {332.6000061035156, 369.}, {318.8999938964844, 
        366.3999938964844}, {305.79998779296875`, 363.20001220703125`}, {
        309.5, 350.29998779296875`}, {314.1000061035156, 337.}, {
        319.29998779296875`, 323.70001220703125`}, {323.3999938964844, 
        331.70001220703125`}, {327.70001220703125`, 339.70001220703125`}, {
        332.3999938964844, 347.70001220703125`}, {337.1000061035156, 
        355.70001220703125`}, {341.8999938964844, 363.5}, {
        346.79998779296875`, 371.1000061035156}}, {{420.70001220703125`, 
        163.}, {430., 172.60000610351562`}, {439.29998779296875`, 
        183.3000030517578}, {448.5, 195.}, {439.5, 194.60000610351562`}, {
        430.29998779296875`, 194.3000030517578}, {421., 194.3000030517578}, {
        411.6000061035156, 194.3000030517578}, {402.29998779296875`, 194.5}, {
        393.20001220703125`, 195.}, {402.20001220703125`, 
        183.3000030517578}, {411.5, 172.60000610351562`}, {
        420.70001220703125`, 163.}}, {{346.70001220703125`, 
        221.89999389648438`}, {341.79998779296875`, 229.60000610351562`}, {
        336.8999938964844, 237.5}, {332.29998779296875`, 
        245.60000610351562`}, {327.70001220703125`, 253.60000610351562`}, {
        323.3999938964844, 261.6000061035156}, {319.29998779296875`, 
        269.6000061035156}, {313.8999938964844, 256.20001220703125`}, {
        309.29998779296875`, 242.8000030517578}, {305.5, 229.8000030517578}, {
        318.6000061035156, 226.6999969482422}, {332.3999938964844, 224.}, {
        346.70001220703125`, 221.89999389648438`}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQQOxswFDkB6wcyNpRB6ZrYDWOZACYg+cGZPhgNY
XXMxMp+BoaMImX/gTE8hsv6ENL8CByTzgeryoOoKIPJueRB55UKI+J1ciPg+
qDmVuRBaEmrPm3wIfyKUb1MIUa9WDDGnuwhCTy6CuO8G1L0yUPUypRD5w1D7
QsogtEoh1B1lEPP6oO59U4rsfnD4AAAvWVRL
        "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQYJxQ5gekEdiE5IaysC0Q7GynUQcY0iCO1RA6IX
zCwE8w+ceVIJUddcBNHnVwk1B6p+QwVE/jBUnq8Cou9PMUQ8GiofXAqRnwbl
7y6DqNsD5U8uR7WvuALijo9VEPGQSgh9pxoi710OkT9YC6ETSyHip+sg6kRK
UPlniiHqTkL9OwHqvt1QPlL4AABCPU0U
        "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQQLZko2OgDpA2fuVIJoB2N7MB/IqoGICzRCxKXr
IPwlDQ5gfTOh/B4wPyFtWx1EPLcBov4wVN4DhZ+Q5laPzHcwjq6F0LtrIfoD
qyH0TShtWAPR964KwheEqn9cCRF/BtNfAXF3QD3E3ikVEPFgqHsjofIfoO7h
roDoZ4L6f00Fsn8ZGDwqHdDDBwDLG1Fp
        "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQQLZvo2OYDpjaUg+sAZjiYI/aYUIr63EUIrljmA
dRSA+Q7GwWB+QpoTVF6yFMJng8pfLoao39MAMa+lCKKOtREiblEIEXdohOh7
lg+Rz4Xyy3Ih8nug5t/MheiDuC8hzS0PQvtB3bsnD6IusxmiLqAAIq7QAqF7
CpH5DAwdRRAawncwbi6GyGc0Q8w5WOKAHj4AcZBRjA==
        "]}]}, 
     {FaceForm[{RGBColor[
      0.3803921568627451, 0.8549019607843137, 0.984313725490196], Opacity[
      1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}}}, {{{466.6000061035156, 296.5}, {466.6000061035156, 
       321.7394104003906}, {446.139404296875, 342.20001220703125`}, {
       420.8999938964844, 342.20001220703125`}, {395.66058349609375`, 
       342.20001220703125`}, {375.20001220703125`, 321.7394104003906}, {
       375.20001220703125`, 296.5}, {375.20001220703125`, 
       271.2605895996094}, {395.66058349609375`, 250.8000030517578}, {
       420.8999938964844, 250.8000030517578}, {446.139404296875, 
       250.8000030517578}, {466.6000061035156, 271.2605895996094}, {
       466.6000061035156, 296.5}}}]}}, {{{1, 0}, {0, -1}}, {0, 0}}],
   AspectRatio->0.8945243582742941,
   ImageSize->{97.7687690153309, 87.45654536270662},
   PlotRange->{{158.59076827398508`, 
    672.6371749443164}, {-525.4499775823675, -65.62294553238263}},
   PlotRangePadding->None]], "InputOnly",ExpressionUUID->
  "33db9200-92fd-4776-b38b-8f83c9fad0b9"],
 " React"
}], "Subsubsection",
 CellChangeTimes->{{3.9367094847700644`*^9, 3.9367095057651443`*^9}, 
   3.936722862462431*^9, {3.937973392345525*^9, 3.937973410292115*^9}, {
   3.937985371605001*^9, 3.9379853927911663`*^9}, {3.937990439824308*^9, 
   3.9379904819911137`*^9}},ExpressionUUID->"14f24dec-ee22-4ebb-b1b3-\
a7997ec792d4"],

Cell[TextData[{
 ButtonBox["React",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://react.dev/"], None},
  ButtonNote->"https://react.dev/"],
 " is a JS framework originally designed by Facebook to make reactive webpage \
design easier with a focus on component-based rendering. It also introduces \
",
 ButtonBox["JSX",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://react.dev/learn/writing-markup-with-jsx"], None},
  ButtonNote->"https://react.dev/learn/writing-markup-with-jsx"],
 ", a new file extension and syntax for writing React code using markup-style \
code."
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.9332453452899075`*^9, 3.9332455156265144`*^9}, {
   3.9332455780820103`*^9, 3.9332455979932632`*^9}, {3.9332465634828796`*^9, 
   3.9332465804755917`*^9}, {3.933247317712223*^9, 3.9332473414463367`*^9}, {
   3.9332473912019196`*^9, 3.9332474062134724`*^9}, {3.9332477904489784`*^9, 
   3.933247790452976*^9}, {3.933247832317625*^9, 3.933247882740755*^9}, 
   3.933247919578785*^9, {3.936708011421554*^9, 3.936708324651778*^9}, {
   3.936708383346067*^9, 3.936708657564033*^9}, {3.9367087317032127`*^9, 
   3.936708745377736*^9}, {3.936708840758897*^9, 3.936708858020339*^9}, {
   3.936708987686612*^9, 3.9367090619980803`*^9}, {3.936709159390505*^9, 
   3.9367094036699047`*^9}, {3.936709443945594*^9, 3.936709474346292*^9}, {
   3.93670952035846*^9, 3.936709521021367*^9}, {3.936709694532237*^9, 
   3.93670969453336*^9}, {3.936721640974965*^9, 3.936721679134532*^9}, {
   3.936721945960343*^9, 3.936721954606977*^9}, {3.936721987445942*^9, 
   3.9367219991394053`*^9}, {3.936722087730865*^9, 3.936722093009082*^9}, {
   3.936722151952738*^9, 3.936722156856884*^9}, {3.936722218609378*^9, 
   3.936722258742951*^9}, {3.936722385855562*^9, 3.936722423787212*^9}, {
   3.936722592746237*^9, 
   3.9367226004058933`*^9}},ExpressionUUID->"096bdfcd-28a0-49b6-9902-\
558edfa91aac"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[GeometricTransformationBox[
    {Thickness[0.0009765625], FaceForm[{RGBColor[
     0.00784313725490196, 0.5333333333333333, 0.8196078431372549], Opacity[
     1.]}], FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
        2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 
       2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
       0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
       0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
       94.20800018310547, 94.20800018310547}, {94.20800018310547, 
       929.7919921875}, {929.7919921875, 929.7919921875}, {929.7919921875, 
       94.20800018310547}, {94.20800018310547, 
       94.20800018310547}}, CompressedData["
1:eJxVlWtIFFEUxwfbTFPctIc9pMYSMcjerw9tjWlpmZAiRSY6WVpYJmhlVrbT
bpmGoYhrpmZj0pte5KuHMhVp0VqCRR8qHK1IibASgl6U/f/7oVlYLr977txz
zv+ce29gSmZcqpsgCBlD/3/j0E/0eJwvDY3yN8kq/cdaSBhYEj2Pwn7cxb9i
wcq0KLDQVgBWPeJp79tagPmYw9zvythCzO+YqmC0XQSrrS/JUwbBmu/cQ/9G
Pcb7GPYv3wCWv7qDBWs6OW8YWN62m/yjE9/LjpNgbdNssBJqsmG/mlLEo33c
AZY6k8F6dBFYNsUbeWSUgdWJs8BKXRZYmeEFlpLDaB98SD3ye+FfWWUFi5Ym
sOjjB9Y7LoAFRzX1tjBead48sBLRyvUn/hzBupWejD+nCywmrQJrTiftedfp
//UAWMv4yfgOjsd+wqI4O9g9BSzOt4Hlzv2s573fYPWphnzk8KLD2MeaCv1E
5yewlPUGrL9KYxw1SdBfW9BP9lHBaqMVftSQetanKh5+hO8tYDHlLlj7cYP1
TVwEv+rqMq5PqGLf5ESTc0vYN5/zMQrfwjnfl8Z6ZlZw3yh/8qNr3HdOB/3e
bnGtt9PvhAe0Dx/Deq1/ApZ6sxl3RxvZOpr1aW8m101BnrrFwe8TvKGLsH4E
8x5nh45Cdhr77uYysLTHnzpe7med9joKDHzqoJFLs5l/0ABYWpPBPnSauH8h
+1YwrwBr9QtZN0sD67Zky1GXzgaWGzQDK1+6wMr7fezLgA/Mp7KcuhX5Md/Y
FzzXCXmsc0AYz8G5m2DVL5Us6OzHbBvPxS32n+peybqYE9nf3peZb62N9kv1
XO91gv26uZE856OBhdAwVxwufhrHPPpd36/MZR6ll6iXqRsszS1mf+2cSb/5
6xjP2LXULdaX9udJnE8fpH4idVauDhhYCj5vYPnrRsblGUO/oxbT79JAcmAP
8+i+z3j3nWVfHajg/WoJoj3TTD3e9EFHuWwr9ZzuoO5ewWT7dtpzS1AvPceb
850hPKfPTnN8/A79oXdMZN0n17IfC8vtLr15D8SkcuzhvJZeYwM3udY1u4Gl
XWShzmSjLo28VyJqef9+6gKL/pG8z56Y2V+JvbjfxbexYHlSNe/79hdgtc8M
1pVy5lGxHe+F1rUFeuitkWB1Pu8V+c5ysF58hv3k5HulD+N7JY0Yep/+Ardc
0qc=
       "], CompressedData["
1:eJxTTMoPSmViYGBQAWIQDQQLgjbXOwDpB+V1YNqhBJXfIJbeCKbvQPgMD7ya
QLTC3EaI+nY/ML/BuA2iLyMUzF+wow8i7x4G5j94chmVv/xYAzJ/gftRsD0P
jpwEix/YcQzMZ2itqgPzNU+g8Bm+6rYh8xM0ZnaA3fW/HCJfML0LbH5fCUT+
42ww/8HnPAi/fTFE/oMhmK8gtQQi/0G3BpmfsOxtJTJ/wfrnYL5DxQwwX+HW
YzA/QWQSmH+A4yGEf2Qy2D0MPx6A+QvKtcDuXXAUwmeQhPgn4eTxMjC9AeJf
hz3risG0/VFU/mJIuMD4C0SYwPwHNRvB/AOuMyHhq7wHwl8OCf8FPMfB/Ias
Zoj8kehSsH0dDRD+XG2wfw+chsRvwoXqWrC50PhXyF0FDp8HvtD4j0ZKHwC2
qqTP
       "]}]}, {{{1, 0}, {0, -1}}, {0, 0}}],
   AspectRatio->1.0000000000000024`,
   ImageSize->{97.84307305992984, 97.84307305993008},
   ImageSizeRaw->{1024., 1024.},
   PlotRange->{{84.5106309796065, 
    939.4893690203924}, {-939.4893690203943, -84.51063097960616}},
   PlotRangePadding->None]], "InputOnly",ExpressionUUID->
  "bac44ac7-1dc0-4803-b057-4d458e6939e0"],
 " TypeScript"
}], "Subsubsection",
 CellChangeTimes->{{3.9367094955569344`*^9, 3.936709509031419*^9}, 
   3.9367228636928787`*^9, {3.93793556105514*^9, 3.937935579944072*^9}, {
   3.937973394011859*^9, 3.937973411401843*^9}, 3.937985372586927*^9, {
   3.937985404055216*^9, 3.937985407008688*^9}, {3.9379887704536543`*^9, 
   3.937988770453668*^9}, {3.937988821746954*^9, 3.9379888695462503`*^9}, {
   3.9379889129745283`*^9, 
   3.937988913893043*^9}},ExpressionUUID->"84460f51-3adb-4c21-8f41-\
e5222b346d84"],

Cell[TextData[{
 ButtonBox["TypeScript",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.typescriptlang.org/"], None},
  ButtonNote->"https://www.typescriptlang.org/"],
 " was designed by Microsoft and adds a type system to JS, also integrating \
heavily with Microsoft\[CloseCurlyQuote]s VSCode IDE with a feature called ",
 ButtonBox["intelliSense",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://code.visualstudio.com/docs/editor/intellisense"], None},
  ButtonNote->"https://code.visualstudio.com/docs/editor/intellisense"],
 ". It can also interoperate with React using the TSX extension."
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.9332453452899075`*^9, 3.9332455156265144`*^9}, {
   3.9332455780820103`*^9, 3.9332455979932632`*^9}, {3.9332465634828796`*^9, 
   3.9332465804755917`*^9}, {3.933247317712223*^9, 3.9332473414463367`*^9}, {
   3.9332473912019196`*^9, 3.9332474062134724`*^9}, {3.9332477904489784`*^9, 
   3.933247790452976*^9}, {3.933247832317625*^9, 3.933247882740755*^9}, 
   3.933247919578785*^9, {3.936708011421554*^9, 3.936708324651778*^9}, {
   3.936708383346067*^9, 3.936708657564033*^9}, {3.9367087317032127`*^9, 
   3.936708745377736*^9}, {3.936708840758897*^9, 3.936708858020339*^9}, {
   3.936708987686612*^9, 3.9367090619980803`*^9}, {3.936709159390505*^9, 
   3.9367094036699047`*^9}, {3.936709443945594*^9, 3.936709475487582*^9}, {
   3.936709524726763*^9, 3.93670953163797*^9}, {3.936709682220476*^9, 
   3.9367096822212133`*^9}, {3.936709714572505*^9, 3.936709714573516*^9}, {
   3.936722467725717*^9, 3.936722469890345*^9}, {3.936722568175712*^9, 
   3.936722587978075*^9}, 3.937851581421235*^9, {3.938033618509986*^9, 
   3.9380336383570633`*^9}},ExpressionUUID->"44c4d59e-cfac-44c8-9064-\
9fbaba36116f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[GeometricTransformationBox[
    {Thickness[0.0004329004329004329], 
     {FaceForm[{RGBColor[
      0.17647058823529413`, 0.8156862745098039, 0.9294117647058824], Opacity[
      1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
        3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
         3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQQJz5XjHUCM680hIFqhdXMQiHa4bw+mE1J2O4L5
XPPB8ge+njAGiz/NiIao11YA03dtEkD0gpk31cDqt8xIBvMlnliD6WP66WB1
IRNswPoTQsF8BsG1tiC64UEBmH9gxm87MN+iBsx3EFB1APMntIP5DY3XwXyH
S40Q/Zdzwe5rcMyBmH9+mRPYnBh7iHpxYWewuv7baWD+vniw/AL3XjD/we+X
pmC6IhDs3oTHrGD/NeRkg/3zoGa+DYS/PgZs/oZLLmD7t3GHg8Vf6gWD1am8
A4fPg+Xr4sDmpLGB5RMOSYHD98FhaQg/sgvMP2D0MwwsXngdIl+2CsxXcBWC
2LsrGsxvSFAC8xUKXoeC9feLQeTP1UP4ehxgvkPtX7D9DTbLweYtODQTwp8K
id+E58D4BQDngIFX
        "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQNrx96OQDpA2d6ssF0UUUQiH4QGJAHohe4M0aC
xT8XF4BohXarBDAd0V4IohMEHDIhtFIJiG7IyAWLL3C9AuYvcD5dDDZPyRxM
K0x8D6YZUmXB9IKJP8B0Q9DrIhDt0Hgfwu85BuY/KDgG5iccWwiR754C0Xdj
OkTePx8ib7kBIs8VCLb/wW9FsP0HyprA7lPYUAGx9/JdsPsXvP8J9o/DloYo
sHjj3Xww/U8nBEwzReeC9Rmu8AObI7cxC6x+4XdfsDh3PZj/gPG+D5i+lgPm
M4Q89ob4txnMPzBdGMxXmD4VzFeQKQeHt8L/A2B+gqkzhD/hG5i/wI8fzGdQ
1IHEx18vMN9hQQqYjxJfALjPeAA=
        "]}]}, 
     {FaceForm[{RGBColor[
      0.17647058823529413`, 0.8156862745098039, 0.9294117647058824], Opacity[
      1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
        3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQQJAlzFDkDawfRYFoh+4C9cCqaXf0sF0QoRJ8H8
hOfyiWA+2/kSEN2QURkNVndBDMK3rw0Dy8dMLALRB0puB4P5t7sLwPKTD4D5
DsfjwHwH531gfsMBSzB/QaFfCFifHITfcIApFEQzLLIA8x88agPzE1R8wPwD
sv/BfIXmLIi8kjHYfofYEjBfQdwFzF/wpQ5ivqwvxH3rOiHymyD8B0rRYPc2
HEqFyG9YBQmPuFURYHsWOoL9B2TFgOVbBSHhE2iQCPF3PkT+X0MqxN+9EP97
f84Ey3+rA/MZjEUg4bu5HCKfZA/mKwRUgvkKctlgfsObKjA/4eY0iHqXVgi/
cD9EPcs0iHv33QbzGQ4vA/MfMPyA6K/aA+Y7LGbNBvvb+xLEvmmMYP4BmRcQ
+a6/EPNM/kDkVV+A+SjpAQA/GoyM
        "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQJT+dkOwDpB4s/hIDoBtt36SCaYU1LGFj8J1MK
iHaImxUJohVa7RPA/IefYiHq9niDxVmiIOoeVkmD+evccyD67bRB9IJjzIVg
ebYtEL6KIpiv0CSjBzbH2grMXyB51ADMj3CFqP9UbQTmlwaA+QdWFJiA9d32
BvMZDjw0BdEJgZYQ864HmYPNOa4G5ifUs1mA/WXKCdHvvR0s78DxpgCsbuZO
Q7C+iL1g9x5Y+NQfLO5umQp2//JHYP82OIokQNR1gv35QO1jNNj8pyEZYHrP
lwiI/ENweDpw5YeD+WvMwOY2qLuA+QfWZUPsOT0THL4ONpEQ+X1vQ8HmnnQD
8x02OoL5C5o/Q8w7cTHEAT2+AI/mc/0=
        "]}]}, 
     {FaceForm[{RGBColor[
      0.17647058823529413`, 0.8156862745098039, 0.9294117647058824], Opacity[
      1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
        3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
        3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxV0m0oA3EcB/Cb15s3SqI4vECUt2pvzoulFCuRIe2cTWsmdfPUUu7N3iil
icLGrVjihUUei85KLSZESlHHO03thWy1IrvvTzpX17dPv9//8a5cGG5z5jEM
U517tcw9qs/YxeVSThm8yGJrr5bcS3ZUS7WiUkBOXI9rqXyYBvRm699cekux
mUFk48MY0hUaQnrKaL6WPVh5NMJc1Qksm9MjWjK1uzB/qML8UgRmg+ewYpki
B7ap/76ZxnMR6hcKqZ4Kwmr+kwdeDcNyUZQc3aH6zQrMO45gyT0LS6dnNN+x
H5abLql/csuNdTc7cD7m24Hzy5a6f/fz59IrQW+mvd9O9zCN87N+bw/y+ULE
evOdMGfah2V7Ccwk10TaX6Ib463LsNK6DiuBBeq/9cHy3Rz1e6wwbybLsQx9
74IAORmG+fgird/QB0uhDZH2x8KKeEB2Zm2o1yR+58/Y6F5fqW5IU/3znea3
fFE9nqH9JnT/2w9fbLQn
        "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQP/H/mOwBpBbbcIhDdsK+zAEw7rgLTB0qugmkF
Q5dcZP4BBY5MFPmb72LAdNSPXAg/zxVEJzzfnAHmr1O3ANEL3iaC+QdOCZuD
6Ae5zGD+glx7sHxD2P10sPy6k1Zgffa7wfwH74NtwfTVe2C+wzU1B7D5Kfpg
/QkT94L5DjyPcsD8x6KeEH8Ygd3n0H0lFpkPcz+Mr7BOGeK/hRfB4bFgJjQc
Dh3MA4t72oDDh6F7M5ifIBMI5icc2wbhv0mH8HecAvMdOqsh4Sn/Esx/UD4T
zHcQ0gSb38C9GsJ/kQ3mM1xfDuYr7FsH5icsWgLmH7j+DMx/4NML5qPEFwDw
R3ox
        "], {{351.8800048828125, 289.8190002441406}, {351.9358825683594, 
        281.0578918457031}, {347.29388427734375`, 272.9382629394531}, {
        339.71563720703125`, 268.5415954589844}, {332.1374206542969, 
        264.1449279785156}, {322.7845458984375, 264.1451110839844}, {
        315.20648193359375`, 268.5421142578125}, {307.62841796875, 
        272.9390869140625}, {302.98675537109375`, 281.0588684082031}, {
        303.0429992675781, 289.82000732421875`}, {303.1291809082031, 
        303.2449645996094}, {314.0367431640625, 314.08251953125}, {
        327.4620056152344, 314.0822448730469}, {340.88726806640625`, 
        314.08197021484375`}, {351.79437255859375`, 303.2439880371094}, {
        351.8800048828125, 289.8190002441406}}, {{341.67498779296875`, 
        289.8190002441406}, {341.67333984375, 297.6684875488281}, {
        335.31048583984375`, 304.0313415527344}, {327.46099853515625`, 
        304.0329895019531}, {319.61163330078125`, 304.0324401855469}, {
        313.2488098144531, 297.6690368652344}, {313.2489929199219, 
        289.8196716308594}, {313.2491760253906, 281.9703063964844}, {
        319.6123046875, 275.607177734375}, {327.461669921875, 
        275.60699462890625`}, {335.31103515625, 275.6068115234375}, {
        341.6744384765625, 281.9696350097656}, {341.67498779296875`, 
        289.8190002441406}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQQLpPgtHYD0g3OLi8G0VKc9iFa4BOUvuO8EohNW
VoH5DJc0XUG0Q7IhhM9c4g5WL/uiCEx77vUA0Qt2tUD4+lC+lCyY3+AA4TtU
bS0E6/9cDNb/QDwIzD+wB2L+gYscYH5DG8T+A937C8D67ndA3Jc8DcxXuMkH
dn9CGoS/4OUUIzA/FcJ32L1XA2x+H0T/AlMtebB5VyDmO7zcyAm2Rwpqf0fZ
E3uQumqI+xweVkH4UPfD5B1g/jPcBNavIAPxv8MkiPkMSdDwYdsHsX85JPwO
yE8Fu4/hIiR8UcIfAOccZ3M=
        "], {{25.05900001525879, 304.0329895019531}, {17.207168579101562`, 
        304.0329895019531}, {10.842000007629395`, 297.6678466796875}, {
        10.842000007629395`, 289.8160095214844}, {10.842000007629395`, 
        281.96417236328125`}, {17.207168579101562`, 275.5989990234375}, {
        25.05900001525879, 275.5989990234375}, {32.910831451416016`, 
        275.5989990234375}, {39.2760009765625, 281.96417236328125`}, {
        39.2760009765625, 289.8160095214844}, {39.2760009765625, 
        297.6678466796875}, {32.910831451416016`, 304.0329895019531}, {
        25.05900001525879, 304.0329895019531}}}]}, 
     {FaceForm[{RGBColor[
      0.17647058823529413`, 0.8156862745098039, 0.9294117647058824], Opacity[
      1.]}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
        3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
         3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
        3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQQHPvOmOQDpBIEODxDNwOKVDqIf6ED4Ct/SMkB0
Q2+fK4h2uH8fzD9Q9s8BrG+dcyaYz19iBZafoAHmK7y7bQg2b9p0sHqHQA01
sLrZbBD9PYaCYPnnQmD7FJYyn7VHcs+BM2fOgPgPHl5MAdt/YSqY3/BySzLY
3qUbJMD0F2swX6F8hh7Ynv+HksD6fXMswPyHrGB5h0VljmBzMp6C+Q+qvriA
9X8uB5t/YIWdO1jdVrtUsLu+tYP9D3PPgvdAPgD4jFPG
        "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQQHPvOmOQBphU25ziD6wb/QVBDtMAvCZ9DYkAKW
T97kCKITdmWC+Q32onZgfos1mM+wbaYVMv/BofVmyOoTLE2MweruT4eo1yvU
B6vL+gDmO+S/0ATT9+PB9j9QYVMH23OHE+y+hIXzlcDybWfB/IYMPlWwOQv8
08HqRQx0wfTOi2D+ggcrjMDyS3+A+QcMjlmA9VlvAvMbxMTA7le4lA3mK/yD
+I/h01Gw+Q9C8sD+h4UPQxiQDwAptEz0
        "], {{180.16600036621094`, 217.5290069580078}, {175.58509826660156`, 
        218.5177001953125}, {170.799072265625, 217.64688110351562`}, {
        166.86000061035156`, 215.10800170898438`}, {160.8516845703125, 
        211.2357177734375}, {157.7681884765625, 204.12493896484375`}, {
        159.0477294921875, 197.0923614501953}, {160.3272705078125, 
        190.0597686767578}, {165.71780395507812`, 184.49081420898438`}, {
        172.7050018310547, 182.98300170898438`}, {182.1708984375, 
        181.0915985107422}, {191.40338134765625`, 187.14492797851562`}, {
        193.4429931640625, 196.5800018310547}, {195.4793243408203, 
        206.01564025878906`}, {189.56849670410156`, 215.33975219726562`}, {
        180.16600036621094`, 217.5240020751953}}}]}}, {{{1, 0}, {0, -1}}, {0, 
     0}}],
   AspectRatio->1.0918151615826062`,
   ImageSize->{97.40371077387287, 106.34684821732142`},
   PlotRange->{{0., 356.0215053763461}, {-388.7096774193576, 0.}},
   PlotRangePadding->None]], "InputOnly",ExpressionUUID->
  "6b902071-748a-4046-8bec-903a41a12887"],
 " Electron"
}], "Subsubsection",
 CellChangeTimes->{{3.936709499689897*^9, 3.936709514371502*^9}, 
   3.936722865374716*^9, 3.937929742618804*^9, 3.937935889372102*^9, {
   3.937935960065998*^9, 3.9379359777268744`*^9}, {3.9379733955818243`*^9, 
   3.93797341265618*^9}, 3.937985373687727*^9, 3.937985417050849*^9, 
   3.937985714357429*^9},ExpressionUUID->"9cd08b4e-4a64-43c3-aa44-\
c8e0584e7fee"],

Cell[TextData[{
 ButtonBox["Electron",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.electronjs.org/"], None},
  ButtonNote->"https://www.electronjs.org/"],
 " is slightly different in that it is a framework that bundles ",
 ButtonBox["Chromium",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.chromium.org/chromium-projects/"], None},
  ButtonNote->"https://www.chromium.org/chromium-projects/"],
 ", ",
 ButtonBox["node.js",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://nodejs.org/en"], None},
  ButtonNote->"https://nodejs.org/en"],
 ", and other essential dependencies into binaries but does not directly \
generate the HTML, JS or CSS. It instead packages components into a \
standalone installer for distribution."
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, 
   3.937973487891346*^9},ExpressionUUID->"c5904cf9-2410-4aee-a781-\
c1c4b715a735"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More on Electron", "Subsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.483202458955147*^9, {3.51430857274755*^9, 3.514308578875259*^9}, 
   3.788018000921266*^9, 3.788019441530291*^9, {3.937985766625711*^9, 
   3.93798577832344*^9}, {3.938181167953933*^9, 
   3.9381811714906273`*^9}},ExpressionUUID->"ffac0a7b-3124-43d1-a7b7-\
03bd811a2b6f"],

Cell["\<\
Electron applications consist of 2 distinct processes, the main and the \
renderer process.\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938146806172626*^9, 3.9381468216419163`*^9}, {3.93818128431513*^9, 
   3.938181322306222*^9}, {3.938183954371904*^9, 
   3.9381839574700193`*^9}},ExpressionUUID->"5d25dff2-562f-4e2f-afca-\
2eea2478cf18"],

Cell[CellGroupData[{

Cell["Main Process", "Subsubsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.382452425221337*^9, {3.514308595622859*^9, 3.514308595844242*^9}, 
   3.514662627149618*^9, 3.514662723834064*^9, 3.788018003192909*^9, {
   3.93798578392734*^9, 3.9379857860386753`*^9}, {3.938035197531789*^9, 
   3.9380352060247583`*^9}, {3.938181333661126*^9, 
   3.938181391605832*^9}},ExpressionUUID->"8ae28d27-5bc0-4c5b-9e78-\
e4ea49a5e1c7"],

Cell["The main process is a node.js backend process.", "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937990668306198*^9, 
   3.937990694776972*^9}},ExpressionUUID->"326b28f7-c16a-4d90-92f7-\
0ee2b8ce779c"],

Cell["It is responsible for managing the applications lifecycle.", "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937990668306198*^9, 
   3.937990720024955*^9}},ExpressionUUID->"3a3f8619-95a1-40e8-8569-\
8b450cdae9ab"],

Cell[TextData[{
 "It can interface with the local machine and access node.js modules like ",
 StyleBox["fs",
  FontSlant->"Italic"],
 " or ",
 StyleBox["crypto",
  FontSlant->"Italic"],
 ". "
}], "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937990668306198*^9, 
   3.937990746828149*^9}},ExpressionUUID->"a03804d7-4e57-43e6-91ae-\
50f63fac8652"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Renderer Process", "Subsubsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.483202458956718*^9, {3.514308604990972*^9, 3.514308608117634*^9}, 
   3.788018007636061*^9, {3.9379858059967203`*^9, 3.9379858104234056`*^9}, {
   3.938035192541444*^9, 3.938035206698036*^9}, {3.9381813432618113`*^9, 
   3.938181390558387*^9}},ExpressionUUID->"b14b3560-124a-4ecd-9abf-\
4b5446f3e7c3"],

Cell["\<\
The renderer process is essentially a Chromium-based browser.\
\>", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.9379907721177187`*^9, 
  3.937990796884109*^9}},ExpressionUUID->"24642c07-e5af-496f-9ed2-\
cadfeb09bdb0"],

Cell["This renders the front-end.", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.9379907721177187`*^9, 
  3.937990840097608*^9}},ExpressionUUID->"aed9dee8-bffa-4a4a-841d-\
3e5c846698cd"],

Cell["\<\
It cannot directly interface with the local machine so has to do so through \
the main process.\
\>", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.9379907721177187`*^9, 
  3.937990864638239*^9}},ExpressionUUID->"c64a3bea-88c8-4b16-889d-\
e8e1398e4962"],

Cell["\<\
The renderer and main processes communicate through \
Electron\[CloseCurlyQuote]s IPC mechanism.\
\>", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.9379907721177187`*^9, 
  3.937990884719391*^9}},ExpressionUUID->"455ebbc4-7834-46c7-a3cb-\
5a8799ea4af3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inter-Process Communication", "Subsubsection",
 CellChangeTimes->{{3.937985828605986*^9, 3.937985838506198*^9}, {
  3.938035196230927*^9, 
  3.938035208409664*^9}},ExpressionUUID->"b66d1493-6a01-4816-9b26-\
f7d27e264d81"],

Cell["\<\
Electron\[CloseCurlyQuote]s IPC allows the renderer and main process to \
exchange event-based messaging.\
\>", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.937991059046876*^9, 3.93799109073787*^9}, {3.938034279917742*^9, 
  3.9380342910323544`*^9}},ExpressionUUID->"9586e06c-8e04-46eb-82fb-\
180a22f56de7"],

Cell["\<\
This means send messages or listen for messages on a predefined channel.\
\>", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.937991059046876*^9, 
  3.937991130031798*^9}},ExpressionUUID->"d90705a6-23de-4756-9f5a-\
315dcc09fb74"],

Cell[TextData[{
 "In Electron, this ",
 StyleBox["ipcMain", "Code"],
 " and ",
 StyleBox["ipcRenderer", "Code"],
 " event-emitters which expose methods like ",
 StyleBox["on", "Code"],
 ", ",
 StyleBox["once", "Code"],
 " and ",
 StyleBox["send", "Code"],
 " in each respective process."
}], "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.937991059046876*^9, 3.937991241412328*^9}, {3.937991354379574*^9, 
  3.9379913543801737`*^9}, {3.9379913968433943`*^9, 
  3.937991411627776*^9}},ExpressionUUID->"75225126-296c-42a6-bdb1-\
2ccd5dce2bf5"],

Cell[TextData[{
 StyleBox["send:",
  FontColor->GrayLevel[0.5]],
 " send message on a given channel"
}], "Subitem",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.937991059046876*^9, 3.937991241412328*^9}, {3.937991354379574*^9, 
  3.9379913543801737`*^9}, {3.9379913968433943`*^9, 3.937991443326993*^9}, {
  3.937991568907045*^9, 
  3.937991584447422*^9}},ExpressionUUID->"a2367023-b0df-4624-9f94-\
9c9063462f9c"],

Cell[TextData[{
 StyleBox["on:",
  FontColor->GrayLevel[0.5]],
 " sets up event-listener for incoming messages on a given channel"
}], "Subitem",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.937991059046876*^9, 3.937991241412328*^9}, {3.937991354379574*^9, 
  3.9379913543801737`*^9}, {3.9379913968433943`*^9, 3.937991477341543*^9}, {
  3.9379915724367723`*^9, 
  3.9379915763523073`*^9}},ExpressionUUID->"e26cfd0c-1995-466c-a00b-\
498b4a2927a0"],

Cell[TextData[{
 StyleBox["once:",
  FontColor->GrayLevel[0.5]],
 " sets up a one time event-listener for incoming messages on a given \
channel"
}], "Subitem",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.937991059046876*^9, 3.937991241412328*^9}, {3.937991354379574*^9, 
  3.9379913543801737`*^9}, {3.9379913968433943`*^9, 3.937991488771779*^9}, {
  3.937991587060275*^9, 
  3.9379915881131773`*^9}},ExpressionUUID->"ed94e5cc-25e9-47c6-a7e0-\
587c3c3a2416"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8c67ebe2-f0ab-4387-9174-671ced27d814"],

Cell["4.5 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9381466140751743`*^9, 3.938146627606141*^9}, {3.938148075945158*^9, 
   3.9381480784659147`*^9}, {3.9381641217941523`*^9, 
   3.938164124664402*^9}},ExpressionUUID->"9c6717be-1323-4940-a566-\
4da57380d748"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.937985489787085*^9, 3.937985492885776*^9}, {
  3.937991845614008*^9, 
  3.9379918509718933`*^9}},ExpressionUUID->"6e71a1d8-a0cc-48ee-b1f0-\
b0cdf395fb73"],

Cell[CellGroupData[{

Cell["Motivation", "Subsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, {
  3.937991827916171*^9, 
  3.9379918344582777`*^9}},ExpressionUUID->"4a755da2-96f0-4e8c-b7ac-\
abfc088c31d2"],

Cell["\<\
Many of WREL Technical Services consulting clients had the need to develop \
standalone applications, either on web or desktop.\
\>", "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 3.937987644915567*^9}, {3.937987708547513*^9, 
  3.937987764813319*^9}, {3.937988485695877*^9, 3.93798855077704*^9}, {
  3.938034102399849*^9, 
  3.938034110130756*^9}},ExpressionUUID->"e26e45e1-145d-4b62-9311-\
781349d93210"],

Cell["\<\
Web applications were built using a React front-end that was paired with WL \
API\[CloseCurlyQuote]s as a backend, often deployed on the Wolfram Cloud or \
on a Wolfram Application Server.\
\>", "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986653056711*^9}, 
   3.937987585113696*^9, {3.937988595528912*^9, 
   3.93798860461609*^9}},ExpressionUUID->"99a86956-6e41-4aa0-8f75-\
59f4e36f7e46"],

Cell["\<\
Desktop applications relied on a pure WL approach of highly customized \
Notebooks distributed directly to clients.\
\>", "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 
  3.937987577112224*^9}},ExpressionUUID->"f60cdac8-bc64-43f0-97f5-\
31f6cea727e1"],

Cell["\<\
Unifying both approaches to use a single front-end would greatly simplify \
development and maintenance, especially for multi-platform applications.\
\>", "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
   3.937987538092518*^9, 3.937987644915567*^9}, {3.937987690380577*^9, 
   3.937987690381188*^9}, 
   3.937987822203302*^9},ExpressionUUID->"c55d86c2-a6bf-4661-9346-\
8922b6439464"]
}, Closed]],

Cell[CellGroupData[{

Cell["What is WRB?", "Subsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, 
   3.937991840576653*^9},ExpressionUUID->"0a3443f8-86e6-4660-84f4-\
d9b627e04ee3"],

Cell["\<\
The Wolfram React Boilerplate, is a repository allowing for a single \
front-end definition to be reused in multiple distribution methods.\
\>", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.9382242818315067`*^9, 
  3.9382242926611958`*^9}},ExpressionUUID->"a77b3d2e-bccd-460a-9fcc-\
4a97c0e5faa3"],

Cell["Each part is separated into a different npm sub-package:", "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
  3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
  3.937987927740727*^9, 3.9379879277416162`*^9}, {3.937987959422811*^9, 
  3.937987993306278*^9}, {3.938081354442964*^9, 
  3.9380813674344*^9}},ExpressionUUID->"72219a2f-bdc1-42f2-9001-d9b3fa25b083"],

Cell["Frontend Package", "Subitem",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
  3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
  3.937987927740727*^9, 3.9379879277416162`*^9}, {3.937987960889017*^9, 
  3.937987973791671*^9}, {3.938078903493848*^9, 3.938079007776949*^9}, {
  3.938079053281431*^9, 
  3.938079056775219*^9}},ExpressionUUID->"074e7158-b64f-42bf-bd2d-\
832d56539c9b"],

Cell["WolframLanguage Package", "Subitem",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
  3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
  3.937987927740727*^9, 3.9379879277416162`*^9}, {3.937987960889017*^9, 
  3.9379879757365313`*^9}, {3.9380789136050777`*^9, 3.938079007349593*^9}, {
  3.938079055331974*^9, 
  3.938079055673215*^9}},ExpressionUUID->"28e8799f-1bd4-49ad-943f-\
8412a41fc4e0"],

Cell["Desktop Package", "Subitem",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
   3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
   3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
   3.937987927740727*^9, 3.9379879277416162`*^9}, {3.937987960889017*^9, 
   3.93798801066378*^9}, {3.938078916468623*^9, 3.938079006945363*^9}, 
   3.9380790590627117`*^9},ExpressionUUID->"cce0179f-8ee5-4bb3-b1e3-\
a916e6d9f9bb"],

Cell["Web Package", "Subitem",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
   3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
   3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
   3.937987927740727*^9, 3.9379879277416162`*^9}, {3.937987960889017*^9, 
   3.93798800977302*^9}, {3.938078919695072*^9, 3.9380789603741503`*^9}, {
   3.93807899530326*^9, 3.938079006260623*^9}, 
   3.938079060302566*^9},ExpressionUUID->"a6c7e0ed-2143-4b36-a6f2-\
7607f26fb4bb"],

Cell[TextData[{
 "The different sub-packages are managed by ",
 ButtonBox["yarn workspaces",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://classic.yarnpkg.com/lang/en/docs/workspaces/"], None},
  ButtonNote->"https://classic.yarnpkg.com/lang/en/docs/workspaces/"],
 "."
}], "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
  3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
  3.937987929995997*^9, 3.937987948921302*^9}, {3.9379880335640173`*^9, 
  3.9379880335647087`*^9}, {3.937988081153977*^9, 
  3.937988081154557*^9}},ExpressionUUID->"c2bd907c-21b3-44f6-bce8-\
19fb3f4b64b9"],

Cell[TextData[{
 "Web static files are built using ",
 ButtonBox["vite",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://vitejs.dev/"], None},
  ButtonNote->"https://vitejs.dev/"],
 "."
}], "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
   3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
   3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
   3.937987929995997*^9, 3.937987948921302*^9}, {3.9379880335640173`*^9, 
   3.9379880335647087`*^9}, 
   3.937988081495606*^9},ExpressionUUID->"2565517a-8b70-4bfc-80e2-\
f9838e933839"],

Cell[TextData[{
 "Desktop apps are built using ",
 ButtonBox["electron-vite",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://electron-vite.org/"], None},
  ButtonNote->"https://electron-vite.org/"],
 "."
}], "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
  3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
  3.937987929995997*^9, 3.937987948921302*^9}, {3.937988035925714*^9, 
  3.937988060791346*^9}, {3.937988141132592*^9, 
  3.937988141134194*^9}},ExpressionUUID->"0302ad24-5cc0-4d1c-a7c4-\
6fb85832f229"],

Cell[TextData[{
 "Both are backed by Wolfram Language sockets deployed using ",
 ButtonBox["LocalDeploy",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/ToneAr/LocalDeploy"], None},
  ButtonNote->"https://github.com/ToneAr/LocalDeploy"],
 " and a node.js backend."
}], "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
  3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
  3.937987929995997*^9, 3.937987948921302*^9}, {3.937988035925714*^9, 
  3.937988060791346*^9}, {3.937988143286044*^9, 3.9379881959592447`*^9}, {
  3.9379882290147038`*^9, 
  3.937988238521566*^9}},ExpressionUUID->"aaf7caea-fc9e-46de-a373-\
6bb9d8270e73"],

Cell["Interface with the backend is abstracted behind the IPC API.", "Item",
 CellChangeTimes->{{3.937986563372004*^9, 3.937986664289097*^9}, {
  3.937987538092518*^9, 3.937987644915567*^9}, {3.9379877798079767`*^9, 
  3.937987794089408*^9}, {3.937987832985613*^9, 3.937987884906788*^9}, {
  3.937987929995997*^9, 3.937987948921302*^9}, {3.937988035925714*^9, 
  3.937988060791346*^9}, {3.937988143286044*^9, 3.937988176632738*^9}, {
  3.937988242103545*^9, 
  3.937988265068426*^9}},ExpressionUUID->"027ad996-7a72-46c1-acff-\
9ca306a4f912"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QvcNWO9P/6HHMr5kFMHFJVKqeigtnq27Veig18O9S+FdNhJ7Q7sDhI7
fqKjfilERGGjfjvFtpEeRUUIkTMPIpFD5JDE/H3HM6u5173u57nXWvczc611
vd+v12fvzKzDrJn7umbm+1wz84x3/9tb3rforFmzPv7Ex/7PW3b6xD9/7GM7
fWrrFR77j20//PEPvP/D733P6z+823vf/96PveLdT3hs4nKP/Z8tFp81a7FZ
AKOjAAAAaFjb50EAAN3aPj4CAADy0/Z5EABAt9pxioiIiIiIyEKNOikAkCp1
UhERERERaSrqpABAqtRJRURERESkqaiTAgCpUicVEREREZGmok4KAKRKnVRE
RERERJqKOikAkCp1UhERERERaSrqpABAqtRJRURERESkqaiTAgCpUicVERER
EZGmok4KAKRKnVRERERERJqKOikAkCp1UhERERERaSrqpABAqtRJRURERESk
qaiTAgCpUicVEREREZGmok4KAKRKnVRE2sxBBx3UOV/6n//5n0nzV1pppfI1
119/ffHXv/61uPXWW4vdd9+99eWWfLLNNtt0/kbjb7A+b0F/v6ll1JZXRMYz
6qQAQKrUSUXGP2ussUZRt/POO/d83R133DHhdc997nMnveZVr3rVhNe85jWv
GWrZFlS3+fGPf1x0+9KXvtT6Op3JvOc975n0G7vdf//9xTXXXFMcddRRxcYb
b9z6Mqe0fh5++OHyb/eXv/xlsddeexWrrrrqjH6/OqmIyMymMgsAIDG14xQR
GeNcddVVnfOSww47bNL89dZbb1L9KepT3a/76Ec/2pn/4IMPFksuueRQyzW/
us0qq6wyYXm+9a1vFbNnz+5Zvx3lTKdOWvfoo48W++23X+vLPUi+8Y1vlL/h
P//zPxfa+rn77ruLV77ylTO2zOuuu27xkY98pMyuu+46Yd6o1R0XxvJuu+22
5ef98Y9/bP33ichopDILACAxteMUERnjHHrooZ3zkksvvXTS/He/+92T6k1H
HnnkpNcde+yxnflz5swZernmV7d56UtfOmF5VltttdbX48JIdx0w1sPJJ5/c
Sfz37373u0nb521ve1vry95PnvCEJ5S1tDBMnTTq5fF3U+Xoo48uLr/88gmv
ueGGG4pFF110of8mddJZxQ9+8AN1UhHpK+qkAECq1ElF8sj/9//9f53zkkce
eaRYdtllJ8w//PDDO/PjGu9w9dVXT/qca6+9tvO6uMZ52OWaX93mn/7pnybU
vpZZZpnW1+PCSHcdcIUVVuj5uhgjWW2bcM4557S+7P1ks8026yz7MHXSqdZP
1E/rNtxww4X+m3Kvk0Y/EuPK1UlFpJ+okwIAqVInFckj3fco3XTTTSfMv+KK
K8rpf/jDH4qf/OQnndfV7/UYz1Sqe/WrXz3hM5Zffvni05/+dHHuueeW1z7/
7W9/K2677bbitNNOK3baaadiscUWm7Rcveo2q6++ejE/1f1JY1nrvyfu2xnj
LqMO/JnPfKbzHUsttVT57KdYrj//+c/l/Sz/9Kc/Ff/93/9dvO51r5u0TO97
3/s6n3v22WeX0+IelRdddFHxwAMPlGMVP//5zxdLLLFEOS/uWXDSSScVd955
Z1nHjN/7/Oc/f9rbZrp1wMghhxzSeV18V/f8GLMZ6/qnP/1puTyxDW6++ebi
mGOOKdZff/2en9nv+qny1Kc+tfjKV75SjuWMZYl6Waz/WDfxt1K9bqONNprv
9pzf7+1n/cS9cuu6/8arxN/tcccdV9x4443l/Ub/8pe/lL8h/haf/exnT3r9
MPcn7Xd71Mdrf+5znyvHUJ9++unl+6JdxmtiGeuijUZN+L/+67+K22+/vVzG
Sy65pOd9Mxa0vE972tOKr371q+V2jG0a33vTTTcV3/nOd8q/8/pr77vvvim3
6VZbbTXhtf/8z/9cfP/73y9uueWW4qGHHirvJxvt5I1vfGNjfaCIpJPKLACA
xNSOU0RkzFO/R2nUM6vpK664YnnPy3DKKacUX/ziF3vWO6JmVum+N+kGG2xQ
/P73v5+ybhJi/GN8V32ZhqmTxnjXyjve8Y4JddOqThrfF/cZmJ/ddtttwjLV
x97+9re/Le+/WK2furjXZtQKoxbcLeqMcX/V6WyXfuqke++9d+d13XXSqHfW
a9zdoj7VXZcaZP1Eou4VNdWpxLaoasVN1Um33nrrCa97+tOfPmH+IossUnzt
a1+b77LEOnrnO9854X2D1kkH2R71MbEHHnhgWX+vVHXSpzzlKRM+Z8cdd+yM
6ey2zz77THt5YzvFv29MJf6NYJNNNum8frp10riX7vxEXb3tvlFEmk1lFgBA
YmrHKSIy5qnfo/RHP/pRZ/rrX//6zvSow9XrhPVny++5556d6TE+rpoetbZ6
jfT6668v3v/+9xdvfvObi/33378cn1j54Q9/OGGZetVtFl988fKa+w984AMT
6in/63/9r3L62muvXb6ufs/Os846q/z/MV4txtLFM3e6P//WW28ttthii7Km
G+MgKzFmrl5Tq9fFot4Xvy2WO+pW9dpg1KZiDF+MD4wxePG89brPfvaz09ou
/dRJ63W3iy++eMK8gw8+uDMv7o8Q6+sZz3hG8a//+q9lfS9EHax+n9dB1k+M
TY6xkZWof8c6i1p1jLmtRF0+xhDH/RJiu8U6rMTviGmRGHM5zPqJa7/j+V7X
XHNN5zVxz8zuz4kxs3Vxr4k3velN5eeff/75nenx9xr3xu3199BPnXSQ7VE9
5yr87Gc/K+vz99xzT/Gb3/ymc6+C7uebxfy4V3C02xgLXb83xt///vcJzz2b
3/JedtllnXkxjjrGZ8d6OPPMMzvTY9x59fqYH/feqMTfRLVNq/HE2223XWd+
1FXjPsjRfuPvLMbzVuY3bllExi+VWQAAiakdp4jImKde/4wxkNX0uL638trX
vrZYZ511Ov/9q1/9qvO6H//4x53p9RpgfYxjXMMc1+7Wv3f77befUNep3zdy
mPuT1us64ROf+MSk33zEEUd0noe08847d6ZHba5e64v6TTWvXhcLcY10NS/G
ydVFrTRqXzEvrsOvj9mN+tJ0tsuC6oDxPKL4jqjT1n3oQx/qvCbG4EY9s9J9
T4QYs1ep35NgkPUTte9K1FaXXnrpzryo4cW4w8pb3vKWzrz6PQMW1vPuY4xm
XCMeYznrn7HccsuV9cRK1LXr85/4xCdOGFcbf+u9/h6mWycddHvUPy9Ebbk+
bjvy5Cc/ecJronYZ/7ZQzY86ZKyHSmyvBS1v1Grrzw572cte1pn34he/eML3
PfOZz+zMi2eJVXrdn7S+Trv/3aA+Pr0aKysieaQyCwAgMbXjFBEZ83Tfo7Sq
71VjFOO+nnGP0ZhWXUse9ZaoIcW06lnloX79bVybXjnqqKMmfW/U3O66666e
9ZKZqpNeeeWV5XXV/ayP+nJ/6lOf6kzvrpPWa0YxPrIaCxjifpL1z/zyl7/c
mRf3vJzOcvRTB6zE+Nl6/SzGclaiPhe1y9huVWIsY2W6z3+aav3U1/s3v/nN
Se+L501tvvnmZdZdd93O9CbqpDEu9JOf/OSE+6NGol5bV/3t1/Oxj32sMz/q
39X9Zwepkw66PeqfF2NBu+8dEOmuk3784x+f9JpTTz21Mz/+VqbT3qZK932J
YxxpNW9+ddK4J0VdPMervg5iHHBVS44xvFU/IyLjn8osAIDE1I5TRCSD1Mc7
xvjSGKtYjbOLsV/V6+rXSL/qVa8q1lxzzc5/x3jBqoYUtcmo58yvZhOpX5Ne
H585U3XSuMa51/dGjTbuARC1qLhmvtd9RkN9TF93nfRJT3rShM+s32OgXj+M
xO+vxPXP09km/dQBY4znAQccMGmZ6mN6FySu9R50/XRv7+r+BtPJTNVJ4x6e
8XdTJT43/l7r99aMml3Ua6vPqN8zIsY89/qeGEtd96xnPWvS38N066SDbo/6
59Wvca+nu04aNdfu19TvmxD3wZhOe4txzP/n//yfsh+Ie99OJdpl9Z751Unj
Xgj9iPs9tNUvikizqcwCAEhM7ThFRDJI/R6lcR338573vM5/x7zqdf/+7//e
mf7hD394Qj2kfj15jJOri/sj9vreM844o/Oa+r1RZ6pOOtW9QOMZ23UxTjbG
ecZ768++mapO2l0Xi9Tv/xj3mqzP23XXXTvzBq2TxrO0ou5XpT4WN+6H2usz
4j6y0xW10KiPD7J+pru9e2Wm6qRT3b81lq26T22YO3du53fWn00W95zt9f74
94C6l7zkJQv8e5jq73fQ7VH/vPo9gOvprpNWy1lPPL+pUq9fTrW8MWa0/ly0
WKYbbrih/DuIv4e66dZJ3/CGN0x7HYSoqzbRB4pI+6nMAgBITO04RUQySP0e
pb/4xS+Kd73rXZ3/3mGHHTqvq9coDzvssAnPCY+xedXrYnxh/TlNU40nPe+8
8zqv+e53v9uZPlN10rjWuvs7N9100wnvj+dC1efX752YUp20uw4Y9wati+e6
d39G/Xk6MS50Ot87yPqJel7cn6ES16pP929vYddJI/HssLr111+/nD6d8aT1
55mFuE/vgv4epvr7HWR7LKg9VOmuk/7Lv/zLpNfE/Vcr11133QI/v36P4lg/
9XtNrLzyyhO+b7p10te85jUT3veiF71o2utBRMY7lVkAAImpHaeISAap36M0
rq2tP1+7us44EvcKrJ4FE89yqtc563WSSDxfvnL00UdP+s64Rv/ee+/tvKb+
vKWFWSeNMaaV+rXNkbjPaP25PinXSaMWHTXtSoyHrO4jW+Xtb3/7hM9YccUV
F/i9g66f+rjDqKF3f24sS7w+Un+OeRN10u77kL785S8vp//v//2/J0yvP4uo
SvwNVeLvNdbBgv4epvr7HWR7LKg9VOmuk9af51Ul3lupj/+e6vNj7GolxjDX
PytqpnXTrZN23w85tsF0t7mIjHcqswAAElM7ThGRTFK/R+mf/vSn8v/ffvvt
k1537rnndmpGVc20fm/SKvWxczEWLZ7fUp8f97+sxFjEZz/72Z15C7NOuu++
+3bm33fffROe81QfRxvitdW81Oqkkbh3Y/2+oHGPzvr8eL56fVzvRz/60Qnz
o0Z1/PHHF//3//7fsoY3zPqJ+zVU4u+nXrONemD9PgE77rhjZ17cQ7bSz/PN
p1snjXu21q+7j7+1qCnGvAU9736ppZaasF3rY54Hfd59v9tjQe2hSned9OKL
Ly7vM1vNX2uttSY87/4//uM/Fvj5cX/ayn//939P+L4jjjhiwvfF85iqeW99
61s70+M+DVVtuUp9TPJJJ500YV6M1437SET9fI899ujce0BExj+VWQAAiakd
p4hIJqnfo3SqGkak/iyYSq/6VtTG6s82uuaaa8prxbfccsti//33n1Cz6X4+
+sKsk9bHuoWoF8X9WOP68hhLG8/Jqfz6178u58V3pFgnjdTrk3H/yLiuuT4/
xnZW4jnica15XFsfy1h/xtGb3vSmodZP1OGiHl6Jevp2221X1vsuuOCCzvR4
ftCSSy7ZWb76+NWoIe62227lMqy22mp9rZ/u5zjF31TcZ7Wq+Ve6x6zG99XF
++IemlETri93/LvAuuuu23nfIHXSQbbHgj6vSnedNP7tIu5pu9VWW5W/pf7v
INH26mNnp/r8+ljfeE/c2+GFL3xh+TcXf2v1z4zXrrfeeuX7Xv3qV0/aNrG+
qmvs3/GOd0yYf9RRR5X3N9h2220n1FCjr2m7XxSR5lKZBQCQmNpxiohkkvo9
Siv1a+GrdD/3PdSvv64nxjvefPPNk15fd+KJJ06om0UWZp00vuvKK6/suSxx
nXHcu7L7+e7xLJlU66QxJjKuua9E7Sruj1DNj/Xz85//fL7bIO5DOez6ifdG
fXF+z0SP5Yy6an354xr4XjbaaKO+1s90xHrovtY9xsvG+M35ifpl9/0+B62T
9rs9FvR5VbrrpPG3H3XYXrrvFzzV58e2inprL/FMqHheV7d437LLLls++6tb
1KSrz+717y11p556avkMrrb7RRFpLrV+BAAgKfXzHRHJI933DQybbLLJtF7X
fW/SeqK+F3XU888/v7zGOWo3t956a3m/w3i+Tq/3LMw6aSSuf457psZ9BaLG
FXXBWMbq3gHxHKK4r2Is6+9+97tynFyqddJI930v99tvvwnzF1988fI+B1Gf
i5pfjA2M577HeMt//ud/npH1U703xinG/W3jfqVRY4sxpnENeNyHofv+qVVi
nHG8PpbrjjvuKJdz7bXX7mv99BLLfuONN5bXcce14PO7hjtqvXHNe9T143fF
+NFY7liXsT66Xz9onXSQ7TFInTTqz9FWTjvttPKZUVG/jnsKx5jNfj4/7kN6
+umnl9sxEuOEY7xv9TviXgTRrmNbn3322Z33bbzxxuVrY3q1LmMsef2z4z61
0Q9Uf0vRL8Q9EuLZcd3X6ovI+KcyCwAgMbXjFBEREUk83XXSV7ziFa0vk4hI
P1EnBQBSpU4qIiIyOlEnFZFRjzopAJAqdVIREZHRiTqpiIx61EkBgFSpk4qI
iIxO1ElFZNSjTgoApEqdVEREZHSiTioiox51UgAgVeqkIiIiIiLSVNRJAYBU
qZOKiIiIiEhTUScFAFKlTioiIiIiIk1FnRQASJU6qYiIiIiINBV1UgAgVeqk
IiIiIiLSVNRJAYBUqZOKiIiIiEhTUScFAFKlTioiIiIiIk1FnRQASJU6qYiI
iIiINBV1UgAgVeqkIiIiIiLSVNRJAYBUFQAAAA1r+zwIAKBb28dHAABAfto+
DwIA6OY4BQAAaIrzDwAgVY5TAACApjj/AABS5TgFAABoivMPACBVjlMAAICm
OP8AAFLlOAUAAGiK8w8AIFWOUwAAgKY4/wAAUuU4BQAAaIrzDwAgVY5TAACA
pjj/AABS5TgFAABoivMPACBVjlMAAICmOP8AAFLlOAUAAGiK8w8AIFWOUwAA
gKY4/wAAUuU4BQAAaIrzDwAgVY5TAACApjj/AABS5TgFAABoivMPACBVjlMA
AICmOP8AAFLlOAUAAGiK8w8AIFWOUwAAgKY4/wAAUuU4BQAAaIrzDwAgVY5T
AACApjj/AABS5TgFAABoivMPACBVjlMAAICmOP8AAFLlOAUAAGiK8w8AIFWO
UwAAgKY4/wAAUuU4BQAAaIrzDwAgVY5TAACApjj/AABS5TgFAABoivMPACBV
jlMAAICmOP8AAFLlOAUAAGiK8w8AIFWOUwAAgKY4/wAAUuU4BQAAaIrzDwAg
VY5TAACApjj/AABS5TgFAABoivMPACBVjlMAAICmOP8AAFLlOAUAAGiK8w8A
IFWOUwAAgKY4/wAAUuU4BQAAaIrzDwAgVY5TAACApjj/AABS5TgFAABoivMP
ACBVjlMAAICmOP8AAFLlOAUAAGiK8w8AIFWOUwAAgKY4/wAAUuU4BQAAaIrz
DwAgVY5TAACApjj/AABS5TgFAABoivMPACBVjlMAAICmOP8AAFLlOAUAAGiK
8w8AIFWOUwAAgKY4/wAAUuU4BQAAaIrzDwAgVY5TAACApjj/AABS5TgFAABo
ivMPACBVjlMAAICmOP8AAFLlOAUAAGiK8w8AIFWOUwAAgKY4/wAAUuU4BQAA
aIrzDwAgVY5TAACApjj/AABS5TgFAABoivMPACBVjlMAAICmOP8AAFLlOAUA
AGiK8w8AIFWOUwAAgKY4/wAAUuU4BQAAaIrzDwAgVY5TAACApjj/AABS5TgF
AABoivMPACBVjlMAAICmOP8AAFLlOAUAAGiK8w8AIFWOUwAAgKY4/wAAUuU4
BQAAaIrzDwAgVY5TAACApjj/AABS5TgFAABoivMPACBVjlMAAICmOP8AAFLl
OAUAAGiK8w8AIFWOUwAAgKY4/wAAUuU4BQAAaIrzDwAgVY5TAACApjj/AABS
5TgFAABoivMPACBVjlMAAICmOP8AAFLlOAUAAGiK8w8AIFWOUwAAgKY4/wAA
UuU4BQAAaIrzDwAgVY5TAACApjj/AABS5TgFAABoivMPACBVjlMAAICmOP8A
AFLlOAUAAGiK8w8AIFWOUwAAgKY4/wAAUuU4BQAAaIrzDwAgVY5TAACApjj/
AABS5TgFAABoivMPACBVjlMAAICmOP8AAFLlOAUAAGiK8w8AIFWOUwAAgKY4
/wAAUuU4BQAAaIrzDwAgVY5TAACApjj/AABS5TgFAABoivOP4RTkbO5jWbvt
v0GAcVZ1uG0vBwAAMP6cfwynjeIcSZlbqJUCLDRVZ9v2cgAAAOPP+cdwautP
MopaKUAzHKcAAABNcf4xHHXSPFO58cYb1UoBFiLHKQAAQFOcfwxHnTTPVJ7/
/OerlQIsRI5TAACApjj/GI46aZ6pLLvssmqlAAuR4xQAAKApzj+Go06aZ+p1
UrVSgIXHcQoAANAU5x/DUSfNM911UrVSgIXDcQoAANAU5x/DUSfNM73qpGql
ADPPcQoAANAU5x/DUSfNM1PVSdVKAWaW4xQAAKApzj+Go06aZ+ZXJ1UrBZg5
jlMAAICmOP8YjjppnllQnVStFGBmOE4BAACa4vxjOOqkeWY6dVK1UoDhOU4B
AACa4vxjOOqkeWa6dVK1UoDhOE4BAACa4vxjOOqkeaafOqlaKcDgHKcAAABN
cf4xHHXSPNNvnVStFGAwjlMAAICmOP8YjjppnhmkTqpWCtA/xykAAEBTnH8M
R500zwxaJ1UrBeiP4xQAAKApzj+Go06aZ4apk6qVAkyf4xQAAKApzj+Go06a
Z4atk6qVAkyP4xQgVwUkoO120JS21zOEttsBj7M9hlNbf5JRKsPUSdVKARbM
cQqQq4V+Qg7T0HY7aErb6xlC2+2Ax9kew6mtP8kolWHrpGqlAPPnOAXIlfMM
aTO57X+1N2kzubW31Nkew9Gf5pmZrJOqlQJMzXEKkCvnGdJmctv/am/SZnJr
b6mzPYajP80zM10nVSsF6M1xCpAr5xnSZnLb/2pv0mZya2+psz2Goz/NMwuj
TqpWCjCZ4xQgV84zpM3ktv/V3qTN5NbeUmd7DEd/mmcWVp1UrRRgIscpQK6c
Z0ibyW3/q71Jm8mtvaXO9hiO/jTPLMw6qVopwD84TgFy5TxD2kxu+1/tTdpM
bu0tdbbHcPSneWZh10nVSgEe5zgFyJXzDGkzue1/tTdpM7m1t9TZHsPRn+aZ
JuqkaqUAjlOAfDnPkDaT2/5Xe5M2k1t7S53tMRz9aZ5pqk6qVgrkznEKkCvn
GdJmctv/am/SZnJrb6mzPYajP80zTdZJ1UqBnDlOAXLlPEPaTG77X+1N2kxu
7S11tsdw9Kd5puk6qVopkCvHKUCunGdIm8lt/6u9SZvJrb2lzvYYjv40z7RR
J1UrBXLkOAXIlfMMaTO57X+1N2kzubW31Nkew9Gf5pm26qRqpUBuHKcAuXKe
IW0mt/2v9iZtJrf2ljrbYzj60zyTmLmzAMZU1dG1vRwATav1fyKNJ7f9r/Ym
bSa39pY622M4+tM8k5pZAGNKPwfkqtb/iTSe3Pa/2pu0mdzaW+psj+HoT6XN
aL/AuNPPAblyniFtJrf9r/YmbSa39pY622M4KfanT3ziE3uOOXzkkUeKO++8
s7j00kuLww47rNhyyy2LRRZZpNVl/c53vlMu22c+85nW19soRvsFxp1+DshV
iucZkk9y2/9qb9JmcmtvqbM9hpNif1qvk15++eXFBRdcUOaiiy4qbrjhhrJe
WrnkkkvK5wK1tayD1EmjzvvDH/6w9fWcQrRfYNzp54BcpXieIfkkt/2v9iZt
Jrf2ljrbYzgp9qf1OulGG200af7yyy9fbL/99sVVV11Vvub+++8vXvayl7Wy
rP3WSZdeeuni73//uzrpvGi/wLjTzwG5SvE8Q/JJbvtf7U3aTG7tLXW2x3BS
7E8XVCetsswyyxRnnHFG+bpbbrml/O+ml7XfOukmm2xSvl6d9PFov8C4088B
uUrxPEPySW77X+1N2kxu7S11tsdwUuxPp1snjay44orFHXfcUb72E5/4xKT5
q666avGFL3yhuOKKK4oHHniguO+++8pr9T/72c8Wyy67bM/PfP3rX1/8+Mc/
Lv74xz8WDz/8cHlP1Ljmf8899yxWWGGFCa+dX530ve99bznvtttuK9Zdd93i
5ptvLnqJ31u9Z8011ywOOuig4uqrry4efPDBcnnj3gNf+cpXijXWWGPSd5x4
4onlZ+ywww7F+uuvX/zgBz8obr/99uKhhx4q71EQ74vxt21v06mi/QLjTj8H
5CrF8wzJJ7ntf7U3aTO5tbfU2R7DSbE/7adOGtl3333L11544YUTpj/vec8r
/vCHP5Tzou74rW99qzj++OM70373u98Vq6yyyoT3fOADHyjnxbXxP/3pT4sj
jzyyOOGEE8qaaYh66XLLLdd5/VR10i222KKssd5zzz3Fi1/84nLapz71qeL0
00/vLM/+++9fZrHFFivnx70D7r777nJ+1HXjWVWHH354cc0113TqrVELrX/P
d7/73XLeN7/5zfK7ok662267lcsT3xHi3q5LLLFE69u1V7RfYNzp54BcpXie
Ifkkt/2v9iZtJrf2ljrbYzgp9qf91klf85rXlK+N5zsttdRS5bRFF120fF5S
OPTQQ4snPOEJndfHONIYLxq+973vdaYvssgixZ/+9Kdy+mabbTbhO6LO+KMf
/aic98EPfrAzvVeddMMNNyzHgcZ40Fi2+ufsuuuu5eu7r7uPWul1111Xzvvq
V79aLn81L5b9qKOOKuedf/75E95XfX/4yEc+MmFe1HPnzp1bzovvbXu79or2
C4w7/RyQqxTPMySf5Lb/1d6kzeTW3lJnewwnxf603zrpWmut1Xl9/O+YFtfO
hxgHGs9O6n7P6quvXo73jMS1+TEt6qfh0Ucf7Tn+Mt4T9xetXh/prpM+4xnP
KL8zxqNutdVWkz5jqjrpm9/85nJ6jBnt9d0rr7xyuazhJS95yaTvj2v6q3Gp
9cS9CMLZZ5/d+nbtFe0XGHf6OSBXKZ5nSD7Jbf+rvUmbya29pc72GE6K/Wm/
ddKoW1bWW2+9ctqXvvSl8r/jOvup3nfuueeWr6nXM2+66aZy2iGHHFKstNJK
C/zuep00Xn/llVeW/73TTjv1fP1UddK4j2g45phjpvyuX//61+Vr6mNDq+8/
7rjjer5n9uzZ5fy//OUvrW/XXtF+gXGnnwNyleJ5huST3Pa/2pu0mdzaW+ps
j+Gk2J/2Wyd9wQte0Hl9PNcppv2///f/yv++7LLLylpir8RzjsLuu+/e+azN
N9+8fN5TiPGbMQ5z7733Ll7xileU1+V3f3dVp4x7pJ5zzjmdGutUyzpVnbRa
3n322WfK937/+98vX3PAAQdM+v54VlWv90TduLLMMsu0vm27o/0C404/B+Qq
xfMMySe57X+1N2kzubW31Nkew0mxP+23TrrNNtuUr73//vs70/7nf/6nmK6o
cdY/L55NH8+cr573VLn22muLbbfddsJrqzplfHfljjvuKJ761Kf2XNap6qTV
8n7605+e8ndWz2z6+te/Pun7P/vZz/Z8zzOf+czOcj35yU9ufdt2R/sFxp1+
DshViucZkk9y2/9qb9JmcmtvqbM9hpNif9pvnfTYY4+dVHusxl5ONc5yunn+
859f/Nu//Vvxq1/9qrNMb3jDGzrz689RinprXP8ezjrrrAnPYqoyVZ00nlPf
q2ZbT/WbPv/5z0/6/v3226/ne9Zff/3O8lXPuEop2i8w7vRzQK5SPM+QfJLb
/ld7kzaTW3tLne0xnBT7037qpM973vOKhx56qHztdttt15m+//77l9NOOOGE
GVuu6jPPPPPMzrSqTvm1r32t/O/ll1++84z5XmM8p6qTfvGLXyynT3Wf0chv
fvOb8jXve9/7Jn3/VO+L+wiEu+66q/Xt2ivaLzDu9HNArlI8z5B8ktv+V3uT
NpNbe0ud7TGcFPvT6dZJV1ttteLiiy8uXxfPZHrCE57Qmffa1762nH7vvfd2
7lnana233rp47nOf2/nvddZZp/jABz5QbLzxxj1fH9PDNddc05nW/bz7yCtf
+cryefeRTTbZZMJnVHXSk046acL0LbbYopz+pz/9qVhyySUnffcaa6xRPPLI
I+VrnvOc50z6/j/+8Y/F4osvPul9Mc40nH766a1v117RfoFxp58DRs1jXdba
M/Q5SZ9n1MVx9p133llceumlxWGHHVZsueWWPZ9N0GR6nWfI9DMq+99Rbm87
7rhj+Z0/+clPWt/eOeQ973lPub7jnn1tL0t3RqW95SLX7RH96WOZPQOfk/Tx
S6866ZOe9KTyefLVs+njmOZZz3rWhNfENe+//e1vy/lxX88lllhiwvydd965
nHfjjTeW3xfTXve615XTLr/88uIpT3nKhNfHcdI3vvGNcn5c/15Nn+r4JcaS
hljGep12hx12KKfHstVfHzXeK664opz31a9+dcJxWdRNq+c8nXrqqRPeV33/
3/72t0nX3q+99trlvVJD7MPa3q69kmv7BfKhnwNGzbzzjLnDnmukfp4Rx/wX
XHBBmYsuuqh8xms1LiFccskl5T242lrWQeqkUeftvm4t14zK/neU21vbddLc
/t6nqpPG+K/wohe9qLVlG5X2lotct0etPz1ymD51lI5fItdff31ZE6zEtehR
D+z1OXFNfvUspt///vfF9773vTK/+93vymkx1nTTTTftvD5qk8cff3w5L67l
j/7+6KOPLuui8b0hxnvGM+Sr90x1/BJ1z5///OflvKhxVtPjfqGPPvpoOf3C
Cy8sv+OlL31pOe/FL35xWfMN0ecfcsgh5edX9eCrr7560vOhqu+PGm68N47n
4n3xO++5555yXixHfaxtSsm1/QL50M8Bo2jeOUYxTP0m9fOMXuMx4h5a22+/
fXHVVVeVr4lntb7sZS9rZVn7rZMuvfTS5fVsOdWN5pdR2v+Oantrs06a4997
nNNHH9Z9HWl1f0B1Uio5b4/HfvaOxT8cOUifmvrxS7eHH364uOWWW8rr1t/x
jncUiy222Hw/a5VVVikOOOCAsjb6wAMPFPfdd19Zb4xnxnePQY3EONQPfvCD
ZW0x6o7xb8rxvnj/V77ylUnjTOd3/PL0pz+9vC9o2GWXXTrTP/7xjxe33npr
WYu97rrrig022KAz72lPe1q5bNdee23x17/+tVzeuLfAXnvtVR63dX9H9f17
7LFH+Wz7Y445prwGP2rJcZ/U6DNjH9L2Np0qObdfIA/6OWAUFY+Pyajru36T
+nnG/O7vtcwyyxRnnHFG+bo494j/bnpZ+62Txv2+Qk51o/lllPa/o9re2qyT
9vv3vuyyy7b+N7mwEs9PCeqkVHLeHsU/xpTWHdlPn5ri8YtMP6N+36Kc2y+Q
B/0cMKqKf4xxG6h+k+J5Rj/Pi417Z1X3sPrEJz4xaf6qq65afOELXyjvnVWN
x4hru+L+W1PVZF7/+tcXP/7xj8txDTH+I8ZlxDX/e+65Z7HCCitM+zj/ve99
bznvtttuK9Zdd93i5ptv7rGpis79xSJrrrlmcdBBB5VjRh588MFyeePavRgL
Es9C6P6OE088sfyMuG9YXBP3gx/8oLj99tvLsR5xj4J4X69xHKlk1Pa/qbS3
N77xjeW93uI6yhh7E3+rcX1k93M3IvOrkw7SPuL6zne9613lmKU///nPxV/+
8pfyPTEmqP5vFfP7e4/2EGLcUdx774gjjijuvvvu4sorr5zwXf22hyOPfHzz
xPLF2Kn43Pg3lFhH0Q7jes4Y8zTd9Txnzpzy86LtT/WaaPv19dt93X31391i
rFT9c17wgheU18nGdarRfmMs11lnnVVuvxgnNuzfTO3Pb2Ta27jLfXsUE8eU
9t2nzlR/Ku1EnRQgbfo5YFQVk8e49XWukeJ5Rj910si+++5bvjbul1WfXr+/
V9RZvvWtb5X376qmxbVocV1b/T3xvNgQ1wr/9Kc/LesuJ5xwQlmHClEvXW65
5RZ4nB/Pf40aa9xjK+7bFdM+9alPlc9trZYn6iSR6tq7uHdA1IpC1K3iWVWH
H354+XzaEHWeqIXWvyee8RC++c1vlt8VddLddtutXJ74jhD3Ret+DkQqGbX9
bwrt7cADDyw/I2ppcf3moYceWvzsZz8rp8W94+K6y/rrp6qTDtI+IlHLC1FX
jb/nU045pazXhqiXVu1jfn/vUcMMcf1mtN+4d0YsX/w9V98zSHs4+OCDy3mf
+9znyjpt3JsvntEc/4ZSPRcl7tcx3fZQ1Ti7n1tST9yLL8S/VdTfU9VJ4/59
8btjfYWo3cZ/b7755p3P2G677Tr3LTz77LPL33HyySeX6yXEdpmJZ9aNWnsb
d7lvj3n96ZxB+9SZ6E+lvaiTAqRNPweMsqL3GLdpnWukeJ7Rb530Na95Tfna
uBfXUkstVU6L8VdV/SLqSPXnAMQ4uRgvGmJ8WTU96hBVvWezzTab8B1RV/nR
j35UzqvXoXod52+44YbluLcY/xbLVv+cqNmE7uuQo3YU9/oK8bzY+vixWPaj
jjqqnHf++ef3PM8IH/nIRybMi3pV3OMrxPe2vV17ZRT3v222t2233bZ8f9QP
u2uE8bzjuCdc1Nue+9zndqb3qpMO0j4iMU4zxHNB4v519fdUz/2Imn01faq/
9xjHGqrxod3PMhm0PcTY0xDr4KMf/eiEebGM1djzGI87nfUd48djnYbnPOc5
k+ZHrTlEPbMafzvVc5yq7+6+7j5+e1UPjfsu1+ets8465ZjbEJ876N9NlVFs
b+PM9pg1vzGlC+xTh+1Ppd2okwKkTT8HjLLiH2PcHu73XCPF84x+66RrrbVW
5/Xxv2NaXDsfYhxor+cArL766uV4z0jUbGJa1DlCjMnrNd4s3hPXNVevn9Xj
OP8Zz3hG+Z0xHnWrrbaa9BlT1Y3e/OY3l9NjjFyv71555ZXLZQ0veclLJn1/
jJ3r9UyIGEcXYoxa29u1V0Zx/9tmezvvvPPK98eY4V7z4xka4Wtf+1pnWq86
6SDtIxJjk0N8Zvd7Xv3qV5f3ejjttNMW+Pf+5Cc/ubOSel3TPmh7qOqk8e8D
vdpDjLcOcY+A6a7zuJ9BvY3XE+NWQzx/pJrWb500ntMSYvxor+/feuuty/kx
VnfQv5sqo9jexpnt0elP5yygL+3Zpw7bn0q7UScFSJt+Dhh1xYLHuPU810jx
PKPfOmk1Ni2st9565bQvfelL5X/H9apTve/cc88tX1OvZ8a9AcMhhxxSrLTS
Sn0d58fr4/6KYaeddur5+qnqRnG/xVCvt3Tn17/+dfma+tjQ6vuPO+64nu+Z
PXt2OT/uIdn2du2VUd3/ttHeYnxwjJkO9fGi9cS13CGeMVxN61UnHaR9xL8j
xL8hhLhv6HSWeTp10uq+FPUM2h6qOumxxx7b8z3RrkPck3W6632bbbaZtE6r
xDX8oX4Nfb910qr2HPf86PX9Uceutnvcj3mQv50qo9rexlWtj1h7BjN7hrPj
DGfvHplT9GduURuHOquBfZVId2p/fwBjST+Xlj6PlYCJFjTGrW5u9T9mJXDM
WaXfOmk8/6RS1RGqMWCXXXZZWUvslRj7FnbffffOZ0W9o7qPYIxXi3GYe++9
d/GKV7yi5/0Bqzpl3GPxnHPOKf931GKmWtap6kbV8u6zzz5TvjfutRhi/Fn3
909V94m6caX+jJ1UMgYaa28vfOELOx8U18P3+puOv6sQ13FX7+tVJx2kfdS/
f7rPFZpOnXS11Vab9L5B20NVJ/3iF7/Y8z3V/KgTT3e9R38Uz6sKz3rWszrT
o74b4h6r9fsW9Fsnjec1Vdtnqm1RXfsf9zrNvL3BJG3vxyTP1P7+AMaSfi4t
rRxkQZ7mVv9jVgLHnFX6rZNW473qtaGoUUxX1DjrnxfP4o56SvU8m0rcJzDu
D1l/bVWnrO4vGKIe8tSnPrXnsk5VN6qW99Of/vSUv7N6ZlNcW939/fF88l7v
eeYzn9lZrqhNtb1tu5OZudX/GGRdRa2+H9V1573qpIO0j+r7496f013m6dRJ
o713v2/Q9lDVQbufJd89v14njedVxX0r6ul+blM8e6l7eeI7wpe//OUJr+23
TlrVQKej+77J2tvYmDuDmTPDOXKGMxPjSeP11f1PWt+PSZ6p/f0BjCX9XFps
D+hfkfF193GNbajXYqqxZv1cX9srz3/+84t/+7d/K371q191lukNb3hDZ379
OUpRT4rr38NZZ53Vc8zdVHWj6r6J3TXbeqrf9PnPf37S9++333493xPP+qlU
z7hKKaPa37fR3urbstc9RadKrzrpIO2jPm578cUXn9Z7Bq2TDtoeBqmTVmNF
66KmWX/fv/zLv5TTf/Ob33SmxbOsQnfds986aTV9iy220N4yY3s8rnB/UhnB
aL/AuNPPpcX2gP4UtXEV/ZxjzHtvcucZ/dRJ43nTDz30UPna7bbbrjO9Gut1
wgknzNhyVZ955plndqZVdcrquTnLL7985xnzvcZ4TlU3iuuEw1T3GY1EjSa8
733vm/T9U72vul9lXNvb9nbtlVHs79tqb1EbjeeDhfi7n+77etVJB2kf9fuT
TnV/1Li3Q6S6R8WgddJB28MgddLpJP7NoxpfHmO0X/ayl5X/+9JLL5302n7r
pNV9YHfZZRftLTO2R7kOOvcZ7acvnffegftTkWGj/QLjTj+XFtsD+lMseGxb
z3OMee9N7jxjunXSuK9hPFslRK2hfo/A1772teX0e++9d8pnn8RzpOv1nnXW
Wad8lsrGG2/c8/UxPVxzzTWdab2e1/rKV76yrGdFNtlkkwmfUdWNTjrppAnT
YyxZ+NOf/lQsueSSk757jTXW6DzL5TnPec6k74/nlvca4xfjTMPpp5/e+nbt
lVHs79tsb7/85S/L90913874G47xzvXxpr3qpIO0j0j1zKF///d/n/T6DTbY
oJwX/25R/Q1P9fe+oDrpoO1hYdVJI9WzpT784Q936sz1extXWVCdtPu5VVUb
jXsh9/re+P3bb799sfrqq2fZ3saZ7TFrQWNJp+xL5713qP5UZJhov8C408+l
xfaA6SvmP7ZtvucY896f3HnGguqkT3rSk8rnyVfPpr/zzjsnPF8lEuO/4h6D
Ie5juMQSS0yYv/POO5fzbrzxxk6d5nWve1057fLLLy+e8pSnTHh9jI/7xje+
Uc6P632r6b3qpJEYSxpiGet1qB122KGc3n3/w6jxXnHFFeW8r371qxOeGRV1
kuq5NqeeeuqE91XfH/eM7L72fu211+7UZqJW1vZ27ZVR6+/bbm/VvXijvvny
l798wrxVV121OP/888v59bGJveqkg7SPyLve9a5y+t133z1hXGSMIT3jjDM6
n1dNn+rvfUF10kHbw8Ksk2644Yble0855ZTynqZRp+11H+Kp6qTVOPO3vOUt
E6avtdZanfsbdz/zPv7t4/DDDy/nzcTY+FFrb+Mu9+1RTD2WdIF96bz3D9Wf
igyT3NsvMP70c2mxPWD6it5j26Z1jjHv/cmdZ9TrpFGzjDFsVeKegFETrMS1
t1EP7PU5cW1yda3s73//+/IZ4ZGocYSoNW266aad10ct5vjjjy/nxZi4qCsd
ffTRZV20uhdhjG+LZ8hX75mqThp1np///OflvKjpVNPjHpPVtcsXXnhh+R3V
M6xjnFnUfENcz3vIIYeUn1/Vg6+++upJdZnq+6OGG++95JJLyvfF77znnnvK
ebEc9bG2KWXU+vsU2tuBBx5YfkaMV46/n29/+9vFySefXDzwwAPl9LjGvb69
e9VJZw3QPqpEmwgPP/xw+bcV9cDq7zbGWke9tnrtVH/vC6qTzhqwPSzMOmnk
yiuv7NznI+rCvV4zVZ30xBNPLKfH/VCjvnvwwQd35sU9Q6p+LcbIH3nkkeXr
Y5x4iO992tOell17G3e5b49i8ljSafel894/dH8qMmhyb7/A+NPPpcX2gOkp
Jo9t6+scY95nJHeeUa+TdovazC233FJex/uOd7yj80zvqbLKKqsUBxxwQFn7
iTrSfffdV9ZX4hnZ3WNQIzHO7oMf/GBZ/4kaTYwZi/fF++O62+5xplPVSSNP
f/rTy/uChvr4vo9//OPFrbfeWtZbrrvuuvJ65Wpe1EJi2a699tryOdixvFE3
2Wuvvcp7n3Z/R/X9e+yxR3nfxGOOOaasrUTNJcavRb2on2f+NJ1R6u9Tam9x
bX2Ma7z99tvLbR1/T3PmzCnHWXc/P2yqOumsAdpHJP49IcaVxnXiUYuP74+/
13gmVK+/0V5/79Opk84aoD0s7Drpnnvu2VnuWAe9XjNVnTT+PednP/tZ8eCD
D5bjcaPuW58fNeWjjjqqHMMb6yr6jvh3oGjbK6ywQnbtLQc5b49i4ljS6Et3
HOAzkjt+qae69/Buu+3W+rIMm177kejTQvybXdvL10Zybr9AHvRzabE9YHqK
f4xt67teU/uMpM8zZP6ZX512FDJK/b32JqOeUWpvOch5exSPjyUdqD5a+4yk
+9O266Txb0wxfn0mPkuddHJybr9AHvRzabE9YMGKx8e2DVyvqX1O0ucZMv+o
kzZDe5NxyKi0t1zkuj2iHx2mPlr7nKT707brpPH96qQLL7m2XyAf+rm02B7Q
nNTPM2T+UScdLdqbtJnc2lvqbI/hpN6ftlknjWfAxb1KRrlOGvd4iWcEtr0d
p4r2C4w7/VxabA9oTurnGTL/qJOOFu1N2kxu7S11tsdwUu9Pp6qTxnPaQtzj
OO55fsQRR5T3XY97Pd92223l8/R6Pbftuc99brnPj3uPRw30L3/5S3k/6XiO
47Of/ezO6+L9vWy++ead18R9yz/ykY+Uy1jd0zzudx33vd5ss80mffcgddI3
vvGN5TPr4vmX8fnxPfFcy0022WTSa6v7Oh9++OHl55555pnlPbO77+OcUrRf
YNzp59Jie0BzUj/PkPlHnXS0aG/SZnJrb6mzPYaTen86VZ304IMPLqd/7nOf
K26++ebi+9//frHrrrsWn/jEJ4rf/va35byrrrqqWGKJJTrv2WijjYr777+/
nHfRRReVtdDI5ZdfXk6L575Vz4R861vfWtYbQ9RT47l2kaqWGjXSX/ziF+X8
eKZcPBczPuu8887r9BHvfOc7Jyxzv3XSAw88sJwXz6SLzz/00EPL59iFRx99
tHxeZv31b3/728t5xx13XHHOOeeUz/477bTTit1337317ThVtF9g3Onn0mJ7
QHNSP8+Q8U5u/b32Jm0mt/aWOttjOKn3p1PVSQ866KByeoyx/OhHPzph3rLL
Llvccccd5fwYj1lN/8EPflBO23fffSd9zyc/+cly3oknntiZtv7665fTel13
//73v7+cd/311xcrrbTShHlRrw0xrnXRRRftTO+nTrrtttt2arCxHPV5r3vd
68rabfz2GB9bTd9uu+3K99x0003FnDlziic96Umtb78FRfsFxp1+Li22BzQn
9fMMGe/k1t9rb9JmcmtvqbM9hpN6f7qgOmlcP7/YYotNel9VE91jjz060y68
8MJyWq9r4uMzYvozn/nMzrT51Umf97znlXXJXte/x31No+4ZnvOc53Sm91Mn
rcalTnVf1q9//evl/K997Wudadtss02nf+q1XClG+wXGnX4uLbYHNCf18wwZ
7+TW32tv0mZya2+psz2Gk3p/uqA66bHHHtvzfXFPzvCFL3yhM+3oo48up8U1
6fV7kU6V+dVJ63nCE55QrLLKKsVaa61V1j0j1XjWl7/85Z3XTbdOutxyyxWP
PPJIOb0+XrSeuE9quPjiizvTqjppLG88v6ntbTedaL/AuNPPpcX2gOakfp4h
453c+nvtTdpMbu0tdbbHcFLvTxdUJ/3iF7/Y833V/C996UudaWuuuWZxww03
dNrwZZddVo7H3GKLLYonPvGJkz5jQXXSN73pTcVZZ51VPPjgg8VUXvGKV3Re
P9066Qtf+MLO++Oep3EP9e788Ic/LOfH/Var91V10iuuuKL17TbdaL/AuNPP
pcX2gOakfp4h453c+nvtTdpMbu0tdbbHcFLvTxdUJ41nK/V6X686aWT55Zcv
r8W/9NJLJ9Qz4z6gn/3sZ8uxodVrp3N/0hj3efzxxxf/+q//WtYpt9pqqzLx
eYPWSeM9/ajuO1DVSWOdtb3dphvtFxh3+rm02B7QnNTPM2S8k1t/r71Jm8mt
vaXO9hhO6v3pTNdJ63nqU59aPpM+7mVaXedef/1UddIllliiUwf90Ic+1POz
77rrrnL+IHXS6nvD0ksvPe11pU4KkB79XFpsD2hO6ucZMt7Jrb/X3qTN5Nbe
Umd7DCf1/nRh1knrqe73+dBDD3XGZ05VJ91ggw3K6VFbXXLJJSd91hprrNHp
Jwapk0ZttHoOVDwvarrrSp0UID36ubTYHtCc1M8zZLyTW3+vvUmbya29pc72
GE7q/elM1UlXXHHFYvvtty/e9ra39Xx9PPfor3/9a/meGGca06o66T333DPh
tdX0v/3tb8Wiiy466bPi2VGVjTfeuDO9n+fd//KXvyyn77PPPj2Xd5111ine
8IY3TBhvqk4KkB79XFpsD2hO6ucZMt7Jrb/X3qTN5NbeUmd7DCf1/nQm66Tx
zKP77ruv+Kd/+qdJr99uu+3K1992222de5TG8+vDo48+Wqy88sqd18Yzn2Lc
adhyyy0nfM573vOe4vrrry+uvvrqcv62227bmddPnbSqed57773Fy1/+8gnz
Vl111eL8888v5++yyy6T3qNOCpAO/VxabA9oTurnGTLeya2/196kzeTW3lJn
ewwn9f50Jq+7/+AHP1jWPEPUGY899tjiuOOOKy644IJOrfKtb31r5/VRL731
1lvLeXPnzi1OPfXU8nlNMa8aMxpjUI855pji0EMPLZ8NFXXYTTbZpDjssMPK
+TfeeGPxjW98o1huueX6qpNGDjzwwM68eM+3v/3t4uSTTy4eeOCBcno8877+
3Cl1UoD06OfSYntAc1I/z5DxTm79vfYmbSa39pY622M4qfenM31/0te//vXF
j370o+KWW24pHn744XJc6A033FB873vfK1760pdO+pzNNtusuPLKK8tr7KNm
+u53v7ucvvjiixf77rtv+d74nD/+8Y/FCSecULzgBS8o5z/jGc8ozjvvvLKO
GmNLV1hhhb7rpJG4tv6UU04pbr/99s4yzJkzp9hpp50mXfOvTgqQHv1cWmwP
aE7q5xky3smtv9fepM3k1t5SZ3sMR38qbUb7Bcadfi4ttgc0x3mGtJnc+nvt
TdpMbu0tdbbHcPSn0ma0X2Dc6efSYntAc5xnSJvJrb/X3qTN5NbeUmd7DEd/
Km1G+wXGnX4uLbYHNMd5hrSZ3Pp77U3aTG7tLXW2x3D0p9JmtF9g3Onn0mJ7
QHOcZ0ibya2/196kzeTW3lJnewxHfyptRvsFxp1+Li22BzTHeYa0mdz6e+1N
2kxu7S11tsdw9KfSZrRfYNzp59Jie0BznGdIm8mtv9fepM3k1t5SZ3sMR38q
bUb7Bcadfi4ttgc0x3mGtJnc+nvtTdpMbu0tdbbHcPSn0ma0X2Dc6efSYntA
c5xnSJvJrb/X3qTN5NbeUmd7DEd/Km1G+wXGnX4uLbYHNMd5hrSZ3Pp77U3a
TG7tLXW2x3D0p9JmtF9g3Onn0mJ7QHOcZ0ibya2/196kzeTW3lJnewxHfypt
RvsFxp1+Li22BzTHeYa0mdz6e+1N2kxu7S11tsdw9KfSZrRfYNzp59Jie0Bz
nGdIm8mtv9fepM3k1t5SZ3sMR38qbUb7Bcadfi4ttgc0x3mGtJnc+nvtTdpM
bu0tdbbHcPSn0ma0X2Dc6efSYntAc5xnSJvJrb/X3qTN5NbeUmd7DEd/Km1G
+wXGnX4uLbYHNMd5hrSZ3Pp77U3aTG7tLXW2x3D0p9JmtF9g3Onn0mJ7QHMK
SEDb7aApba9nCG23Ax5newyntv5EGo/2C4w7/VxabA9oTgOn5LBAbbeDprS9
niG03Q54nO0xnNr6E2k82i8w7vRzabE9gFHxWFc1J9L2cgAwWhzvDkedVNqM
9guMO/1cWmwPYBQ81k3Nrg3Rmt328gAwOhzvDkedVNqM9guMO/1cWmwPYBTM
G0tamdP28gAwOhzvDkedVNqM9guMO/1cWmwPIHVdY0mNKQWgL453h6NOKm1G
+wXGnX4uLbYHkLqusaTGlALQF8e7w1EnlTaj/QLjTj+XFtsDSNkUY0mNKQVg
2hzvDkedVNqM9guMO/1cWmwPIGVTjCU1phSAaXO8Oxx1Umkz2i8w7vRzabE9
gFQtYCypMaUATIvj3eGok0qb0X6BcaefS4vtAaRqAWNJK3PaXk4A0uZ4dzjq
pNJmtF9g3Onn0mJ7ACkqpjeWtDK77eUFIF2Od4ejTiptRvsFxp1+Li22B5Ci
YnpjSStz2l5eANLleHc46qTSZrRfYNzp59JiewCpKfobS1qZ3fZyA5Amx7vD
USeVNqP9AuNOP5cW2wNITdHfWNLKnLaXG4A0Od4djjqptBntFxh3+rm02B5A
Soqpx5LuPcX/rpvd9vIDkB7Hu8NRJ5U2o/0C404/lxbbA0hJMXksadRE1543
r9NfxbQe9dI5rS48AElyvDscdVJpM9ovMO70c2mxPYBUFBPHknbqo7X5k/qr
HvXS2U0uMwDpc7w7HHVSaTPaLzDu9HNpsT2AVMwbSzqpPlqbP2V/VauXzlmo
CwnAyHG8Oxx1Umkz2i8w7vRzabE9gFRMVR+tzV9gf7WgzwAgP453h6NOKm1G
+wXGnX4uLbYHMCr0VwAMwv5jOAUkoO12ALCw6OfSYnsAo0J/BcAg7D+G01wl
DKbWdjsAWFj0c2mxPYBRob8CYBD2HwBAqhynpMX2AEaF/gqAQdh/AACpcpyS
FtsDGBX6KwAGYf8BAKTKcUpabA9gVOivABiE/QcAkCrHKWmxPYBRob8CYBD2
HwBAqhynpMX2AEaF/gqAQdh/AACpcpySFtsDGBX6KwAGYf8BAKTKcUpabA9g
VOivABiE/QcAkCrHKWmxPYBRob8CYBD2HwBAqhynpMX2AEaF/gqAQdh/AACp
cpySFtsDGBX6KwAGYf8BAKTKcUpabA9gVOivABiE/QcAkCrHKWmxPYBRob8C
YBD2HwBAqhynpMX2AEaF/gqAQdh/AACpcpySFtsDGBX6KwAGYf8BAKTKcUpa
bA9gVOivABiE/QcAkCrHKWmxPYBRob8CYBD2HwBAqhynpMX2AEaF/gqAQdh/
AEC+CmZE29uxKbn9XmB06a8AGIT9BwDkq+l64rhqezs2JbffC4wu/RUAg7D/
AIB81Y4DZIDkdhyV2+8FRpf+CoBB2H8AQL7USdVJ+5Hb7wVGl/4KgEHYfwBA
vtRJ1Un7kdvvBUaX/gqAQdh/AEC+1EnVSfuR2+8FRpf+CoBB2H8AQL7USdVJ
+5Hb7wVGl/4KgEHYfwBAvtRJ1Un7kdvvBUaX/gqAQdh/AEC+1EnVSfuR2+8F
Rpf+CoBB2H8AQL7USdVJ+5Hb7wVGl/4KgEHYfwBAvtRJ1Un7kdvvBUaX/gqA
Qdh/AEC+1EnVSfuR2+8FRpf+CoBB2H8AQL7USdVJ+5Hb7wVGl/4KgEHYfwBA
vtRJ1Un7kdvvBUaX/gqAQdh/AEC+1EnVSfuR2+8FRpf+CoBB2H8AQL7USdVJ
+5Hb7wVGl/4KgEHYfwBAvtRJ1Un7kdvvBUaX/gqAQdh/AEC+1EnVSfuR2+8F
Rpf+CoBB2H8AQL7USdVJ+5Hb7wVGl/4KgEHYfwBAvtRJ1Un7kdvvBUaX/gqA
Qdh/AEC+1EnVSfuR6++FNrXdDkaV9QfAIOw/ACBfteMAUSddoFx/L7Sp7XYw
qqw/AAZh/wEA+aodB4g66QJl/HtFGk9u7W2mWX8ADML+AwDypQ6kjtGPjH+v
SOPJrb3NNOsPgEHYfwBAvtSB1DH6kfHvFWk8ubW3mWb9ATAI+w8AyJc6kDpG
PzL+vSKNJ7f2NtOsPwAGYf8BAPlSB1LH6EfGv1ek8eTW3maa9QfAIOw/ACBf
6kDqGP3I+PeKNJ7c2ttMs/4AGIT9BwDkSx1IHaMfGf9ekcaTW3ubadYfAIOw
/wCAfKkDqWP0I+PfK9J4cmtvM836A2AQ9h8AkC91IHWMfmT8e0UaT27tbaZZ
fwAMwv4DAPKlDqSO0Y+Mf69I48mtvc006w+AQdh/AEC+1IHUMfqR8e8VaTy5
tbeZZv0BMAj7DwDIlzqQOkY/Mv69Io0nt/Y206w/AAZh/wEA+VIHUsfoR8a/
V6Tx5NbeZpr1B8Ag7D8AIF/qQOoY/cj494o0ntza20yz/gAYhP0HAORLHUgd
ox8Z/16RxpNbe5tp1h8Ag7D/AIB8qQOpY/Qj498r0nhya28zzfoDYBD2HwCQ
L3UgdYx+ZPx7RRpPbu1tpll/AAzC/gMA8qUOpI7Rj4x/r0jjya29zTTrD4BB
2H8AQL7UgdQx+pHx7xVpPLm1t5lm/QEwCPsPAMiXOpA6Rj8y/r0ijSe39jbT
rD8ABmH/AQD5UgdSx+hHxr9XpPHk1t5mmvUHwCDsPwAgX+pA6hj9yPj3ijSe
3NrbTLP+ABiE/QcA5EsdSB2jHxn/XpHGk1t7m2nWHwCDsP8AgHypA6lj9CPj
3yvSeHJrbzPN+gNgEPYfAJAvdSB1jH5k/HtFGk9u7W2mWX8ADML+AwDypQ6k
jtGPjH+vSOPJrb3NNOsPgEHYfwC5eKyrW/uxzH4se8/LkY9lzmOZO68rnDsv
c+bNi+w4L7PbXn5YGNSB1DH6kfHvFWk8ubW3mWb9ATAI+w9gnM2rje5dzIy5
82qns9v+XTBT1IHUMfqR8e8VaTy5tbeZZv0BMAj7D2DcTFUbnTt3bjFnzpxi
r732KrPjjjsWs2fPLtZee+3yfCT+fySmxbzIkUceWSbep2bKOFIHUsfoR8a/
V6Tx5NbeZpr1B8Ag7D+AcVE8fk39pNpo1ESrWugwic+Iz5qiZrp34z8YZoA6
kDpGP0bl9z62iGvP0Oe03j6e+MQndu9z5uvkk09uvV2Mar7zne+U6/Azn/lM
68sSGZX2lirrD4BB2H8Ao654fPxop3g5k7XRqTJFzXTOTJ2bQ1NSqAONcnI7
jhqV3ztvvzC3GHLMfwrto14nveGGG4orr7xyvjn44INbbxe9svXWW5e/4UUv
elHryzJV1EnHi/UHwCDsP4BRVtSur6/qo7MaPo+J74zvrhajMLaUEZJCHWiU
k9tx1Cj93uLxe6NU/fLsAT+j9fZRr5NutNFGrf/ND5r9999fnbTPjFJ7S5H1
B8Ag7D+AUVQbK1Rqoz5aTzW+tGbg83JoUgp1oFFObsdRo/R75+0nhuqXU2gf
M10nXWyxxcrPbPp3nHnmmeqkfWaU2luKrD8ABmH/AYyaonYf0hjHGc9dmpXA
+Uwk6qXGljJKUqgDjXJyO44atd9b/GNM6UD10hTaxzB10u9973vl+7bffvti
s802Ky677LLi4YcfLt72trd1XrP00ksXn/rUp4oLL7ywuPfee4uHHnqouPHG
G4tjjjmm2HDDDSd95g477FB+5hFHHFEsueSSxX/8x38UV111VfHXv/61uOee
e4qf/OQnxate9arO69/znvf02ARFOb60/rkveMELiqOPPrq46aabymW46667
irPOOqt8puKiiy464bVrrbVW+RnXX399+d/vfOc7i/POO69c/gcffLC46KKL
ip122qnnOll11VWLb33rW8Utt9zS+a1f//rXixVXXFGddMxYfwAMwv4DGCX1
Gmk8h35WAucx3ekaW6pWStJSqAONcnI7jhq131tMHlPaV700hfYxTJ006oHh
05/+dFnDvOKKK4rTTjuteO1rX1vOX3nllYvf/va35Wtuv/32sq4a9zf9xS9+
UU6Lmurb3/72CZ/51re+tZz3/e9/v6yJRn1y9913Lz784Q8Xp5xySjkvaqbr
rbde+fqXvvSlZU30gQceKOdFfTX+e/PNN+985nbbbVf87W9/K+efffbZ5TLE
86juv//+ctrxxx9fLLLIIp3Xr7baauX02267rdzfRm016rW77LJL8c1vfrNc
7hA11vqyr7DCCsXVV19dzrv11lvLZfn2t79d1lsvv/zy4j//8z/Leeqk48H6
A2AQ9h/AqChqNdLuc58Uo1bKKEihDjTKye04ahR/b9F7TGld9NGzp3hv6+1j
mDpp1AxD1BG7x29GYvxmOOecc4pll112wrz3vve95bz77ruvrEtW07fZZpty
etQ1/+u//mvSWM+ow4Yvf/nLE6bfcccd5fTu6+7j3xaremiMe63PW2eddYpr
r722nBfjUqvpT37yk8tpf//734vrrruuWGmllSa8L8bHhhgjW5++3377ldNj
XO3yyy/fmb744osXxx13XKe+qk46Hqw/AAZh/wGMgse6qR2r/moUaqRVuu5Z
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
39LG8QMAJEH/AdjleNY9URaRPGlrE0wgD1RbWDuPMlxegqh7WKtvaeP4AQCS
oP8A7CJPSpSH/hbIk9pCHqi2sHYeZbi8BFH3sFbf0sbxAwAkQf8B2MX1HxEX
9Au20A5QX6phuLwEUfewVt/SxvEDACRB/wHYpGGkftBga2vm1wFEvkJ/E236
NqHhkQeqLaydRxkuL0HUPazVt7Rx/AAASdB/ADbNrPZ+IsqWlpbMrwOIfIX+
JtoMbELDIw9UW1g7jzJcXoKoe1irb2nj+AEAkqD/AGyaWe2HqO43Nzdnfh1A
5CvIk9pCHqi2sHYeZbi8BFH3sFbf0sbxAwAkQf8B2ESelKgU+ptoM6QJueW+
nzujdWYMq3E/5IFqCGvnUYbLSxB1D2v1LW0cPwBAEvQfgE3KrajuDx06NPPr
ACJfob+JNsOakGvh9462fOmQhPsgD1RDWDuPMlxegqh7WKtvaeP4AQCSoP8A
bNJQUj9gcMiQzK8DiHyF/ibaNDch19rGlEZVnS8teh5olllmcfPMM09m72/t
PMpweQmi7mGtvqWN4wcASIL+A7CJPClRKQYOHBi6hpYm5F6oy0nzpbXmgeae
e273+eef+33ob6fSdjfffLPf5sQTT2z32kMOOcQ99thjbtKkSe6bb75xkydP
dnfccYfbfPPNO+xj33339fu49NJLXd++fd3YsWPdV1995S6++GK/fs899/Tr
L7vsMte7d2/317/+1b300kvu66+/dp999pm777773M9//vNU64u18yjD5SWI
uoe1+pY2jh8AIAn6D8CmtjxKp3kNwmaQJy0W13FMaVX50jTyQCNHjvT7uOKK
K2LXzz///D5XKcsss4xfphzpI4884pd98skn7pZbbnGjRo1yjz/+eOnDDx48
uN1+fve73/nl1157rXv44Yfde++95+655x53xBFH+PW//e1v/foxY8b4nKj2
pXUHH3ywz72KPseKK66YWn2xdh5luLwEUfewVt/SxvEDACRB/wHYFPKkGpPV
lINrASI/ob+JkGNrQiG4+DGl3cqXppEHWm+99fw+vvzySzfvvPN2WB/mcnjw
wQdLy/bbbz+/7LXXXnMLLbRQu+0PPPBAv+799993s846a2n5zjvv7Je/+eab
rqWlxfXp06fd63bccUe/XuNSb7rppnavVSinKmeddVZq9cXaeZTh8mYe4Tes
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
+U1p2Y033uiX6f768u1POOEEv+7qq68uLTv99NM7vd7UvfKi+9nDskp50qef
ftovP+SQQ2L3dfbZZ/v1t956a2lZNE+64oordnhN//79/Todi7nmmssv++Uv
f+mXTZo0yc0999wdXrP44ov7++kVujc/LNc9/fL555+X9lVLkCe1gzxpbWHt
PMpweesS5EmJaFirb2nj+AEAkqD/AOyp9bqv2jzp888/77f/wx/+4P+97bbb
+n+///77FV8TrhXPOeec0rIdd9zRL3vmmWc6bP/SSy/5dVtttVVp2bhx4/yy
/fffP/Y9lIf89ttv/TbK3WpZXJ50/vnnd999951fXn6PfIitt97ar9ccAmFZ
yJMq5xn3Gj1nSe8jIV985pln+n/rPvuujv92221XWhbypJoPIOn3Wh70DzaQ
J6WeVMNweesSteRJd9ppJz9ftubB1u9vmoPl0Ucfdfvtt1+Hubh/9rOf+ffR
fRv69+DBg/3cMPqtTXPL6LfBvfbaK/Z9fvSjH/l5xN9++20/74z2cfLJJ/vn
Bp544ol+vyeddFJpe/2+KDfffHPs/g488MCK6/V7ouYXf/nll/083ZqvW3PP
6DmR8803XyqfL0Q1c5nXK6zVt7Rx/AAASdB/APbUO0+qZx5JGBuqZzeFnOLl
l18eG+E97rjjjtJ+dI3z6aefdshX6r53ee+999rdp65rHNFzlyq9TxjXuu66
6/rXxOVJV1tttdK1inKbcWVcZZVVStv06dPHLwt50ieeeKLisVEOVZQ71r/D
mFnN01rpM7/++ut+myOOOKK0n5An1fyrSb/X8qB/sKHeeaBGC2v1xHB56xJJ
86T6TVF0r4H6vKuuusrPUR3m57700kvbba9couj3yqFDh/rc4F//+lf3xz/+
0c/jov2I+rHo6/SbYpizRs8j1Ptce+21Pr+qOcDDnDrRZy4mzZPqt9HwOTRH
j+4X0W+BOncQzftdfv9Eks+nqHYu83qFtfqWNo4fACAJ+g/Anlqv+6rJky6y
yCKlsZghF3nUUUe57tKznqL7u+yyy/xyPa8oLAvXlWeddVa7bUMOtDv0vCm9
Ji5Puv766/tluoaqVE7NdxosvPDCflnIk+qZTZVep2tT0fWg/q2xQN0VHQ8T
8qRpzE0aIqjtrw15F/meCepJlwyXty6RJE+6/PLL+9fo/oi111673Tr9jhjy
f/o9LyxX3xz6uldffdUttNBC7V539NFH+/VPPvlku+XDhw/3y3WfSPQ1mhNG
zw9UPlKi8+MkyZNq/KbGg0r5fDe6xyPkQvXaWj9fkrnM6xXW6lvaOH4AgCTo
PwB7ar3uqyZP+vvf/95vq3EdYSxmuCbqbJxlpdhss838a5966qnSMt1TJ2us
sUa7bcOYE90T3939x+VJdS9eEJ4rVR7R8aR6dpWWhTzpv/71r4rvV/4Zw7Od
dK1XzXEhT4qkam0PrIe1emK4vHWJJHlS5QA1D0v4va08HnzwQb9P3X8floU8
qeyzzz4dXhP6vfLfB8Nve7vuumuH12y00UalfdaaJ9X9I3ouou79j5tzO8xJ
rrGitX6+JHOZ1yus1be0cfwAAEnQfwD21Hrd1908qe4/nzhxot9W9/GF5ZpD
VPTs+GrfW2NM3n33Xf/6pZde2q233nr+//Xcp0qfU/cRdnf/cXlSPWc+zGNa
/qz7EIMGDfLr9dnCspAn1XwAlY5PGGure/u1LFwjjx49uqrjQp4USdU7D9Ro
Ya2eGC5vXSKN5zhpHOWSSy7p+zOF9iVHHnlkaZtonlTjUcv3odxrEPKUiy66
aGmZ1se9d3huY6150vKYZ5553BJLLFEqk/Yvd911V2mbpJ8vyVzm9Qpr9S1t
HD8AQBL0H4A9tV73dSdPqnGXeh6CfPLJJ+6nP/1paZ3umdOzGETjQ+Nev/HG
G7sNN9yw3XyjIf72t7/512qe03BNGZ2rM4Se8yCaayzuPTTuU/fYRa+nKj3v
XmNf5dBDD43dl+Yyk2uuuaa0LPq8e43NKX/Nlltu6ddNmTLFzTHHHO2W6d7A
StdjGtuy0kortVtGnhRJ1doeWA9r9cRweesSSfOkuqdBv6+pv61Ec96E7aN5
UuUBy/cXXa8cpZbpng3RM44qfQ7lOiWNPKnmsNG8q2+99VbFMmmumrB90s+X
ZC7zeoW1+pY2jh8AIAn6D8CeWq/7OsuT6jkHyvU98sgjfhvlG/UM3vLtQl5P
z2HQ8ySi63QdovvR9dq4/KLmXxM940nPvdU4D40zKd9Oz/MNc46VjxNRHlfP
tZDo2M1KedLddtvNL9cY2PKxN8rp6hpKY0M32GCD0vKQJ9V9i2PHjm1376Du
KdTcq6JrsLBc42V1TETPnwj50xC6P1L0PGPto/x4kidFtWptD6yHtXpiuLx1
iSR50rXWWqvU16nv1e95u+yyi78XX6HfCqVSnjTal8StD3lS9W+i3/EqfZYr
rrjCb1NrnlTPsn/ppZf8cj27UM+a0u+aoUzht8lonjTp50syl3m9wlp9SxvH
DwCQBP0HYE+t130hT6oxHrpfLYSekRCu1URzklYaL6rrrpAn1DWNnvPe3Nzs
51FTvlHx5z//ueJnePHFF/2YEbn33nsrbhd9hu0zzzzj3+Pvf/976Tnz2k90
rGulPKkiPENKY2E1j6iem6vnCWtbid7TqAh5Uo1R0bXrO++8499/5MiRpXv/
9Dn+67/+q93r+vXrV5pbQMd41KhRPpQTDsdr0003bfca8qRIqtb2wHpYqyeG
y1uXSJInvfPOO/1r1C/FPZNd/avUmidVPlY6G68Z3quaPOmf/vSnDuvV/4ue
MaV7UMpfo/tJJJonTfr5ksxlXq+wVt/SxvEDACRB/wHYU+t1X8iTltO4zo8+
+sg98MADfqzpAgss0Ol+NFZS40j0nKPPPvvMj+nQOEnlMTfZZJNOX/uXv/yl
9L577LFHp9vqfkSNIdG+df2ke+z0HKhjjz22w2fsLE+q6089G0LPr9c+pk+f
7vOcuu4aOHBgh+1DnlR5XN3XqGcz6ZpPn0E55Kuvvtq/X9xn1jxreraEcqPK
y37xxRd+rtfzzjvPLbfcch22J0+KpOqdB2q0sFZPDJe3LpEkTxruta801jGM
y6w1T6rfFAPdEx/3XuHZ8NE8ZMhp3nbbbbGvOfPMM/36aJ70pptu8stOOumk
2NeMGDHCr4/mSZN+viRzmdcrrNW3tHH8AABJ0H8A9pAXqU9Ex5Nm/VmSBP2D
DbQH1JNqGC5vXSJJnjSMh9Tz3MvXaYxkcPTRR5eWJ8mTKvRbqPzqV7/q8Jr+
/fuXXhPNQ4a+8NFHH439/I8//niHPKnGxpbvJ4TmFNdvq6J7OqLrkny+JHOZ
1yus1be0cfwAAEnQfwD2kBepT5AnRRHQHlBPqmG4vHWJJHlSzVcjZ5xxRrvl
ygtqvpf777/fr9dcMWFd0jyp5o4RjcHs06dPafliiy3mJkyY4OfwLs9Drrnm
mn7Z1KlTO+Qaf/e735XmxonmSU844YRSbjX6PEe9XnlV9auiey6i+0vy+ZLM
ZV6vsFbf0sbxAwAkQf8B2ENepD5BnhRFQHtAPamG4fLWJUKeVHOtaP7sziI8
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
/vAHt+OOO7rtttvOh8ao1pon1fwAsuGGG2Z+nPIW1HMAldDf0b5Ww1p5gSzR
PhNZhrX2nvpGZBnW6lve8X3Eo53sPI455hh/fJ544onSskp5Tc15GvKgBx10
UOz+wljQWvKkH330kV+mOVSzPj55C+o5gEro72hfq2GtvECWaJ+JLMNae099
I7IMa/Ut7/g+4llsJ3W/+tFHH+0GDBjQ5ba6D1/0bKSwrFJec/XVV/fLNZa0
d+/eHfb14x//uNQu1JInDfOT7r///rGfuU+fPn5O1V69emV+rOsd1HMAlVjs
79IMa+2rtfICWaJ9JrIMa+099Y3IMqzVt7zj+4hnsZ284YYbfJk1RrTSM+1D
jBw50m97++23l5aFvOZnn33Wbtuw/JtvvnGzzjprh33p3v1ggw026HJ/is6e
d3/nnXd22F7Pjvrggw/8+oEDB2Z+rOsd1HMAlVjs79IMa+2rtfICWaJ9JrIM
a+099Y3IMqzVt7zj+4hnsZ1cc8013bRp03y5x44d69Zdd90O2/zkJz9xp556
qvvuu+/8dltssUVpnZ5fL1q38MILl5bPOeecpf1us8027fa37777+jGpEydO
9Ot32mmnLveniMuTLrfccqX3GTJkSGm5crMnn3yyX97a2sp4UgCIsNjfpRnW
2ldr5QWyRPtMZBnW2nvqG5FlWKtvecf3Ec9qO6lnKmn8ZvD++++7p59+2j32
2GPu9ddfdzNmzPDL9cx6PZsp+lqN2XzvvfdK+ci77rrLP69J68KYUT1r6eqr
r3YjRoxwzz77rPviiy/cxhtv7C655BK//o033nAXXHCBm2+++TrdX1yeVKG8
a8jhjh8/3t12220+Dytffvml22ijjTI/xlkE9RxAJVb7u7TCWvtqrbxAlmif
iSzDWntPfSOyDGv1Le/4PuJZbicXWWQRn39saWlxkyZN8mM0dc+87lt/+OGH
3QknnOCWXHLJ2NfqGUovvvii3145zr333tsv1338J510ks+1Tp8+3e939OjR
btVVV/Xrl1pqKff444/7PKrGli6wwAKd7q9SnlShXOhNN93kJk+e7N9Lr9P2
K6ywQubHNqugngOoxHJ/l0ZYa1+tlRfIEu0zkWVYa++pb0SWYa2+5R3fRzza
SaKRgnoOoBL6O9rXalgrL5Al2mciy7DW3lPfiCzDWn3LO76PeLSTRCMF9RxA
JfR3tK/VsFZeIEu0z0SWYa29p74RWYa1+pZ3fB/xaCeJRgrqOYBK6O9oX6th
rbxAlmifiSzDWntPfSOyDGv1Le/4PuLRThKNFNRzAJXQ39G+VsNaeYEs0T4T
WYa19p76RmQZ1upb3vF9xKOdJBopqOcAKqG/o32thrXyAlmifSayDGvtPfWN
yDKs1be84/uIRztJNFJQzwFUQn9H+1oNa+UFskT7TGQZ1tp76huRZVirb3nH
9xGPdpJopKCeA6iE/o72tRrWygtkifaZyDKstffUNyLLsFbf8o7vIx7tJNFI
QT0HUAn9He1rNayVF8gS7TORZVhr76lvRJZhrb7lHd9HPNpJopGCeg6gEvo7
2tdqWCsvkCXaZyLLsNbeU9+ILMNafcs7vo94tJNEIwX1HEAl9He0r9WwVl4g
S7TPRJZhrb2nvhFZhrX6lnd8H/FoJ4lGCuo5gEro72hfq2GtvEASM6tI35T2
07Dt88CBA33ZvvvuO7fIIotU3G733Xf3282YMcMtuOCCFbfbb7/9/HYffvih
m3XWWRN9piFDhvh93HfffZkfnzxEUdp76lt9Y9lll/XH6euvv878szRSFKW+
WdFo30ce28k555yz9He/zjrrdLn9K6+84rdVX61/6zVJ6Lyi/P11jvGTn/yk
y88w//zzu6lTp5Zep30kLU+1sfHGG7sRI0a4559/3n366adu+vTp7oMPPnAP
PvigO+qoo9zCCy/c6es33XRTd8UVV7gXX3zRTZkyxZf5888/dxMmTHAjR47s
8jPX+vquYtCgQe6hhx7y53Eff/yxL9c222xDuwsgE1wX0L5Ww1p5gSR0PTIz
WmfGwBr307Dtc69evdxnn33my7frrrtW3O7KK68stbM77LBDxe3GjBnjt7n6
6qsTfybypO2jKO099a2+0Vme9Nlnn3U333xz5p+xiFGU+mZFo30feWwna82T
rrzyyj5nVx4fffSR3065vLj1v/rVrzq8vxx55JFdfob//u//bveaeuRJ55tv
Pt+uRk2ePNm9/vrr7ptvviktU25x88037/B6/Xbc3Nxc2k651ccff9z94x//
cE8//bSbNm2aX/7tt9+6Qw89NPXXdycOPPBAv49XX33VDRs2zA0dOtSXT/ba
ay/aXQB1x3UB7Ws1rJUXSGpmNQknla0u4XVJo7fPN9xwgy+fzr8rbfPee++5
L7/80m+ncRRx28w222z++kDCOJEkQZ60fRSpvae+1S9mmWUWnw/o3bt3u+Vz
zz23H19EnjRZFKm+WdCI30fe2sla86SV4rTTTvPbddUWhfdX3k/nGRqn2dVn
0HhH5V9DLran86R9+vRxTz31lN+nPuOxxx7rfvzjH5fWK4e51VZbuX/9619+
G40x1b+j+wg5SJ0nbbfddv6cKbp+oYUWchdddJHfRvf4rLfeeqm+vjvxzjvv
+N/Oo/cXaXyvxu6+8MILtLsA6o7rAtrXalgrL5CU+37sRlTV1yWN3j7vu+++
vnw6P45bv9pqq/n11157rb/H7LXXXovdrn///n47jWXo7B7+roI8afsoUntP
fcs+dE9od3ITRHwUqb5Z0IjfR97aybzkSXWfdxiv2VmOb6mllvJ5wFtvvbX0
22xP50n/93//1+9PudnOPtscc8zhbrrpJr+txmRGP9ejjz7ql3c11lM5YJXv
rLPOare81td3FfPOO6/ff0tLS4d1L7/8sj//S+NYxkUj1nMA6eC6gPa1GtbK
C9TC/TB2I9F1SaO3z0sssUTpoKyyyiod1h9++OF+3QEHHODuvfde//+657d8
u+OOO86v031g5et0f91dd93lx4vo/rRJkya5G2+80ed0yrcNeVK9l8ZwnHrq
qf66TPcX6/WjR492K6ywQubHrV5RtPae+lZ96N5GGTt2bMVtNtpoI7+N5qGb
a665Yu+7f/vtt2MOffscwmKLLeaGDx/uxwZ99dVX7osvvnDjx493xx9/vL9O
zvpYZB1Fq2+NrlG/jzy1k3nJk2oc45577un//8ILL6y4vdoq2WeffUr3ufRk
nvRHP/qRb2dFYzq72n7xxRf3cxANHjzYn8OE5fqNWXbaaadOX7/ooov6+wLK
l9f6+q5i9tln979za9xsdPm6667r8673339/6u1tiEat5wBqZ/G6IM2w1r5a
Ky9QC9dx7EZV1yUW2uf//Oc/voxx4xRCblTjSjVfley///4dtnvggQf8OuV8
osvPOeccv1xzZ91yyy3+vv2wrc69lX+Nbh/ypHfffbcf16AxDBo3ovyo8qui
MSRxudpGjKK199S36iPkPHW/vPKYcducd955fpswP0ZcnvToo4/2c9XJxIkT
fZ5CoXmItb5fv37u3XffLa3XMz+uv/760rLnnnvOX2NnfTyyjKLVt0bXqN9H
ntrJvORJ9buNnhOpcwX18eVzioRQ26VtdJ95mBe0J/OkYS7UTz75pN37VBv6
HUx0PlN+z3w9Xt+deOaZZ3yfssACC/h/77zzzn5uAy3TPUM98Z6KRq3nAGpn
8bogzbDWvlorL1ArFz92o1vXJRba53A9c88997RbrrEQmpdK4zg1H+KAAQP8
drqvLLqdxi6E65XoPWka9xCuL8rHqv7iF7/w59563UorrVRaHvKket9x48a1
e3bsPPPMU7r3THnTrI9bPaKI7T31rfrQOGzZb7/9OqzT3HeaI1j0rGMtq/Qc
pzCHXXluQvvQ851Ev1VEr7M1jvS2227z60aNGpX5scgyiljfGlkjfx95aSfz
kicNbVmYM105uvJtN9hgA79O96Po3/ptSXoyT3rZZZf5famNrGU/v/nNb0qf
S+29np2pXG+9Xt+dCPc2qB/Qs6H8H2Frq/v5z3+e6vuURyPXcwC1SbO/sxjW
2ldr5QVq5X4YuzG92usSC+1zyH9qPEf0emPLLbf0yzXmTP/W3Fu6z01jPKN5
lq233tpvp3yq8jFhecj96N79uPcNY+TOPffc0rKQJxVdE5W/ZosttvDrlEfV
/cdZH7uejiK299S36uPggw/25Y6bl1e5UXnrrbdK9avaPOkvf/lLv1xjsuPu
ydS9onr2iKLSmFYLUcT61sga+fvISzsZzStqbLmeb95ZqI2QnsqTap4eueOO
OzpsG55T9Otf/9r/ux55Us0ZJGeffXbN+zrooIP8uUuge2r0+5XK9dvf/rY0
jrOnXt9Z6Pzu5JNPLu37zTff9PcY1TKGtrvRyPUcQG3S7O8shrX21Vp5gTS4
rsduRLW6tusSC+2z7svV3GCi3GhYfsYZZ/hlv//970vLNOZUNtxww9IyXT/I
VVddVVo233zz+bmuJDpeNBp6HqzoXq+wLORJda+XxrCWv0bn7Lo2kLXWWivz
Y9fTUdT2nvpWXWgOPF3zK8qfg6bxn6K8Q1hWbZ70zDPP9MvDbx5x8dhjj/lt
9CzlrI9HVlHU+taoGv37yEM7Gc0rVqOn8qQ6H3n//fd9Wxh9przyeDov0O+x
mktTy+qRJ33wwQf9vk466aRUjreeH3/ssce6f//736XPH+j+mmuuuabTeYVq
fX1crLrqqv65U+F7kLjft4855hh/L8+SSy5JuwugLtLs7yyGtfY10QkNgKCr
sRtRreF/mnLQ1vVkhHvdlE8Jy5S/lKWXXrq07IgjjvDLovOQTpgwwS/73e9+
V1qm+UwD3cN1+eWXd4jwbFuNUQ2vC3nSJ554ouJn1XWSbLPNNpkft56OBkB9
62aE3yA0H15YppxB+HvX/KJhebV5Ut2nKqqrcXVRobFiojqe9bHIKoCMZNZO
5u2+e8Xf/vY3vyzaFu2www5+me5DCcvqkScNbaeeeZ92e6PfkzXWX+M4w/03
ormK1l577R5/vWLFFVf088HqWB522GH+2Z7KR0+ZMsX913/9V7tt9fw/5WLn
n3/+Hml3mwCgTJr9ncWw1r5WcS4FoDat4X+actDW9WTsu+++vpx6ppP+ree5
aNymnrEa3W7NNdf02z388MP+3xrvIRo7Gp1LdP3116/qQIdnzYQ86T//+c+K
n1X3g8mOO+6Y+XHr6TCmNfxP1sc9i9hjjz182fUsprAsjLl+8skn221bbZ5U
z0XrrrTGTRUxgAJoDf+Txt98HvOk4XdW/a4TloXfVaOfsR550vPPP9/vS89R
6un2Z/XVV3fPP/+8f7/OfitO8/Wa30Ciz+fca6+9/LLonKzKp5YvSysif88A
0E6a/Z3FoH0F0BWXg/vb8hwaQyDKjerZAHqGguiZ2NHtdC+8xrdpTIHmB919
9939dnq+UnQ7PbcpiJsPsVKEPOkjjzxScZvJkyf7bTQvatbHraejqP0b9a36
0POUNEew5v8LvzlonKcccsgh7batNk86ZswYv3z48OGZlzPPUdT61qga/fvI
QzuZxzypIjxHSJ9J7aHOOZQDjG5TjzxpOBfSvKDdfW6Sfj+OmzeoO6E5jUTn
YtWcOyV5veYy0DHUvEvROecV4f6GI4880v879EU9cR9Po9dzAMml2d9ZDNpX
AJ1xPzwvodvXIZHXmmmfx48f78u67bbblsZQxD1zVnMcymabbeYuueQS///H
H398u210fh6uYaL3C3cVIU/69ttvx66Pzk+qMSdZH7OejiL2b9S35BHq1t57
7+2vYfXMNOVNNX9pdLtq86QhZ6G55bIuY56jiPWtkTXy95GXdjKvedI//elP
frnGt2uOdDnqqKPabVOPPKl+D/7iiy/8/k455ZQut9e5j54Rr/MpjcHUspVX
Xtk/g0ntelev1zP1gjAPaK2vrxR9+37/J6jvtHyd5sl+4403/DHWe+u/5fc1
pBWNXM8B1CbN/s5i0L4C6IzresxGh+uQyGvNtM/hukb/1fmw8pHlz5RRhGsW
zVEa5iaNux7517/+5dedeOKJse+3zDLL+JxsdMxD9Hn3cfnVzTff3K/T3FnK
I2V9zHo6iti/Ud+Sx6BBg3z5NSdeuOc+7rnPXeVJb7nllnbL9Xw2+fzzz92C
Cy4Y+96a/6/SM9esRBHrWyNr5O8jL+1kXvOkOvfQGNJx48b5e701t89Pf/rT
dtvUI0+q+Mtf/uL3p/f79a9/XXG73r17l+Yz1fxA4dxGeUZRvlX37nT2Xprn
XfQbWZiPqNbXV4rwe7ZCcy2Vr1933XVLz3WSjTfemHYXQF2l2d9ZDNpXAJW4
zsdsVLwOibzeTPs8YMAAX1blSDWG7amnnordbqmllvLb6bkBunbRs2nj7jHT
/KGi3Ez//v3brVtsscX881rlj3/8Y2l5yJPq+ujee+91ffr0Ka3T9c9DDz3k
1+sesKyPVz2iaP0b9a220HOc9QwN3QcZnnO/yy67dNiuUp50zz339MvDPMMh
Zp11Vr9Mrrrqqg6/Meyzzz5+ncYPRXMO1qJo9a3RNer3kad2Mq95UoVeq3MM
5Qd1PlC+Ps08abiP5n/+5386rNM96eG59zo3Ovvss9s931Lr9Tyl8CwlPZty
gw02KK1XPjI8J0//1XuV5zC1jeaJV35TovNE1/r6zuL222/322te7PJcqd5H
/ZFo3oFf/OIXtLsA6sr6dUGtQfsKoBIXP2ajy+uQyOvNtM8671Z+JuhsLkM9
3ym44oorKm53zjnn+G10PXPfffe5//u///Pn5ZqHMVxDRefF0n1lovFwyonq
/vvm5mY/T6ruZZNJkyZ1eA5ro0bR+jfqW+1x8cUX+2OgvIF+Y4j+VhCiUp5U
8wKHeSn0e4fqnMYEaZ3GZ7/77rt+3VtvveVGjRrl47nnnvPL9F6bbrpp5uXP
MopW3xpdo34feWon85wn3W677UqfbfDgwR3Wd5UnVU7xxRdfrBh//vOfS69T
XlHCMyrjPqfOX6I0V7veQ7/rBq+++mqH34UVugf/pZdeKm2n9lZtr+Zinzhx
os9DBprPSL+Zpfn6SqF773WeJbpP54EHHvDfWTjHU174zjvvLO1buWDNd10+
11ItEfl7BoB20uzvLAbtK4A4ruOYjVbXzeuQyD5Mtc833HBD6WDpXt1K2ylv
GcSNd4uGxiTo3mE9f0nXE++9955raWnxz1TVOLfotgcccIDfp3KvmhfszDPP
9Ofr06ZN89ckV199tT+vz/o41SuK1L9R39IJ3dsYXHbZZbHbVMqTKg477DBf
x1RndM2uZyCHdRovdPrpp/vra/1WoXFausY+77zz3HLLLZd52bOOItU3Cxrx
+8hbO5nnPKlyfTpvUP4u7plEXeVJu6Lzi/C6kCdVnrCzz6vnJCkP+cILL5Se
u6d7au6++24/nlP33ld6rcbx67jpmOh3X+U2VQaNAX3mmWfchRde6NZbb70e
e32l0HOy9H1pHiXtU9/Fyy+/7H+zC/MfaU4YjanVWFmVuztztXY3GrGeA0gH
1wW0rwDS534Ys1H1dUhkH7TPRGZRpP6N+kYUPYpU3yxoxO+DdjK/oXtousrr
EulHI9ZzAOmgv6N9BZAu9/2YjcTXIZH90D4TmUVR+jfqG9EIUZT6ZkWjfR+0
k/kOzZl+9NFHZ/45rEWj1XMA6aG/o30FkE+0z0SWYa1/o74RWYa1+pZ3fB/x
aCfTDz2HSfeb6xmTWX8Wa0E9B1AJ/R3tK4B8on0msgxr/Rv1jcgyrNW3vOP7
iEc7STRSUM8BVEJ/R/sKIJ9on4ksw1r/Rn0jsgxr9S3v+D7i0U4SjRTUcwCV
0N/RvgLIJ9pnIsuw1r9R34gsw1p9yzu+j3i0k0QjBfUcQCX0d7SvAPKJ9pnI
Mqz1b9Q3IsuwVt/yju8jHu0k0UhBPQdQCf0d7SuAfKJ9JrIMa/0b9Y3IMqzV
t7zj+4hHO0k0UlDPAVRCf0f7CiCfaJ+JLMNa/0Z9I7IMa/Ut7/g+4tFOEo0U
1HMAldDf0b4CyCfaZyLLsNa/Ud+ILMNafcs7vo94tJNEIwX1HEAl9He0rwDy
ifaZyDKs9W/UNyLLsFbf8o7vIx7tJNFIQT0HUAn9He0rgHyifSayDGv9G/WN
yDKs1be84/uIRztJNFJQzwFU4pCKrL9HAI0n0r4QRN3DWv9GfSOyDGv1Le/4
PuLRThKNFNRzAJX0SNLQoKy/RwCNJ9K+EETdw1r/Rn0jsgxr9S3v+D7iZdFO
rrHGGrHXXuuvv36HbXv16uX22GMPd+utt7o333zTTZ061U2fPt199NFH7vHH
H3cnn3yyW2KJJRJ/lnnnndeNHz/e7zfu/bOOIUOG+GNz3333Zf5ZuopDDz3U
f9ZLL700s89APQdQVLRfAKwib0NkGdb6X+obkWVYq295x/cRL4t2csUVV3Qv
vvhiKSrlSRdddFE3bty40vrW1lb30EMPubFjx7oXXnihtPyzzz5zAwYMSPRZ
brrpJr+PvffeO/M2Iy6KlCdVXHPNNf7zHnTQQZm8P/UcQFHRfgGwirwNkWVY
63+pb0SWYa2+5R3fR7w8tJOV8qRjxozxy59++mm39tprd3jdsssu6x555BG/
zaRJk9w888xT1fvus88+/rW33XZb5u1FpShannSBBRZw7733nvv66699Pjyr
v6UmACgY2i8AVuXheoSwG9b6X+obkWVYq295x/cRLw/tZFyedO6553YzZszw
y9daa62Kr1VebsqUKW7atGlu++237/Z7zj///O6DDz5w33zzjc+3drbtYost
5p555hl3/PHH1/3YFC1Pqth33339Z77zzjsz+1tqAoCCof0CYFUerkcIu2Gt
/6W+EVmGtfqWd3wf8fLQTsblSZdccsnSct1/39nrNT+p5jGt5j2PPvpov+9R
o0Z1ue1Pf/pTv21Pzbs5xxxzuGOPPda99NJLfhzm5MmT/VjalVdeudM8qfK3
w4cP93MQfPXVV+6LL77wc60qn6t5V8u3//vf/+73teeee7pVVlnF3XDDDf69
lGN+/fXX3d/+9jefPy5/3UorreQuv/xyP++BPp/y0hMnTnQXXHCBW3755Tts
P/vss7u3337bv1fcOOB6/C01AUDB0H4BsCoP1yOE3bDW/1LfiCzDWn3LO76P
eHloJ+PypL179/a5PzniiCNSf0/l/KQ785r2dJ405C9V3tGjR7uLLrrIPfbY
Yz7vefrpp8fmSfv16+feffddv045y5EjR7rrr7++tOy5557rkF++6qqr/LoL
L7zQz+mqPOnhhx/ujjvuOL8P0XywytuG16yzzjruyy+/9Os0/4Hyyornn3/e
L/v444/d6quv3qFMJ554ol8/YsQI2l0A6AbaLwBW5eF6hLAb1vpf6huRZVir
b3nH9xEvD+1kXJ5Uce6555bWXXfddW6LLbZwc845Z83vt8Yaa/h9fvTRR262
2WbrcvuezJNuueWWft/KRa622mrt1h144IFu+vTpHfKks846q3v22WdLecho
GTSOVPOtSvlYWY0JDQ455JB26+abb75S7ljvG5YrlyonnXRSh89+1FFH+XXK
85av0zhS0XjVLP6WmgCgYGi/AFiVh+sRwm5Y63+pb0SWYa2+5R3fR7w8tJOV
8qQa19jc3OyidN/3ww8/7E499VS3+eab+3u8q30/5QHl9ttv79b2PZknDblL
jQeNW68xnOV50l/+8pd+mZ5dpXlcy1+z+OKL+/yqQvfml7+X7omPm6fgyCOP
9Osfeuih0rInn3zSL9OxLt9e+9DypZdeusM65W51f76ssMIKdf9bagKAgqH9
AmBVHq5HCLthrf+lvhFZhrX6lnd8H/Hy0E5WypOG0PhPjS195ZVXXLlPPvnE
35tezbPudd+5aG7P8nUaV3n33Xe3i5aWFr/9W2+91WHdH//4x5rKPmHCBL/v
wYMHx66Pu+/+zDPP9Mt0n32l/eq+fdluu+1Ky0Ke9Nprr419zcCBA/165TfD
siuvvNIvU246bi7SzkL38MtvfvMb2l0A6ALtFwCr8nA9QtgNa/0v9Y3IMqzV
t7zj+4iXh3ayqzxpNPTMpl122cU/Q+jVV18tvVb5RuU4u/N+4b70gw46qMO6
RRZZpEMutjPnn39+TWVXnlc22WST2PXKw0o0T3rjjTeWyqzcZ1zouUwSnds1
5Enj8sOKFVdcsVSukHfW87TCvsJ7Kme99dZbdzkHQvicBx98MO0uAHSB9guA
VXm4HiHshrX+l/pGZBnW6lve8X3Ey0M7GXQnTxqNWWaZxW2//fal+7sr5f/K
I4wP3Wuvvbq1fU/ed69nzcuGG24Yu36fffbpkCfVONbuis4rGvKkxx9/fOx7
6f75QPnisHz++ed3xx57bGlO1EA5Xu2r0hyvV1xxhd/umGOOqfvfUhMAFAzt
FwCr8nA9QtgNa/0v9Y3IMqzVt7zj+4iXh3Yy6N+/f6LXKw8nTzzxRLe2D3nS
IUOGdGv7nsyT6rnzUmk86Z/+9Ce/PponHTNmjF/W3bxwiJAnPeWUU2LXr7LK
KqXvYq655ordRuN5NUeAnu/07bff+m01D0DctuGeffKkANA12i8AVuXheoSw
G9b6X+obkWVYq295x/cRrx7t5Kabburvkz/uuOM6rFt00UVLdaVfv36l5cob
Hn300W7AgAFd7l/34ctrr73Wrc+j5zdJ3H33cdGTedIXX3zR73uPPfaIXa/7
+svzpKeddppfNnr06Kreq6v5Sbfaaiu//uOPP+7W/sL2GhMb91wo7rsHgO6j
/QJgFXkbIsuw1v9S34gsw1p9yzu+j3j1aCf3228//x4ffPCBm3feedutGzRo
kF+n59j37t27tFzjFUVjRLt6pr2eFS/dfX79xRdf7Lfv7njMnsyTXnfddRX3
rfvZlfstz5NuueWWftnnn3/uFlxwwdj97rDDDm6llVZqtyzkSSdNmhR7TDXO
VP7xj3/4f2vfu+++u89Dx72H5j3Q9yb/v737edWhjwIAXhY2iqWykJI/gBIL
2cjCzoqyo6wsZGdtI1v2Nn5sbKTY2chCUaKklIQoYocrZN7OV8/t/vh6X+p9
znxn5vOpU95779w7M897vs85p3lm4jrTld+/f/9++V7cG2Ge/38tDXkODJX1
C5gqcxvRZ0zt/Ve+iT5javnWOq9HXcY6GfO22efLY/45m5XG/TCfPn1avn7p
0qVl22zfvn3x3p23b9/udu7cuer3btq0qTt79mz38+fP8nP79+//o/2J60jD
zZs3/+jn5zknjXlm+PLly7JjXLNmTblu9PPnz6vmpPG9x48fL563tWvXLvud
s3uavnz5ctmzlmZz0m/fvq367P2WLVu6Dx8+lO/P7kcQr1v8/U+fPnV79uxZ
te+HDh0qP//u3btV9yiN/445blg5r51nyHNgqKxfwFSZ24g+Y2rvv/JN9BlT
y7fWeT3qstbJI0eOLN7PMuaf8Qz12Xwz/r1x48ZV2xw8eHBxvjqbxz18+LC7
d+9e2ebHjx/l6wsLC+Wa1T/dlx07dpTtPn78WGaO8z72f4u4JjNmoLP5Zfz7
2rVr3fPnz8ucMZ5XP5sVL90u7lHw9u3b8r3Xr193ly9fLvHkyZPytdg27new
dJvZnDTugRDH/ujRo3JtbWw3O8937txZNvM8ceLE4usU14devXq1fG7/wYMH
5WvxGhw+fPi35zhmr3GMWedTngNDZf0CpsrcRvQZU3v/lW+iz5havrXO61GX
uU7u3bu3u3XrVrn/ZcwEY9Z5/vz5co/S320Tz10/ffp0efZSfF48ZqyxbXyG
/+7du92ZM2e6zZs3//W+xN8Of3L/03nHunXryvWdMRuN43v//n257jZmofv2
7Sv7Gce6crs4b+fOnSuz0bgeNa77fPbsWXfhwoVu27Ztq35+NieNZ9fHtbxX
rlwp5zTO54sXL8r1q7EvK7c7cOBAd+PGje7Nmzfd9+/fF+fcMV+tXecbEa9L
mMc1uP8W8hwYKusXMFXmNqLPmNr7r3wTfcbU8q11Xo+6qa6T8UypELO+vvcl
K2Zz0trztP7PiGc6vXr1qvytXbt2pR6jPAeGyvoFTNVU+xHRRkzt/Ve+iT5j
avnWOq9H3VTXybj3ZnwmPK6l3Lp1a+/7kxFZc9KjR4+WvzN7HlRmyHNgqKxf
wFR10IC+8yBL3+cZQt95wC9ej7ol52Vycfz48XLs8ZnyvvclIzLmpBs2bCj3
Tf369Wu5b0D2McpzYKisX8BUJbTk8J/6zoMsfZ9nCH3nAb94PeqWnJdJxvXr
18vxHzt2rPd9mXdkzEnjnqfh5MmTvRyjPAeGyvoFAABk0X/UTX1Oun79+vLc
94WFhW737t297888Y95z0lOnTpXff/Hixd6OUZ4DQ2X9AgAAsug/6qY+JxXj
CnkODJX1CwAAyKL/qDMnFWMKeQ4MlfULAADIov+oMycVYwp5DgyV9QsAAMii
/6gzJxVjCnkODJX1CwAAyKL/qDMnFWMKeQ4MlfULAADIov+oMycVYwp5DgyV
9QsAAMii/6gzJxVjCnkODJX1CwAAyKL/qDMnFWMKeQ4MlfULAADIov+oMycV
Ywp5DgyV9QsAAMii/6gzJxVjCnkODJX1CwAAyKL/qDMnFWMKeQ4MlfULAADI
ov+oMycVYwp5DgyV9QsAAMii/6gzJxVjCnkODJX1CwAAyKL/qDMnFWMKeQ4M
lfULAADIov+oMycVYwp5DgyV9QsAAMii/6gzJxVjCnkODJX1CwAAyKL/qDMn
FWMKeQ4MlfULAADIov+oMycVYwp5DgyV9QsAAMii/6gzJxVjCnkODJX1CwAA
yKL/qDMnFWMKeQ4MlfULAADIov+oMycVYwp5DgyV9QsAAMii/6gzJxVjCnkO
DJX1CwAAyKL/qOtghPrOK4C/Zf0CAACy6D/q+pliwXz1nVcAf8v6BQAAZNF/
AACtUqcAAABZ9B8AQKvUKQAAQBb9BwDQKnUKAACQRf8BALRKnQIAAGTRfwAA
rVKnAAAAWfQfAECr1CkAAEAW/QcA0Cp1CgAAkEX/AQC0Sp0CAABk0X8AAK1S
pwAAAFn0HwBAq9QpAABAFv0HANAqdQoAAJBF/wEAtEqdAgAAZNF/AACtUqcA
AABZ9B8AQKvUKQAAQBb9BwDQKnUKAACQRf8BALRKnQIAAGTRfwAArVKnAAAA
WfQfAECr1CkAAEAW/QcA0Cp1CgAAkEX/AQC0Sp0CAABk0X8AAK1SpwAAAFn0
HwBAq9QpAABAFv0HANAqdQoAAJBF/wEAtEqdAgAAZNF/AACtUqcAAABZ9B8A
QKvUKQAAQBb9BwDQKnUKAACQRf8BALRKnQIAAGTRfwAArVKnAAAAWfQfAECr
1CkAAEAW/QcA0Cp1CgAAkEX/AQC0Sp0CAABk0X8AAK1SpwAAAFn0HwBAq9Qp
AABAFv0HANAqdQoAAJBF/wEAtEqdAgAAZNF/AACtUqcAAABZ9B8AQKvUKQAA
QBb9BwDQKnUKAACQRf8BALRKnQIAAGTRfwAArVKnAAAAWfQfAECr1CkAAEAW
/QcA0Cp1CgAAkEX/AQC0Sp0CAABk0X8AAK1SpwAAAFn0HwBAq9QpAABAFv0H
ANAqdQoAAJBF/wEAtEqdAgAAZNF/AACtUqcAAABZ9B8AQKvUKQAAQBb9BwDQ
KnUKAACQRf8BALRKnQIAAGTRfwAAreoAAACS9d0HAQCs1Hd9BAAATE/ffRCQ
5x/dqONU
    "], {{0, 782.}, {1354., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{709.0389610389608, Automatic},
  ImageSizeRaw->{1354., 782.},
  PlotRange->{{0, 1354.}, {0, 782.}}]], "Text",
 CellChangeTimes->{
  3.9208939629004135`*^9, 3.937972718969249*^9, {3.9379769997052507`*^9, 
   3.937977000702582*^9}},
 TextAlignment->Center,ExpressionUUID->"0c91e847-a81d-4f6a-a26e-80a98137a3ac"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"429f2f64-66fa-42d8-938d-f3e34c370d2b"],

Cell["12 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938148054688715*^9, 3.9381480557602577`*^9}, 3.9381536352985*^9, 
   3.938153969605905*^9},ExpressionUUID->"d8760497-af4c-40db-bbc1-\
bd63aaffe193"],

Cell[CellGroupData[{

Cell["LocalDeploy", "Section",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379916195348797`*^9, 
   3.937991621484365*^9}},ExpressionUUID->"818effdb-ab6d-409d-8482-\
8738518dadd0"],

Cell["\<\
LocalDeploy is a paclet written during the development of WRB.\
\>", "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379916368381357`*^9, 3.937991737706851*^9}, {3.93816614742307*^9, 
   3.9381661477620373`*^9}},ExpressionUUID->"e39c0fbf-5b17-437c-a944-\
af18a1b5356f"],

Cell["\<\
It deploys WL expressions locally, emulating the behaviour of the Wolfram \
Cloud on localhost.\
\>", "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379916368381357`*^9, 3.937991771988564*^9}, {3.937991987403121*^9, 
   3.937991987403701*^9}},ExpressionUUID->"3ef128ab-d849-4d97-8e91-\
e76b6e8449a9"],

Cell["\<\
The expressions are deployed as TCP sockets accepting HTTP requests.\
\>", "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379916368381357`*^9, 3.937991771988564*^9}, {3.9379919880835114`*^9, 
   3.937992066326434*^9}, {3.937992249867778*^9, 3.937992272134028*^9}, {
   3.9381660171824493`*^9, 
   3.9381660284711447`*^9}},ExpressionUUID->"c342fc2c-ba3d-46e7-b671-\
78d810b76617"],

Cell[CellGroupData[{

Cell["What is a socket?", "Subsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379920846265907`*^9, 
   3.937992090625461*^9}},ExpressionUUID->"674c05a8-8d14-4ffd-bf8d-\
18c2653694ad"],

Cell["\<\
A socket is a pipe - or memory buffer - which allows two processes to \
exchange data over a network\
\>", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.937992109715049*^9, 3.9379921597577963`*^9}, {3.937992418674514*^9, 
  3.9379924209801826`*^9}},ExpressionUUID->"8c7a2558-740c-4fcb-ac8b-\
855ee53cf93f"],

Cell["Pipes are treated as Streams in the Wolfram Language.", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
   3.937992109715049*^9, 3.937992195812833*^9}, 3.937992409149262*^9, {
   3.937993532969165*^9, 3.937993570582275*^9}, {3.937993634750697*^9, 
   3.937993636043694*^9}},ExpressionUUID->"9ddcb43d-3183-4342-90a1-\
925baf37483f"],

Cell["\<\
LocalDeploy sockets use the TCP protocol which is a full duplex protocol \
meaning that data can be bi-directionally exchange, providing 1 byte streams \
for each direction. \
\>", "Item",
 CellChangeTimes->{{3.918897773570772*^9, 3.918897773657557*^9}, {
  3.937992109715049*^9, 3.937992199103006*^9}, {3.937992303449562*^9, 
  3.9379924048207703`*^9}, {3.9379926231216927`*^9, 
  3.93799264694461*^9}},ExpressionUUID->"ec6488a1-5a5b-4502-be0a-\
6188d4a24a27"]
}, Closed]],

Cell[CellGroupData[{

Cell["Socket Computing", "Subsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937992953255172*^9, 
   3.937992983367206*^9}},ExpressionUUID->"9f58ec89-c43a-44b3-8ef6-\
db405e10f1b2"],

Cell[TextData[{
 StyleBox["SocketOpen", "Code"],
 " is used to create a new server socket and ",
 StyleBox["SocketListen", "Code"],
 " can be used to set up a simple listener on that server:"
}], "Text",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
   3.920894388867655*^9, 3.9208944515770645`*^9}, {3.9379931431379843`*^9, 
   3.937993187269311*^9}, 3.937993261747952*^9, 3.93799341286436*^9, {
   3.937994437842078*^9, 3.9379944449612627`*^9}, {3.937994701150622*^9, 
   3.937994702196167*^9}, {3.9379956949642763`*^9, 
   3.937995718406556*^9}},ExpressionUUID->"3287d3b2-e5bd-47a1-b8d6-\
6969080672ac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"port", " ", "=", " ", "12345"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"callback", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", "data", "}"}], "|->", 
     RowBox[{"(", "\n", "\t", 
      RowBox[{"Echo", "[", "data", "]"}], "\n", ")"}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"server", " ", "=", " ", 
  RowBox[{"SocketOpen", "[", 
   RowBox[{"port", ",", " ", "\"\<TCP\>\""}], "]"}]}], "\n", 
 RowBox[{"listener", " ", "=", " ", 
  RowBox[{"SocketListen", "[", 
   RowBox[{"server", ",", "callback"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
   3.920894388867655*^9, 3.9208944515770645`*^9}, {3.9379934151826687`*^9, 
   3.9379934464764643`*^9}, {3.9379947452176743`*^9, 
   3.9379947875976677`*^9}, {3.9379948372328672`*^9, 3.937994846583148*^9}, {
   3.93799566342176*^9, 3.9379956890089703`*^9}, 3.937995744106925*^9, {
   3.937996135497518*^9, 3.937996136270002*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"6e9e5790-de8d-4c9c-b988-dbf87ca1a7e4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SocketObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                23.456953125000002`, {0., 23.456953125000002`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GeometricTransformationBox[{
               FilledCurveBox[{{
                  
                  Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                   43.684000000000005`}, {36.558, 43.684000000000005`}, {
                   36.558, 8.569}}]}}], 
               FilledCurveBox[{{
                  
                  Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                   43.684000000000005`}, {59.053, 43.684000000000005`}, {
                   59.053, 8.569}}]}}], {
                FilledCurveBox[{{
                   
                   Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                FilledCurveBox[{{
                   
                   Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                FilledCurveBox[{{
                   
                   Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                FilledCurveBox[{{
                   
                   Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                FilledCurveBox[{{
                   
                   Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
               FilledCurveBox[{{
                  
                  Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                   59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                   4.911}}]}}], 
               FilledCurveBox[{{
                  
                  Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                   56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                   31.675}}]}}], 
               FilledCurveBox[{{
                  
                  Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                   56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                   43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
             BaseStyle -> {CacheGraphics -> False}, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12345", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                   "RowDefault"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5\"", 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox[
                 "\"Number of connected clients: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientCount[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                   ImageSizeCache -> {12.8671875, {0., 16.06640625}}, 
                   TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GeometricTransformationBox[{
               FilledCurveBox[{{
                  
                  Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                   43.684000000000005`}, {36.558, 43.684000000000005`}, {
                   36.558, 8.569}}]}}], 
               FilledCurveBox[{{
                  
                  Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                   43.684000000000005`}, {59.053, 43.684000000000005`}, {
                   59.053, 8.569}}]}}], {
                FilledCurveBox[{{
                   
                   Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                FilledCurveBox[{{
                   
                   Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                FilledCurveBox[{{
                   
                   Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                FilledCurveBox[{{
                   
                   Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                FilledCurveBox[{{
                   
                   Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
               FilledCurveBox[{{
                  
                  Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                   59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                   4.911}}]}}], 
               FilledCurveBox[{{
                  
                  Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                   56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                   31.675}}]}}], 
               FilledCurveBox[{{
                  
                  Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                   56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                   43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
             BaseStyle -> {CacheGraphics -> False}, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12345", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                   "RowDefault"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5\"", 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox[
                 "\"Number of connected clients: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientCount[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox[
                 "\"List of connected clients: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientList[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                   TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                  "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SocketObject["TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9208939629004135`*^9, 3.937994822501011*^9, 3.937995636479533*^9, {
   3.937995737774272*^9, 3.937995746253317*^9}, 3.937999039281955*^9, {
   3.938225164456498*^9, 3.938225205694406*^9}, {3.9382343497423*^9, 
   3.938234362564872*^9}, 3.9382459751340017`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d056984c-905c-48c4-beea-2379c2b14c23"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SocketListener",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                23.456953125000002`, {0., 23.456953125000002`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Thickness[0.041666666666666664`], {
                FaceForm[{
                  RGBColor[0.902, 0.902, 0.902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                 14.281400000000001`}, {20.351, 13.3764}, {20.5, 12.4404}, {
                 20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                 9.624400000000001}, {20.057, 8.7184}, {21.959, 
                 8.101400000000002}, {22.317999999999998`, 
                 9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {22.5, 
                 12.650400000000001`}, {22.317999999999998`, 13.7944}, {
                 21.959, 14.8984}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.9490000000000001, 0.9490000000000001, 0.9490000000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {15.231, 
                 19.903}, {16.783, 18.773}, {17.961, 20.391}, {16.064, 
                 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                FaceForm[{
                  RGBColor[0.929, 0.929, 0.929], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 20.3906}, {
                 16.782899999999998`, 18.7736}, {18.337899999999998`, 
                 17.6416}, {19.4699, 16.0876}, {20.0569, 14.2816}, {21.9589, 
                 14.898599999999998`}, {21.2409, 17.1096}, {
                 19.857899999999997`, 19.008599999999998`}, {17.9609, 
                 20.3906}}}]}, {
                FaceForm[{
                  RGBColor[0.722, 0.722, 0.722], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                 6.9358, 1.2296000000000005`}, {9.1698, 
                 0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                 11.4998, 2.4996000000000005`}, {9.5958, 
                 2.4996000000000005`}, {7.768800000000001, 
                 3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.7799999999999999, 0.7799999999999999, 0.7799999999999999], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}}}, {{{16.783199999999997`, 4.2266}, {15.231199999999998`, 
                 3.0966000000000005`}, {13.404199999999998`, 
                 2.4996000000000005`}, {11.500199999999996`, 
                 2.4996000000000005`}, {11.500199999999996`, 
                 0.49960000000000004`}, {13.830199999999998`, 
                 0.49960000000000004`}, {16.064199999999996`, 
                 1.2296000000000005`}, {17.961199999999998`, 
                 2.6096000000000004`}, {16.783199999999997`, 4.2266}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.8510000000000001, 0.8510000000000001, 0.8510000000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                 6.911699999999998}, {18.3376, 5.358699999999999}, {16.7836, 
                 4.226699999999998}, {17.9606, 2.6096999999999984`}, {19.8586,
                  3.9906999999999986`}, {21.2416, 5.890699999999999}, {
                 21.9586, 8.101699999999997}, {20.0566, 
                 8.718699999999998}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6749999999999999, 0.6749999999999999, 0.6749999999999999], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                 8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                 3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {6.2164,
                  4.226699999999998}, {4.6624, 5.358699999999999}, {3.5304, 
                 6.911699999999998}, {2.9434, 8.718699999999998}}}]}, {
                FaceForm[{
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                 21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998, 
                 20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                 19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                FaceForm[{
                  RGBColor[0.584, 0.584, 0.584], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}}}, {{{5.0391, 20.3906}, {3.1421, 19.008599999999998`}, {
                 1.7591, 17.1096}, {1.0411000000000006`, 
                 14.898599999999998`}, {2.9431000000000007`, 14.2816}, {
                 3.5301000000000005`, 16.0876}, {4.662100000000001, 
                 17.6416}, {6.2171, 18.7736}, {5.0391, 20.3906}}}]}, {
                FaceForm[{
                  RGBColor[0.631, 0.631, 0.631], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                 0.6819999999999999, 13.7944}, {0.4999999999999999, 
                 12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                 0.4999999999999999, 10.3494}, {0.6819999999999999, 
                 9.206400000000002}, {1.041, 8.101400000000002}, {
                 2.9429999999999996`, 8.7184}, {2.649, 9.624400000000001}, {
                 2.5, 10.5594}, {2.5, 11.5004}, {2.5, 12.4404}, {2.649, 
                 13.3764}, {2.9429999999999996`, 14.281400000000001`}, {1.041,
                  14.8984}}}]}}, 
              InsetBox[
               GraphicsBox[
                GeometricTransformationBox[{
                  FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                   FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                  FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                PlotRange -> {{20, 80}, {0, 70}}], 
               Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
               15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0., 
               1.}}]}, AspectRatio -> Automatic, 
             ImagePadding -> {{0., 0.}, {0., 0.}}, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, PlotRange -> {{0., 24.}, {0., 24.}}, 
             PlotRangePadding -> Automatic], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3713551508120135081], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                   ImageSizeCache -> {12.8671875, {0.22265625, 16.3125}}, 
                   TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                23.456953125000002`, {0., 23.456953125000002`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Thickness[0.041666666666666664`], {
                FaceForm[{
                  RGBColor[0.902, 0.902, 0.902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                 14.281400000000001`}, {20.351, 13.3764}, {20.5, 12.4404}, {
                 20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                 9.624400000000001}, {20.057, 8.7184}, {21.959, 
                 8.101400000000002}, {22.317999999999998`, 
                 9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {22.5, 
                 12.650400000000001`}, {22.317999999999998`, 13.7944}, {
                 21.959, 14.8984}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.9490000000000001, 0.9490000000000001, 0.9490000000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {15.231, 
                 19.903}, {16.783, 18.773}, {17.961, 20.391}, {16.064, 
                 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                FaceForm[{
                  RGBColor[0.929, 0.929, 0.929], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 20.3906}, {
                 16.782899999999998`, 18.7736}, {18.337899999999998`, 
                 17.6416}, {19.4699, 16.0876}, {20.0569, 14.2816}, {21.9589, 
                 14.898599999999998`}, {21.2409, 17.1096}, {
                 19.857899999999997`, 19.008599999999998`}, {17.9609, 
                 20.3906}}}]}, {
                FaceForm[{
                  RGBColor[0.722, 0.722, 0.722], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                 6.9358, 1.2296000000000005`}, {9.1698, 
                 0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                 11.4998, 2.4996000000000005`}, {9.5958, 
                 2.4996000000000005`}, {7.768800000000001, 
                 3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.7799999999999999, 0.7799999999999999, 0.7799999999999999], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}}}, {{{16.783199999999997`, 4.2266}, {15.231199999999998`, 
                 3.0966000000000005`}, {13.404199999999998`, 
                 2.4996000000000005`}, {11.500199999999996`, 
                 2.4996000000000005`}, {11.500199999999996`, 
                 0.49960000000000004`}, {13.830199999999998`, 
                 0.49960000000000004`}, {16.064199999999996`, 
                 1.2296000000000005`}, {17.961199999999998`, 
                 2.6096000000000004`}, {16.783199999999997`, 4.2266}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.8510000000000001, 0.8510000000000001, 0.8510000000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                 6.911699999999998}, {18.3376, 5.358699999999999}, {16.7836, 
                 4.226699999999998}, {17.9606, 2.6096999999999984`}, {19.8586,
                  3.9906999999999986`}, {21.2416, 5.890699999999999}, {
                 21.9586, 8.101699999999997}, {20.0566, 
                 8.718699999999998}}}]}, {
                FaceForm[{
                  RGBColor[
                  0.6749999999999999, 0.6749999999999999, 0.6749999999999999], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                 8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                 3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {6.2164,
                  4.226699999999998}, {4.6624, 5.358699999999999}, {3.5304, 
                 6.911699999999998}, {2.9434, 8.718699999999998}}}]}, {
                FaceForm[{
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                 21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998, 
                 20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                 19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                FaceForm[{
                  RGBColor[0.584, 0.584, 0.584], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}}}, {{{5.0391, 20.3906}, {3.1421, 19.008599999999998`}, {
                 1.7591, 17.1096}, {1.0411000000000006`, 
                 14.898599999999998`}, {2.9431000000000007`, 14.2816}, {
                 3.5301000000000005`, 16.0876}, {4.662100000000001, 
                 17.6416}, {6.2171, 18.7736}, {5.0391, 20.3906}}}]}, {
                FaceForm[{
                  RGBColor[0.631, 0.631, 0.631], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                 0.6819999999999999, 13.7944}, {0.4999999999999999, 
                 12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                 0.4999999999999999, 10.3494}, {0.6819999999999999, 
                 9.206400000000002}, {1.041, 8.101400000000002}, {
                 2.9429999999999996`, 8.7184}, {2.649, 9.624400000000001}, {
                 2.5, 10.5594}, {2.5, 11.5004}, {2.5, 12.4404}, {2.649, 
                 13.3764}, {2.9429999999999996`, 14.281400000000001`}, {1.041,
                  14.8984}}}]}}, 
              InsetBox[
               GraphicsBox[
                GeometricTransformationBox[{
                  FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                   FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                  FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                PlotRange -> {{20, 80}, {0, 70}}], 
               Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
               15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0., 
               1.}}]}, AspectRatio -> Automatic, 
             ImagePadding -> {{0., 0.}, {0., 0.}}, ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, PlotRange -> {{0., 24.}, {0., 24.}}, 
             PlotRangePadding -> Automatic], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3713551508120135081], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                   ImageSizeCache -> {12.8671875, {0.22265625, 16.3125}}, 
                   TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"HandlerFunctions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", "data", "}"}], ",", 
                    RowBox[{"Echo", "[", "data", "]"}]}], "]"}], Short], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"HandlerFunctionsKeys: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ", ", "\", \"", "\"Timestamp\"", "\"Socket\"", 
                    "\"SourceSocket\"", "\"Data\""}, "RowWithSeparators"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"CharacterEncoding: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"UTF-8\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"RecordSeparators: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12345", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["12345", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
                    "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketObject[
                   "TCPSERVER-d6dea6b0-4150-4ea0-95e5-1c4b2344a0a5"], 
                   Editable -> False, SelectWithContents -> True, Selectable -> 
                   False], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SocketListener[3713551508120135081],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9208939629004135`*^9, 3.937994822501011*^9, 3.937995636479533*^9, {
   3.937995737774272*^9, 3.937995746253317*^9}, 3.937999039281955*^9, {
   3.938225164456498*^9, 3.938225205694406*^9}, {3.9382343497423*^9, 
   3.938234362564872*^9}, 3.9382459753063707`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"71590693-0140-4450-b371-ec149c975847"]
}, Open  ]],

Cell["This will echo any data written to the socket stream.", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937993490280604*^9, 3.937993527176442*^9}, {3.9379936273752527`*^9, 
   3.937993630315878*^9}, {3.937994530147669*^9, 3.937994531789194*^9}, 
   3.938000374176392*^9},ExpressionUUID->"0d6e56ab-2af3-43dd-b5cd-\
09a1d342967f"],

Cell["", "Delimiter",
 CellChangeTimes->{3.920930609342507*^9, 
  3.938014028599128*^9},ExpressionUUID->"0e96c856-b040-4e58-acc5-\
6907c337f05d"],

Cell["\<\
A client can connect to this socket, creating their own client socket:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379945358680563`*^9, 3.9379945365654097`*^9}, {3.937994661446661*^9, 
   3.937994696620234*^9}, {3.937994807796452*^9, 
   3.93799480946702*^9}},ExpressionUUID->"2052ffcf-fa0a-4a55-836c-\
8b9a430e2ed2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"client", " ", "=", " ", 
  RowBox[{"SocketConnect", "[", "server", "]"}]}]], "Input",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.937994815841406*^9, 
  3.9379948267102613`*^9}, {3.93799564679364*^9, 3.9379956568685226`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"a78dfe2a-fb95-4efd-b1a9-f99d4b0a3bdf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SocketObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GeometricTransformationBox[{{{
                 FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                  FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                 FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
             ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
              BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Foreign IPAddress: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Foreign Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12345", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Client)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                   "RowDefault"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"0b926666-5029-4789-93ea-addc5b19c4d1\"", "SummaryItem"]}],
                "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GeometricTransformationBox[{{{
                 FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                  FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                  FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                 FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                 FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
             ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
              BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Foreign IPAddress: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Foreign Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12345", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Client)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                   "RowDefault"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"0b926666-5029-4789-93ea-addc5b19c4d1\"", "SummaryItem"]}],
                "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SocketObject["0b926666-5029-4789-93ea-addc5b19c4d1"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9208939629004135`*^9, 3.937995798701379*^9, 
  3.937999041261005*^9, 3.938225230810566*^9, 3.938234364452676*^9, 
  3.9382459996782627`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"58f523f2-7e4f-4ccb-8385-1b84c095005b"]
}, Open  ]],

Cell[TextData[{
 "Data can be written to the sockets by using ",
 StyleBox["WriteLine", "Code"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
   3.920894388867655*^9, 3.9208944515770645`*^9}, {3.9379958095396833`*^9, 
   3.937995833712204*^9}, 
   3.938000370427812*^9},ExpressionUUID->"2787b2a2-6b36-4fe4-a520-\
963dc2d51cc5"],

Cell[BoxData[
 RowBox[{"WriteLine", "[", 
  RowBox[{"client", ",", " ", "\"\<Hello World\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.937995839020267*^9, 
  3.937995854162187*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"b0736b07-42e4-42cc-885c-8887396ee8a1"],

Cell["\<\
This will invoke our callback function, echoing out all of the incoming data \
to the Messages window:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379958858897552`*^9, 3.937995905734426*^9}, {3.937995973029379*^9, 
   3.937995974682885*^9}, {3.93799602691077*^9, 3.937996033783133*^9}, 
   3.93800037237563*^9},ExpressionUUID->"67f85198-26b5-4003-abfa-\
355d696eac03"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", "\n", "\t", 
  RowBox[{
   RowBox[{"\<\"TimeStamp\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Tue 15 Oct 2024 16:44:31\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
           StyleBox["1", NumberMarks -> False, StripOnInput -> False]}], 
         "TimeZoneLabel"]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2024", ",", "10", ",", "15", ",", "16", ",", "44", ",", 
              "31"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
          "1.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", "\n", "\t", 
   RowBox[{"\<\"SourceSocket\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["SocketObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                 BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"TCPServerClientConnection\"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"da7775d2-e071-4ecd-92ab-7bffc126049b\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                 BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"TCPServerClientConnection\"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"da7775d2-e071-4ecd-92ab-7bffc126049b\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     SocketObject["da7775d2-e071-4ecd-92ab-7bffc126049b"],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", "\n", "\t", 
   RowBox[{"\<\"Socket\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["SocketObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {21.095859375, {0., 21.095859375}}], 
                 Appearance -> None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[
                GeometricTransformationBox[{
                  FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                   FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                  FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                BaseStyle -> {CacheGraphics -> False}, 
                ImageSize -> {Automatic, 
                  Dynamic[
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["46725", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-e37f9b98-9aac-4b5d-abe3-f7442d5da22e\"", 
                    "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"Number of connected clients: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientCount[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-e37f9b98-9aac-4b5d-abe3-f7442d5da22e", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                    ImageSizeCache -> {11.578125, {0.19921875, 14.671875}}, 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, AutoDelete -> 
                False, BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
             False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                 BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[
                GeometricTransformationBox[{
                  FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                   FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                   FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                  FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                  FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                BaseStyle -> {CacheGraphics -> False}, 
                ImageSize -> {Automatic, 
                  Dynamic[
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["46725", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-e37f9b98-9aac-4b5d-abe3-f7442d5da22e\"", 
                    "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"Number of connected clients: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientCount[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-e37f9b98-9aac-4b5d-abe3-f7442d5da22e", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox[
                    "\"List of connected clients: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientList[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-e37f9b98-9aac-4b5d-abe3-f7442d5da22e", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
             False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     SocketObject["TCPSERVER-e37f9b98-9aac-4b5d-abe3-f7442d5da22e"],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", "\n", "\t", 
   RowBox[{"\<\"Data\"\>", "\[RuleDelayed]", 
    RowBox[{"ByteArrayToString", "[", 
     RowBox[{
      InterpretationBox[
       RowBox[{
        TagBox["ByteArray",
         "SummaryHead"], "[", 
        DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
         "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GridBox[{{
                    TagBox["\"11 bytes\"", "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GridBox[{{
                    TagBox["\"11 bytes\"", "SummaryItem"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]},
          "SummaryPanel"],
         DynamicModuleValues:>{}], "]"}],
       ByteArray[{72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100}],
       Editable->False,
       SelectWithContents->True,
       Selectable->False], ",", "\<\"UTF-8\"\>"}], "]"}]}], ",", "\n", "\t", 
   RowBox[{"\<\"DataBytes\"\>", "\[RuleDelayed]", 
    RowBox[{"Normal", "[", 
     InterpretationBox[
      RowBox[{
       TagBox["ByteArray",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                GridBox[{{
                   TagBox["\"11 bytes\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                GridBox[{{
                   TagBox["\"11 bytes\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      ByteArray[{72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "]"}]}], ",", "\n", "\t", 
   RowBox[{"\<\"DataByteArray\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["ByteArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GridBox[{{
                  TagBox["\"11 bytes\"", "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GridBox[{{
                  TagBox["\"11 bytes\"", "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     ByteArray[{72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", "\n", "\t", 
   RowBox[{"\<\"MultipartComplete\"\>", "\[Rule]", "True"}]}], "\n", 
  "\[RightAssociation]"}]], "Echo",
 CellFrame->False,ExpressionUUID->"6fa87d68-6343-41b8-af31-f7d28452abec"],

Cell["\<\
Since we are using the TCP protocol for our server socket, that means we can \
interface using HTTP requests.\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937996047140377*^9, 3.9379960885687037`*^9}, 
   3.938000385530836*^9},ExpressionUUID->"906ff1b7-96c6-48ec-bb2c-\
93a078b37071"],

Cell["", "Delimiter",
 CellChangeTimes->{3.920930609342507*^9, 
  3.938014036363659*^9},ExpressionUUID->"f4eeb603-4cb5-4a3c-b2b9-\
75f7777c9c1f"],

Cell["Construct the URL for the TCP socket:", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937996092447488*^9, 3.937996105180674*^9}, {3.937996148522459*^9, 
   3.937996152169435*^9}, {3.937998104646222*^9, 
   3.937998111913076*^9}},ExpressionUUID->"92ac09fa-6daa-4075-a83e-\
b4591670b065"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"url", " ", "=", " ", 
  RowBox[{"\"\<http://localhost:\>\"", "<>", 
   RowBox[{"ToString", "[", "port", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.937996107510902*^9, 
  3.937996143655657*^9}, {3.937997408316218*^9, 3.9379974127667522`*^9}, {
  3.938234397459628*^9, 3.938234401538189*^9}, {3.938234461148795*^9, 
  3.93823446499893*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1d565f73-e511-4966-bd85-41e56b809298"],

Cell[BoxData["\<\"http://localhost:12345\"\>"], "Output",
 CellChangeTimes->{
  3.9208939629004135`*^9, 3.937996160198435*^9, {3.9379974054077168`*^9, 
   3.9379974158556423`*^9}, 3.937999043747661*^9, 3.938225289700996*^9, 
   3.938234346878849*^9, 3.938246052032583*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"9a5bec1e-d599-4b68-b58a-9daa7dcac858"]
}, Open  ]],

Cell["\<\
However the current listener function never closes the connection with the \
client:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938234499127265*^9, 
   3.938234511938712*^9}},ExpressionUUID->"9a8729be-73ca-4ba6-95c5-\
8951b43343e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", "url", "]"}]], "Input",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.938234339792357*^9, 
  3.93823434364756*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"f8ac81bb-87f9-43e7-9b41-0ea819a9e104"],

Cell[BoxData[
 TemplateBox[{
  "URLExecute", "invhttp", 
   "\"A library error occurred. The raw details are: \\\"libcurl error \
(\\!\\(\\*RowBox[{\\\"TerminatedEvaluation\\\", \\\"[\\\", \
\\\"\\\\\\\"IterationLimit\\\\\\\"\\\", \\\"]\\\"}]\\)): \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Callback aborted\\\\\\\"\\\"}]\\)\\\"\"", 2, 45, 
   2, 31825870967928710381, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, 
   3.938234486641048*^9},
 CellLabel->
  "During evaluation of \
In[45]:=",ExpressionUUID->"978aac3c-4cc8-4f5d-9aa1-d91a5566513f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                23.456953125000002`, {0., 23.456953125000002`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[WarningSign]\"", "Message", StripOnInput -> False, FontSize -> 
              35], ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Could not connect to \
\\!\\(\\*TagBox[\\\"\\\\\\\"http://localhost:12345\\\\\\\"\\\", \
Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ConnectionFailure\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[WarningSign]\"", "Message", StripOnInput -> False, FontSize -> 
              35], ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Could not connect to \
\\!\\(\\*TagBox[\\\"\\\\\\\"http://localhost:12345\\\\\\\"\\\", \
Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ConnectionFailure\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"URL\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"http://localhost:12345\"", HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"HTTPRequest\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["HTTPRequest", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox["\"GET\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                    Dynamic[{Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                    None], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox["\"http://localhost:12345\"", Short], 
                    "http://localhost:12345"}, "HyperlinkURL"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox["\"GET\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                    Dynamic[{Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                    None], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox["\"http://localhost:12345\"", Short], 
                    "http://localhost:12345"}, "HyperlinkURL"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    HTTPRequest["http://localhost:12345", <||>], Editable -> 
                    False, SelectWithContents -> True, Selectable -> False], 
                   HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Counter\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["1", HoldForm], "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "ConnectionFailure", <|
   "MessageTemplate" :> MessageName[URLExecute, "iurl"], 
    "MessageParameters" -> {"http://localhost:12345"}, "URL" -> 
    "http://localhost:12345", "HTTPRequest" -> 
    HTTPRequest["http://localhost:12345", <||>], "Counter" -> 1|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9208939629004135`*^9, 3.93823434513288*^9, 
  3.938234426172852*^9, 3.938234486701983*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"4a18ea42-3752-4626-af44-f2afd8aaedb5"]
}, Open  ]],

Cell["", "Delimiter",
 CellChangeTimes->{3.920930609342507*^9, 
  3.9380140422827263`*^9},ExpressionUUID->"04902400-f670-45e1-a2cf-\
6c10e597649a"],

Cell[TextData[{
 "HTTP connections will keep the connection active until the server socket \
closes the connection to the client. \nUse ",
 StyleBox["SetOptions", "Code"],
 " to change the ",
 StyleBox["HandlerFunction", "Code"],
 " used by the socket listener:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937997723196278*^9, 3.937997747137714*^9}, {3.937997815281979*^9, 
   3.9379978349299583`*^9}, {3.937997868406597*^9, 3.9379978960224257`*^9}, 
   3.9379979433873*^9, {3.937997977543262*^9, 3.937998008161227*^9}, 
   3.938000386610825*^9},ExpressionUUID->"1f502f80-ba7e-4c13-969d-\
3eedaf92b7f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"setListenerFunction", "[", "f_Function", "]"}], ":=", 
   RowBox[{"SetOptions", "[", 
    RowBox[{"listener", ",", "\n", "\t", 
     RowBox[{"HandlerFunctions", "->", 
      RowBox[{"<|", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"\"\<DataReceived\>\"", " ", "->", " ", "f"}], 
       "\[IndentingNewLine]", "\t", "|>"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9332560082257404`*^9, 3.933256025482954*^9}, {
   3.933256069467968*^9, 3.933256190716818*^9}, {3.9332562214727287`*^9, 
   3.9332562221599693`*^9}, {3.9332562775506153`*^9, 3.933256418662691*^9}, {
   3.933256474417719*^9, 3.9332565101932793`*^9}, {3.9332565530281334`*^9, 
   3.933256633981964*^9}, 3.933257084464184*^9, {3.937944223582075*^9, 
   3.9379442267344522`*^9}, {3.937978764543397*^9, 3.937978771098421*^9}, {
   3.937998868613207*^9, 3.9379988756865263`*^9}, {3.938000033584917*^9, 
   3.9380001133920803`*^9}, {3.938225326328128*^9, 3.9382253573366833`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"bb428509-960f-4853-b37e-75ecf0eeb7e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setListenerFunction", "[", "\n", "\t ", 
   RowBox[{"Function", "[", 
    RowBox[{"data", ",", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"client", "=", 
         RowBox[{"data", "[", "\"\<SourceSocket\>\"", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Echo", "[", "data", "]"}], ";", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{"Close", "[", "client", "]"}]}]}], "\[IndentingNewLine]", 
      "\t\t", "]"}]}], "\n", "\t", "]"}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9332560082257404`*^9, 3.933256025482954*^9}, {
   3.933256069467968*^9, 3.933256190716818*^9}, {3.9332562214727287`*^9, 
   3.9332562221599693`*^9}, {3.9332562775506153`*^9, 3.933256418662691*^9}, {
   3.933256474417719*^9, 3.9332565101932793`*^9}, {3.9332565530281334`*^9, 
   3.933256633981964*^9}, 3.933257084464184*^9, {3.937944223582075*^9, 
   3.9379442267344522`*^9}, {3.937978764543397*^9, 3.937978771098421*^9}, {
   3.937998868613207*^9, 3.9379988756865263`*^9}, {3.938000033584917*^9, 
   3.9380001133920803`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"4d26b975-d4f9-42c1-b4f6-16a821633f1e"],

Cell[TextData[{
 StyleBox["URLExecute", "Code"],
 " can be used to make an HTTP request to the socket\[CloseCurlyQuote]s \
address, however the socket still doesn\[CloseCurlyQuote]t send a reply back \
to the client:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937998060405246*^9, 3.937998134755945*^9}, {3.937998174824772*^9, 
   3.937998192195117*^9}, 
   3.93800038824876*^9},ExpressionUUID->"ca8abad7-d00a-4d42-9c7b-\
5892eed34f26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", "url", "]"}]], "Input",
 CellChangeTimes->{{3.9332551183745193`*^9, 3.933255124591633*^9}, {
  3.9332553776680336`*^9, 3.933255383078476*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"80ed83a0-fd01-4812-a99f-79ad1d8aad23"],

Cell[BoxData[
 TemplateBox[{
  "URLExecute", "invhttp", 
   "\"A library error occurred. The raw details are: \\\"libcurl error \
(\\!\\(\\*RowBox[{\\\"52\\\"}]\\)): \\!\\(\\*RowBox[{\\\"\\\\\\\"Empty reply \
from server\\\\\\\"\\\"}]\\)\\\"\"", 2, 48, 3, 31825870967928710381, "Local"},
  
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, 
   3.938225360093418*^9, 3.938234566513459*^9},
 CellLabel->
  "During evaluation of \
In[48]:=",ExpressionUUID->"1e70c03e-c908-4900-b0a5-79ef0e0708c3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                23.456953125000002`, {0., 23.456953125000002`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[WarningSign]\"", "Message", StripOnInput -> False, FontSize -> 
              35], ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Could not connect to \
\\!\\(\\*TagBox[\\\"\\\\\\\"http://localhost:12345\\\\\\\"\\\", \
Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ConnectionFailure\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[WarningSign]\"", "Message", StripOnInput -> False, FontSize -> 
              35], ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Could not connect to \
\\!\\(\\*TagBox[\\\"\\\\\\\"http://localhost:12345\\\\\\\"\\\", \
Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ConnectionFailure\"", "SummaryItem"]}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"URL\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"http://localhost:12345\"", HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"HTTPRequest\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["HTTPRequest", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox["\"GET\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                    Dynamic[{Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                    None], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox["\"http://localhost:12345\"", Short], 
                    "http://localhost:12345"}, "HyperlinkURL"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    DiskBox[{0, 0}], 
                    InsetBox[
                    FormBox[
                    StyleBox["\"GET\"", 
                    Directive[10, 
                    GrayLevel[1], Bold], StripOnInput -> False], 
                    TraditionalForm], 
                    Scaled[{0.53, 0.48}]]}, ImageSize -> 
                    Dynamic[{Automatic, (3 CurrentValue["FontCapHeight"])/
                    AbsoluteCurrentValue[Magnification]}], Background -> 
                    None], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{
                    TagBox["\"http://localhost:12345\"", Short], 
                    "http://localhost:12345"}, "HyperlinkURL"], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    HTTPRequest["http://localhost:12345", <||>], Editable -> 
                    False, SelectWithContents -> True, Selectable -> False], 
                   HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Counter\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["1", HoldForm], "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "ConnectionFailure", <|
   "MessageTemplate" :> MessageName[URLExecute, "iurl"], 
    "MessageParameters" -> {"http://localhost:12345"}, "URL" -> 
    "http://localhost:12345", "HTTPRequest" -> 
    HTTPRequest["http://localhost:12345", <||>], "Counter" -> 1|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.933256371701533*^9, 3.933256394086122*^9}, 
   3.9332564779871426`*^9, 3.933256512573847*^9, {3.93325660556048*^9, 
   3.933256637117687*^9}, {3.93797883226777*^9, 3.9379788522172623`*^9}, 
   3.937998757125738*^9, 3.93799882845548*^9, 3.937998884209004*^9, {
   3.938225353393527*^9, 3.938225360173643*^9}, 3.9382345665624657`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"5aec31ee-34f5-48bf-8192-7720a3082403"]
}, Open  ]],

Cell["", "Delimiter",
 CellChangeTimes->{3.920930609342507*^9, 
  3.9380140458835287`*^9},ExpressionUUID->"668e7975-c232-4538-834d-\
eb3f7226dba7"],

Cell[TextData[{
 "Use ",
 StyleBox["GenerateHTTPResponse", "Code"],
 " and ",
 StyleBox["ExportString", "Code"],
 " to create an HTTP response string and write it to the client using ",
 StyleBox["WriteString", "Code"],
 ":"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.937998196034893*^9, 3.937998218990966*^9}, {3.937998921165781*^9, 
   3.937998930084338*^9}, {3.937999445372464*^9, 3.9379994734337606`*^9}, {
   3.937999642926236*^9, 3.937999649980755*^9}, {3.937999930136654*^9, 
   3.937999935924428*^9}, 3.938000389289878*^9, {3.9380031826985397`*^9, 
   3.938003183588496*^9}},ExpressionUUID->"c056456f-f2c1-417f-9452-\
610871a784e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setListenerFunction", "[", "\n", "\t", 
   RowBox[{"Function", "[", 
    RowBox[{"data", ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"client", "=", 
         RowBox[{"data", "[", "\"\<SourceSocket\>\"", "]"}]}], "}"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Echo", "[", "data", "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"WriteString", "[", 
         RowBox[{"client", ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"GenerateHTTPResponse", "[", "\"\<Hello World\>\"", "]"}], 
           "//", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"ExportString", "[", 
             RowBox[{"#", ",", " ", "\"\<HTTPResponse\>\""}], "]"}], 
            "&"}]}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"Close", "[", "client", "]"}]}]}], "\n", "\t\t", "]"}]}], 
    "\[IndentingNewLine]", "\t", "]"}], "\n", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.937999008033143*^9, 
  3.937999012834797*^9}, {3.937999056960834*^9, 3.937999101286108*^9}, {
  3.937999151283337*^9, 3.937999155909355*^9}, {3.9379991933627872`*^9, 
  3.937999219285389*^9}, {3.937999256893927*^9, 3.937999261478787*^9}, {
  3.937999300946391*^9, 3.93799931571924*^9}, {3.937999356183632*^9, 
  3.937999439363112*^9}, {3.9379994806370993`*^9, 3.937999562174624*^9}, {
  3.93799992243285*^9, 3.937999924278*^9}, {3.938000147514929*^9, 
  3.938000168020636*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"ad73b8d5-d61a-4e2a-89e9-2005f865f202"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", "url", "]"}]], "Input",
 CellChangeTimes->{{3.933256766348028*^9, 3.933256769341709*^9}, {
  3.937999494203115*^9, 3.937999495984078*^9}, {3.937999623528648*^9, 
  3.9379996245248632`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"5ed8ed90-9549-44ca-a8b2-38b7586c6bbb"],

Cell[BoxData["\<\"\\\"Hello World\\\"\"\>"], "Output",
 CellChangeTimes->{
  3.9208939629004135`*^9, 3.937999520311248*^9, {3.937999626098957*^9, 
   3.93799963313892*^9}, 3.938225451963025*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"dea1e411-88eb-48f2-9690-af34e4b62591"]
}, Open  ]],

Cell["", "Delimiter",
 CellChangeTimes->{3.920930609342507*^9, 
  3.938014047960039*^9},ExpressionUUID->"810a8a91-8372-451e-88c0-\
8b671092d34a"],

Cell[TextData[{
 StyleBox["GenerateHTTPResponse", "Code"],
 " can also handle request input attempting to emulate the behaviour of the \
Wolfram Cloud:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379999831517477`*^9, 3.937999997259099*^9}, 3.938000236171034*^9, {
   3.938000283492004*^9, 3.938000298018087*^9}, 
   3.938000390845595*^9},ExpressionUUID->"6a0514db-10df-41c2-aa83-\
0146c3f50f08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dispatcher", "=", 
    RowBox[{"URLDispatcher", "[", 
     RowBox[{"{", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"\"\</square\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", "->", "\"\<Number\>\""}], "}"}], ",", " ", 
          RowBox[{
           RowBox[{"#x", "^", "2"}], "&"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"\"\</cube\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", "->", "\"\<Number\>\""}], "}"}], ",", " ", 
          RowBox[{
           RowBox[{"#x", "^", "3"}], "&"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setListenerFunction", "[", "\n", "\t", 
   RowBox[{"Function", "[", 
    RowBox[{"data", ",", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"client", "=", 
          RowBox[{"data", "[", "\"\<SourceSocket\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", "\t\t\t\t\t", 
         RowBox[{"req", "=", 
          RowBox[{"ImportByteArray", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<DataByteArray\>\"", "]"}], ",", 
            "\"\<HTTPRequest\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
        "\t\t\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Echo", "[", "data", "]"}], ";", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{"WriteString", "[", 
         RowBox[{"client", ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"GenerateHTTPResponse", "[", 
            RowBox[{"dispatcher", ",", " ", "req"}], "]"}], "//", 
           "\[IndentingNewLine]", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"ExportString", "[", 
             RowBox[{"#", ",", "\"\<HTTPResponse\>\""}], "]"}], "&"}]}]}], 
         "\[IndentingNewLine]", "\t\t\t\t", "]"}], ";", "\[IndentingNewLine]",
         "\t\t\t\t", 
        RowBox[{"Close", "[", "client", "]"}]}]}], "\[IndentingNewLine]", 
      "\t\t\t", "]"}]}], "\[IndentingNewLine]", "\t\t", "]"}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.933257044102398*^9, 3.933257078142542*^9}, {
  3.9332571694129677`*^9, 3.933257204710966*^9}, {3.933257329092066*^9, 
  3.933257362975956*^9}, {3.9332574316738014`*^9, 3.9332574559026546`*^9}, {
  3.9379791224604883`*^9, 3.937979141739925*^9}, {3.938238427686843*^9, 
  3.938238431947342*^9}},ExpressionUUID->"47b5ac77-4d2e-40db-a0a0-\
9e079d57a238"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"URLExecute", "[", 
   RowBox[{
    RowBox[{"URLBuild", "[", 
     RowBox[{"{", 
      RowBox[{"url", ",", " ", "\"\<square\>\""}], "}"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", "->", "10"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.9332570953677044`*^9, 3.9332571383361225`*^9}, {
  3.933257186112173*^9, 3.933257190431408*^9}, {3.9332573728434486`*^9, 
  3.933257407573101*^9}, {3.9332574594820633`*^9, 3.933257478496256*^9}, {
  3.937979200496832*^9, 3.937979206992382*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"379281cb-5e25-4d4e-bb88-c00849c149d5"],

Cell[BoxData["\<\"100\"\>"], "Output",
 CellChangeTimes->{3.9332574801051044`*^9, 3.937979209489558*^9, 
  3.938225532447155*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"e27418b4-fddd-45fc-bc6b-93041e149af6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"URLExecute", "[", 
   RowBox[{
    RowBox[{"URLBuild", "[", 
     RowBox[{"{", 
      RowBox[{"url", ",", " ", "\"\<cube\>\""}], "}"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", "->", "10"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.9332570953677044`*^9, 3.9332571383361225`*^9}, {
  3.933257186112173*^9, 3.933257190431408*^9}, {3.9332573728434486`*^9, 
  3.933257407573101*^9}, {3.9332574594820633`*^9, 3.933257478496256*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"0cac7e8a-e1ab-49c1-9b7b-ba1ce8a9c42f"],

Cell[BoxData["\<\"1000\"\>"], "Output",
 CellChangeTimes->{{3.933257385382416*^9, 3.9332574816044903`*^9}, 
   3.937979212179633*^9, 3.938225534292838*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"2d1657b8-95f6-4055-83cf-8a1889ac22d3"]
}, Open  ]],

Cell["", "Delimiter",
 CellChangeTimes->{3.920930609342507*^9, 
  3.938014353954151*^9},ExpressionUUID->"4e4e5b55-5b6d-4852-ac2a-\
85d04178c483"],

Cell[TextData[{
 StyleBox["WriteString", "Code"],
 " is not blocking so the connection to the client could be terminated before \
the server is finished writing data to the client. "
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379996571023273`*^9, 3.937999802740164*^9}, {3.937999864631381*^9, 
   3.937999874894947*^9}, {3.938000350299532*^9, 3.938000355744866*^9}, {
   3.938000392764586*^9, 
   3.938000396123733*^9}},ExpressionUUID->"36801a94-51b8-424d-849a-\
db509845e616"],

Cell[TextData[{
 "Using ZeroMQLink\[CloseCurlyQuote]s ",
 StyleBox["SocketWriteMessage", "Code"],
 " allows us to ensure data is fully sent before proceeding with evaluation \
and also allows us to send the data as a ByteArray instead of a string which \
can be created using ExportByteArray:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9379996571023273`*^9, 3.937999802740164*^9}, {3.937999864631381*^9, 
   3.937999874894947*^9}, {3.938000350299532*^9, 3.938000355744866*^9}, 
   3.938000392764586*^9, {3.9380145821135473`*^9, 
   3.938014611659842*^9}},ExpressionUUID->"64fb8bff-464f-49e8-b8fd-\
7e27150ad29d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"<<", "ZeroMQLink`"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dispatcher", "=", 
    RowBox[{"URLDispatcher", "[", 
     RowBox[{"{", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"\"\</square\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", "->", "\"\<Number\>\""}], "}"}], ",", " ", 
          RowBox[{
           RowBox[{"#x", "^", "2"}], "&"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"\"\</cube\>\"", "->", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<x\>\"", "->", "\"\<Number\>\""}], "}"}], ",", " ", 
          RowBox[{
           RowBox[{"#x", "^", "3"}], "&"}]}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"\"\</randomImage\>\"", " ", "->", " ", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{
           RowBox[{"RandomImage", "[", "]"}], "&"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setListenerFunction", "[", "\n", "\t", 
   RowBox[{"Function", "[", 
    RowBox[{"data", ",", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"client", "=", 
          RowBox[{"data", "[", "\"\<SourceSocket\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", "\t\t\t\t\t", 
         RowBox[{"req", "=", 
          RowBox[{"ImportByteArray", "[", 
           RowBox[{
            RowBox[{"data", "[", "\"\<DataByteArray\>\"", "]"}], ",", 
            "\"\<HTTPRequest\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
        "\t\t\t\t", "}"}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Echo", "[", "data", "]"}], ";", "\[IndentingNewLine]", 
        "\t\t\t\t", 
        RowBox[{"ZeroMQLink`SocketWriteMessage", "[", 
         RowBox[{"client", ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"GenerateHTTPResponse", "[", 
            RowBox[{"dispatcher", ",", " ", "req"}], "]"}], "//", 
           "\[IndentingNewLine]", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"ExportByteArray", "[", 
             RowBox[{"#", ",", "\"\<HTTPResponse\>\""}], "]"}], "&"}]}]}], 
         "\[IndentingNewLine]", "\t\t\t\t", "]"}], ";", "\[IndentingNewLine]",
         "\t\t\t\t", 
        RowBox[{"Close", "[", "client", "]"}]}]}], "\[IndentingNewLine]", 
      "\t\t\t", "]"}]}], "\[IndentingNewLine]", "\t\t", "]"}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.933257708372101*^9, 3.9332577104113026`*^9}, {
   3.933257785929617*^9, 3.9332577975905857`*^9}, {3.9332579495520515`*^9, 
   3.933257957780567*^9}, {3.933258004004074*^9, 3.933258007248768*^9}, {
   3.933258265052864*^9, 3.933258271788288*^9}, {3.93797933435061*^9, 
   3.937979345260949*^9}, {3.9380145163655157`*^9, 3.9380145497362823`*^9}, 
   3.938234767080809*^9, {3.938238527327203*^9, 
   3.938238541700118*^9}},ExpressionUUID->"071f8493-39f7-4381-b349-\
39e0d38483c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"URLExecute", "[", 
   RowBox[{"URLBuild", "[", 
    RowBox[{"{", 
     RowBox[{"url", ",", " ", "\"\<randomImage\>\""}], "}"}], "]"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.933257799581959*^9, 3.933257802892412*^9}, {
  3.9380145588191433`*^9, 
  3.938014567489531*^9}},ExpressionUUID->"515b0238-f090-4a2b-b346-\
b07a0aa2b537"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJwsl3dYzf//xhsqDZWKFppapCJJndd9ayHtkoYmJS3tUkmy995kRkrIXtki
e2VkFMLHSMnefn2v6/fHOdc51/njvK/X8/W878fDaExa4DgZKSmprM4db4Gx
eS6ZmbH5QfL/+xIfmzKgf8r/flz5/69F9dn86XgRRbLWSL+hhwXPd6P3XGmR
f+WK+KqvjOHzwnnH57V4qP8Ghp2CMOe4Dvb92IWo6ZZsi1Cn5Mc+SA3pAtWe
qZAZY8zUliEi/54XDz7tz8MvJ3OnQzH7VmRwdydZqHto4nrXNF438OKS8Sm0
HZ6JMBVX7GnrxcnZcdxoqcLF48Ds4F1CO2o+7EeO5ptn+dR+lASbecSNxk78
916PPzqea33FVbzdZcO2JSVQ2tCEitzRPJEyDXkWapxxOpQqf33ovrQdXT6e
xNozdWiVkuaVM07st86MRndOw0K5H81y0jg5zlMsj5hAx9zP0Ft5A5qRoXDv
fA2Pdaxo2TeNS9f5s9vbLLw7FcDWVFuOuDkHfzUd+W5HrfiunMOE3h9wdnFn
1q/OweayIfx8WIbm41JZmuUM/QGWrLx0G/t0P4ntwWGcWZTKc4GL4ZYVDr/i
AdhyYy1glEev8EE4ULpDlNZpcVXcP5wwS+OlW3rs1e801FJeY9jrZpy2Cqae
vi4NV1Zgv1ZPRsYX8trRdxKtnDB6qq5ERdNfqL8q5IU1o0V+nQ1jfoZyn58r
FFbexJX2l0g4Uy3pHTbN+et4P7rqtqKrRxtsQu4jTneh6HJuBjYPuIPC+GrM
MQrnAVsDHspVpOmdXXijv1zUiuGUXbEEmyI9qBseLcoN7qN7l+V4+iGcDZaX
nfS0ZLmjsTesWqT5sTaeNUeUuGHAJPa9Fs+CWiVuGjScrw+qoMsgJ1Q6OrKv
3wnsfCOYczaEU9+MlZxv16BVbDQXK/vQ08QZZdEyvNzdgrMzrblK5x7q+oSz
0635cOynxlenbmLihDlgkw7DFmyUPN8+ijGVH3FlwFH8pzuYNmemin7J09G/
5CZUy8gtF+Zj1e98qBk68n7TDNyL6MrVt3fivlchxapsqkV4Q60arF03hFVd
u/PevlNY9myFMJunQMNFs9D0REa0BPmJay+KefRGAVNWaXN7ig4/Rv9DtwBP
WHV94Vxvc8EZsdpi9JqbiC1Zj+UHl0Ff+jFaJ6RQkqTJh0/saRfqxpzxDyB7
d5mk68M4DnBdjzLPfbiq/w9W2x9iTX9rbjVQZVliDI/leXCebACtpyzE7lY7
bttsznJ1G7x0VGbLWVmu60t6vbdidw8dSq98gC7dbmLpoQjuLTVCW0oA66e2
wLt0MDcnNeCS2z9YZ1cIe88YbuoczAMzvTHE6wYOe7vy7mI//p2ezGs3V4oJ
e9PwecR14fVhMk+oU/x8qyyGzzNEbwtrEbSrVtIe2oO22y7iaI9ILqp2ZZ8p
4TyaNwuqg2X4T9lHsnSlOZwzFXFx+wE8ObZVpIzqBXE1HfP2nIbrkh8oMT0I
r9e6VFs4jn+2DmLqx8mMtZiJBbpDsT60D8/MvIb2FANKf0+hdEwy/SKGMtRS
nvNPXBEe8jJsmFLIqjO7cemeCxwXjKf9qfd4XWpNz42BNB44Cif0etLjSSAL
rjlg199WfAhc43QgCCgaMYy6/XZiTMJX8et5PS7k34eSvQkezIllYIgJvMZv
wJo9RpK4q+swIlyG07pZ8ZTvS9Hj1Tb0StyPUd+jmb83SLJiUztKsyxpubSA
h3x6sPTEE2xaEg19nVR67o0U3c/NQp2hPo3eOyN4hx2cRhTxduEQPldQ5UnN
ZdjytgxBsd344mYw24YZwVM/BEcabiHv5wcEx9nQrMoOYe+qoXVgItvWJDHS
tD/vfnsr4tU9GTg6nkmx4/m2JhvLnBVpODcbekaj8OxqT575z5KHDo7k1oFX
0ShvzLr1pxFpEs3D61zwwagnB1mtEY1RI1j5II16g6RxSmUjpl5V4bAH8lxT
GMTNFjJMzC2mSnUOo9otUPFkMm4fiqTBJE2uGJ7K97pmlFu4Bd3uPEJD8gec
SYlm+nqKoJwj+OITg2HKGlisOxhOvq+FPaRZvkhIckdOx+GeY+llbIj2+JVi
1xl/7jcvxaovAotndOTeaE1Ok9sHhcpAfDLy5tEEKQ6VrxQma2fh1u1wlpks
gvdqRR7bthBW5qdFQaiF8/6Lis5bnnYWweNfip9xo1jy0pTzvCNYNHQIz6X3
YdfZ31A+uQvX7Q2hoUUQn/u3IqMsGzE3cvinVJOTY3154aoeA47vxPkXmpi/
vQ93xVhygkolzv5sxZipC+DRPgZZaQ+wYGMIE7VlcXCKFu99j4FOeBStRkbB
52qCqF+nyPevJKySkXBJFx/uKTiBoT/GU+9EV6HQ8ew/ZgTT9GtvJDt8xCeH
o3g6ZySNtCpQt7I/qufLcQ7GoLdDX9rdKcXMbTUwDcrnhZHF1HDKo/bPXMb5
ylGndDjD7g9F5JcjeJ9yBKpLJ8H3ZQqX/72G/2IjmC4VwyeeqpQe0JPv7UwY
vb4NSiFaHPJJi4rek3hdQZcK9eOZ2GLP2sVmsG90pZhZLqL+pNKhwIHf+hty
+qEmPH0izaePF4rR869j3Qpt+j/QhvnKPvy+XFd4dYtFVu5K/F2pzfJ3nTjJ
RpmLPcqQf7YMG+ztGbsphZuOSXErI5l9SAerQ4M5st6CU9qkMF53Mf4bsQjK
rTkMudSI0rSu6OORKsJk5iK58z4s7rdfvFx3ClNfajIq/BriT+Vy+ylV6JxJ
5lpnLRH4T3Cu22wY9F+Fc9o2PKX/EJO6abOXRw+om02k+mA3vv3yGXlHeouz
GSNZ8EIVd88UMrR6CIs8NOi2tTsXROvg26uj6PokEG+W6FDuxWiUGl1C6fzv
wir+G5pCr0B9WxyfSDVhWkky54zz5H/pB7BzYzlUXk9EucE+vP5vImLTXKiW
4ehsWGzPohYNbNFuwqcqHf6cJMeDv4NR6noNS1T2oSrWi8aFWawNkOeDSj16
bTPkyNy3ouHHEBgo3RPjT+6A+yA3tmx8LEl578Xr+xZj6M59OP/+DWZtXA7z
DD2ky/6GSk0J7h9J5MxpWThV8A/G3jfxR0uR1R356+E1nrOfRPDVJcHmosWI
bZ6OxVcK+WrobtxLPSFRb9gHjXZnalTY8mZztQi0zKbfQuLtzigyeyMWN9yW
nOpqwTMjR9Al2o/5dyJEWNh45p2oF9Hxitwrb8ry0Yfhql0qmdvlPTp1N8PH
q3mstnXllu6J8Lgig/unvkDhcTG3LpRmwvqhvHhAVpJ4MRG+Vb6SPmnvMF3i
wX1n+yLbL4xa/w2iXclWVNf3w8Hlcawd8Q7rllqyUP4EcnZLMfuBO2cVGbKX
WywPP/0gDptEIcjSmzGzg3jz+BAuHBzBxykn4XM8lzWh8WJfQzDbvwdzwdS1
CB/lwK0bWvDitJyov3QGJ14P5EElP/6Z2oOx/75C5/w5PIuQ5gPbBjRW+zHF
ZCEcfg2i+a5ezNY7jK0++Zysr4Pm5RM4sMGZk1d4c6LOME790ILGEH3aJ8Yi
IHcyz3leQ3fti+KitSlX3dHi/d+K7KcSx8JB9qJ64xdkFqmzbWUZrE+P4Pqk
eH4bdwnHNymwy6ZenLQ8ng37HJjSTZ73xifwRP1tDJh5B2E91PmsRpm/FhXy
h1YELm2pR0aamdhfW8zl/lrcXxctGdgwE9/2dmfnT1PE3KHz8Xm6N11EgNjW
M5nWv1uRXDIZj9XbYXD6F8b2GwL9jyvR/m0Io4YU0yPHlCtkTFh92QMzpLR4
xjGBukn+dDXw4AbvkTxqPQurS58iZMYQ1q65iv0yy2E4VYaD54/mu8gYXnly
GNe33MCs4bYsbRzFNfnfxZOrEbwzN40hy7SFms0I0fhchrujNuJ8xSS0bJrM
+Vfjed3iPKY/jeby1j7MG1WB84FBzOz7RwTb+WHccUVOXXxPXF55EM3aH2G5
PJd+VXn8Ly2NbwuOd7DBYGZab4P+SXApDyGvWo5TI55BO2Ag10V2g5puGj8U
3EP6p4lMCijgsNdy7GY7gCP+/ID6TE3mXTDnNO1kHlKpxaicB+j0YzPUFGJ5
sL0Z0kN2IqdFHetelGLO+2IOsFBD+uhUztH5iz53fRk4oR6Sww8wrKc/5Y4m
QJxJg/DP59IkbWwLOiDK47ai2TiGTuUakkWrenJp2kHoqD5HmF4CT3+I5x1P
OS4+rIRtJcpMHtwXK23qxMltyjSelkuxoKdoC05A/8IPOP3lAMbdM+eunX3p
+TSK1l77YXs0m/e6DwZ3qPHayp58cLiQ8aNN+K4xgQm/52DPjU3oOluNOsU5
lLLbiXBtbRaPG07bFZO4ZFo0jxYsQMlpDdbnv4Cb0SgaZg3nuZxG/Lpdg0tv
lPCteEpHfnTF3HWD+d/prdiZ6iTiyo6LkFpfSj85jlkrNHhZrUqEJb+CSoej
VDQb0eVdDbK22vGY90Xozc/CuL6GDHudypltF+CsewlSFzu4860qtbJ788Oj
AKQPU+DNmXYs+DWWs6cehMpCR2y8fAuOz0wos8uBRgUdOx0rTT3bMklZZzMO
uj6KE7sO4uLB8Vy4N5zKpWrofmcalloX8PYsY6oF/kTc9f34Za7JXyNyeFyn
P3VbjRjqsE14zOvOtfIPxDzlOaKx9TmsmgW1C/zp5L4Z5wrmipnLe9N//Du8
m9ixb726s3FJkkQuKNDpt+JpKDjoU3NTHouWunG0oppErSGL5yYdFav3drjH
8DGcPy8APvnKXLm8DF1WxjL8535kXn4HnQ3WfFIex8ertNhl/xdRfKwrogt9
efh+Fm0MRiOvrB2HN1pKVDXOYkOqDWZP78wpr2/BudSAO/9MpOONeN4/ls7r
m1+Iu8EFnCP9WvyYp4UzcyPhOq5J7PiThecPNkimag/l/II8BL9MxpWOTqs6
9VpinqhOK/kkkZcxEjMlsxDXOpLND/aiWOMTetuk8cJbGzYPiOWf4ZP516gr
DR/swdmETM7v34l0cWXgXTu0bTiGnRrm1Gr0oEa9Fb92WYhbB535N2IBqha2
Y8qFEmz/QZ5vuo21obMk3s+i8OSrITstnIlUkwK+eO3KZ2/96O+YxVWrjRji
78xb7/Q46FAXxqzXpc7iLyhO7slv29Ox4kgpUrY/R9EHO2y+G46XD8NhFajK
kKYUPmxL4BbIIUsviO8uDmZk6nMsObUOQaOtuHlCMdvL6iTFZlsRmlUrlEwG
cZL/fcyy/4QZu+UZ4v4ACpm/oPC8RNLpuhGznZSoLWJx+d4PnPMM4Iv16pwr
mSr6XHkiGdlbj7uvzoXLrG/wtrOjg806Sf8zuXy9rgbd+kczTvEkHnfw4mNv
NayqkqLPxFUIqSYTzxdwlZU9t9xYitWurnTRNufdL2b4marMJ8YGzD12Bnm6
towPmcyAMn3mnpTltuEe9PGzY7vKF2yYGkSfWQPp8uYsdhl5YOwwfQR0OSza
VSJ4/lCbuL9Knt/77BIZJ4qxw7kLMwfOR8Wgdxh4pA8LVgzgwV396bBcG/vK
NopXNuuwQiMXt6s2ouLgH3ydbsR5vQ0ZmeSMreY3sCh3MHfJZLG+U4GYn2eL
ptZakeW6AnVvwLWpcvA27MrsLi+RuTaOAxsV6VxXzBL9NZhYMoJbb1SJ4lvR
fJI2kPZZBgyItuJpTVNovYnAphgXMXzKPdzM7fCvz/aU+/caC4taxe3PE7HB
Zw98FS6KVN0U7hr7D1dvXUXtthuwaK7FTJ+B/LzbkBfatkoMFp5Ffqg0wlKr
hfmyciFzYTqyC5uRMDaWtAxgn8pJ1Pzcg9L/tPg/p/8bZcS9F+VQPKUJZ6dF
8GPWONas0KKPuTQ9T+dw+uTpsHR9gu7X9uDR2z1Yk7MHu76bcH30dUxYqsld
ywLo0tObXf458HwPTda87cLKMCtuSpES41SOw3XFCPp+fYCEb2ZcHe/FRx3u
Iyv5irCNUjyNXD58GYkTdcp02fkJ72ulOF97Ig7u8Wd6pT41dvdE9fbudPzP
iuoT/PDDeSamHE5mfAdTLbo6gd+Odrimfwgunynm9WYTbpBpQYqTO/QqWtEw
YDL3nnuApz8X4Yz1NGyzHsGGgECsztiPhb3PicthXXlljxHd/4ui09Y3wt7e
X1jvVoRC4k/YWJCO003E2u49GZitxasDbNn5sBH/MziPi78a4WSeTPk549my
7jjOJVgwb+B+YXjOg7PXgGsMMmlV/Q1uTbVi8IcrIue8PntJOvZgjj6W/9Bl
RaMKm9aZcv0wDezd1tF5LcT+ruq8YvNTNJiTtvumIvXdEkmmizk2lICzElbh
dLATVdtHcpj/aAYsiecZjQFw7tYK+9tbRFHKDGE+XpO5FmDig79wmqrIU68b
MV2nD8Ib4vBx+XLEzn6Otvne7F87iXPnpND57XhonFuCL5OmYOGlCdRIGI2J
4XJUnNGJyVtMsMxqKB83/oNFWnf62K1wOnJMiy8NZakt91xsP1/Ml67u+JCU
g4o+3ohe0odqYyLwrWMfTvxZKBzHn0XyoR84W7UAEcnOaLTyw985vXm3KZB6
jWXYfegAZncr4pZfVdjamMrZy3/BWLcTD1gcQ3aVB6f9NeCToykMLHNh6iE7
rCBpEtqIyU+1Obe5F7f8zOaAoTtgajRGMjl/iojsyOKHj2ygHGbI+w5KSOgf
xNa3k5mZM45bLhhxp6cuS8NVqPSjHPcfO2DUJnfGOZTi967B1PeejqmmzQj1
rkH1v5Gc/zeAN/vqCNfUnTjn7MhY22QxJ+MfRl+1wUq191BYEQznuffFVJHE
g7r6NC+1hoJeOr/KNSBH1gryQ4bx2eVdWDdej9Plg5Btuw97u13FF5URnLh8
sEQ16Q3mhoYiaGgj1puacN8eM27d2Yn+SmqMynSB5SEfyZG+eRw0/DCqKi9j
5Ap37u+VIxkQ1IL6hbaMvN6J2R++IrFjh3QTx/JF0ib0mGzE8E8KXOVWjPKq
D3DyfSASV4dyYPeD2PHBnLm2yyVHbl3DKQNLMV/+dgdnjWLpq1vOeDQb5cpq
DNc1oNsD8OcKJ6H8O5wXDtXjZO1tsWheOnoNteZlxY9A8FjI/9SGVV4Mi7R3
oEKizTEXlRgxt0TEbRzJI9cduHK6HjO8x1GrEKyRFLF1lw9PVK7EjeHrhbfi
ZGQ5B+DzcsHw9Doo7IyGo5k0Lf8Lgo2NCj+PGMO9VqZMjXXBrkmL0CPZn5ZL
L4gpdhdhE5jBCW2vRan/WcSkhnNo367Uni3H9pdrsdd/HvYsNGXW1sHoKfHk
wopc9hncfXCrwnthsigHl8+9wpnWfThk4MAb3tNFrtoWXPxZAo872syO/44U
VUse1NDngn23YHBzOMX5jg7QWY/3d3pz1KNiLtb9gy8vr6BHhQZ2mz0T58Ui
BGYM5JQv0ZKPNRViQnytcJy5HJv3d+a9dROY+329eJ3vhUn752LYE7Ls32oY
FstyeXEyT2mWSEIKB3Jaa5pw/R3ASw4V2N23Fac2GELtVgZXe5iKoqxQpLt7
MMIxDTEbujPtzSzJvgQfLnY6iF97IthfsUG0/q7HpYfhXOK7W1y+VoG32gpw
nOXGlJQVOH4wilsnDOHy/xqE9dpiFgfo8/tpTYwQ42g8XqbDd1oQ88OFuZ6B
PPw7UzK2tzfSZSZz1DR5kfgyA0p1udh2VMKhDZp8/G0fBohQProoi9DhgyTd
te057+NcfPmkReMrz1A2UZoqKRn8ramAN2dUmZogh20LnalpF43eB/X4zmYk
Ha7GUPZLtRjidB5N04fT0n0Q7aeOZ8CCgdyuPEsceHMUW/S8eG7QWvFjyDXE
+EkwYY0f230H8KOxMr2HaEF+0y/oW9vRtOE2KsIH0qefPJYVq7HXET0OHJbE
hv7j2HhhI/7cKeR5v4dYIHFlQMec5pdKccL3HK5Q68Kj+l9gu8Wc+5bPFOtc
U7l8UQlw1B4LHD6jtZMFrQy8GDHgAlwXj2K0yhLMHvQdmoatUH6jwQtxXrzN
V3jydh02Dvvk9DOjDTUZExhcIkWFuyWIzVYTQ5/fFdN1Izl4zmKYzLFkxSgD
Tpc6jccihwbr8kRQWy5X1KQz3Ydc9SyBNN+ElZ8d6Hsxi3+aunHNtr5U/u8f
Gl29OaW2RfR29aeCSwg2dQ8QQTvtab05BgaVDphuVMDx+fWIbesGubYU/ung
iIu2NaiXtqPVo94cfvwThigo06bbBfh7SXOTcSIjpo2F9MRc7tgbyyGD38BN
rj+jzXqK9OZQDo0rxQg3Gw5xKhOlpx25Z/hr9PyyDFd2j6fJ4ly2v3oo6Zkk
i3JFBWo6f4fn4F703BUH4/EZ0PvkT6tNm6E7OoMDF2xDw+BKvLWz4sqcTZjg
NoaOWYtx97wBv+etQ36NBVbNUGNORB0GWY6mWqwFV/Z/jN4JUWJKWQFLypQo
42bBMRc0eShwKW6WydH8QBWe7Yzl3a96TKjx5afHXTj/WTTKCzNoJ9+JRmYf
8H3DeXhb9cNdjfKOM1Zi6VUDyg9t6HCCEog+2+Gd2oWuR/uyy480mimN57W3
HWztdArrf+lwpN19nJYbIdwk59E6eQKbp5bg3FU3Lgu9gLrDfdDP1ZcrRg3m
FNUOrlOMw+dtz7FfIYInoj35vIC0cEihQv0wumq4o+riSnRtPoTtceq0fTgQ
hlPGC/8743kiawlCQ2x4v6QvfT+nccq9MGwNc2OAb6NQigjiFmdHLPvWijc/
B+GYlJ3EYWEmXQxd4Xf/AdI3q+Da4JtYfKOYDsOdMfbJUTEuLIklPQ/B78RX
uDbawv+2Gsdq2ED3pTYDYpTQJO3Ic8YujNGZgOMvBoqZqx4hOdqPl+7tQpl6
q7C6tB6x/kvQc9F20a7uzbw6d2FoDX5dPgqD512G6jFrslKR28KU8PxsEYPt
4nnsTAbNnLP539iJkF5qwqIfaiJ2dyz3zN/qfDmnHEYzkmnfZS9uqPyRtIXk
ijH3bwj/9iDOLRhOu+my/JaaQ/3qbMSqVIsZj6qxSn0rZMfMh+ERP3wz3oD7
4cH8utOU2QmBtP0tx2RRyKZ+zcjMUeF3uWQx2HMqZpUVUhLxEwZXdbnC4Ca2
iVi2VijQ5J4sSuSPiTk6HWf5sg8n3q7HWD1nSU2rAif4TneKrtFhmlQ5zkuH
4KbOeTTqeoofL3ozr2PGla5STBDD+O/eAXTas0nMPDuMgZ+9YdlqheTThyTS
kT2gO+2jJM08G/rCn0MyzThplR/Vw7tySFY2drxfichrWgx6HIrAI6dhWWzP
0WMM+U5rBMdvOIWBhe4I+iPPDW+d6L1ahy0SBXa7tRovVAJYuq7DvfI6Q3L6
MnzeatE83539K1I7vDiPX+PKhaZcHHZ0yET3aY40cN0j6ndsR5/miQyU3oL7
xSOps9+ATQayNGmV4mW7Dv9ripO87pzD8XNaJcpbsrn7gx1tJ0VRyeGC0H4y
md2jJ1K1vyUbHh7F4QxZqpz9JDky9C/kZmxD9KI/wl1pOL9UrxIvDORwf70r
df/GcTG9icMfsdT7MTzV6jBhMSDV3ZQjuunSa8cyTI7cLBb2zmDO7IHst2A/
OknvQ9/srvy3Xo5TTo7FOr+V8LzgxZpYDeefGgeQ+kmOhtu9maiZyfP3lOj/
T4En9kTRrbcUykzH4/PaDj9OVeI2CzOOGd4uyenjhdCzwE9zwbs/YlkxJY7a
VYIL1j6G391v0JyiwK99xvFstT68ViVw3tBBtLEqwbakSzhwYAIVnphyyZEQ
HtyyTKJ6Npda/dSw/bIcvrm4M7lEhqkea1AzLoJ/rqhT948e+13K4/WiQE7U
7EvVq4NQuWoHCtyWifSddWLHagW+OKxE5+8bxM3V+vzwdyL/G1khRt+r7XDN
KVDY7sL8z89QNUeNZne96OU2iokdDLJfrQe33ZoveXHgqeSCL1kUNpHPt7zA
sa0+TG14hmMT/KiWEsdVx62odqpEnNtqhDF9+vJv3j087TKUTbM79u2KMr5u
34fPkueINfkGSZ8GxLh1ZWGf3/iu6MUugT6U/23Hj1pKHNv7mBgzdAyX1Idw
5bk9cLQJkSzuIYVmBR/2vZ1Lfu6KzlW29FRdg0/rF6By/VWMdNPmBuM4DEvK
5hZVO2ot88Wci7Y0XNSJrnYmwnlcLHvde4f5xpexylOdNZe6MX63Kub3v4dJ
Jxdjgm4w/0hbUPpInqiK6CbyjYtZY2OOvnZO9JftxlKTR8g6LsujL8x4ODiF
3Z5qER6fsczwIaY/8mTotuOwiRvP6+7d0OxzTahU5fOHqS0TVfZIVAbb0H3N
DzF5gQQ37rTD/WdnZjbESVbPSmbQO11qDomBf3Q0/OOiaaKaxKrKUfwu9Hlz
whFUWkrzb8F4ZJzLY8afgazUXC5RWjGe3TPPQ7W6PzpfCUG3ymFM+BbJwF7/
sPxDI3xctoslsulcGmIK9RpPfjuxFRuWq9Lugjw/vLOGY5cMbqtbgYCfxqxe
uw5To/yYPaBBqEz043uXJ1i/U18Y/jOi6t8ozj61CZNrNCmreBrmXUZy5e3f
ULi1HHX381nTbMwHLc48HivLvj0zeOyaGt23mPFKbHdO7aSDppPWPH5vCG8b
FuLl4iiq2vihloX82n4KsxjADvVE7OuHmLtjJK4ua0dVbTfqVlbASOux8Bml
iIcPVVkY/chZxTWLwaZCHJHahPqjR4VETonCsU6E6nryxd4vuBaTI3Z0dI5f
xkHcOODK6zEd2ajekxqlS1DUzRd+muuwvsCBpZaGHefmxPvR4Zx3b5roMS0D
ytlNsFUo4q1D0khc2BfNuvtxe38MN/3ny7I+kVw+cTyqM6x4faAiw5cG0mSa
DY1r7or8/rK4/8CCmXk2PO/6H+I/K3OjXBGn3RQ07LUBtr2j+F3+vBhfr4NB
C0aLR2dCGGs9T8z29ULC3kC+q/8iKapy56HYcejm8QnLQ39jjWWd+GN9ATkd
5xq2NhxW1d64ljwVXs+jWT88GsevSkGxArzVWCZZ2j4QKx4n8Fg/FR7c6U4T
p9XCtNYXo2vCOHDfQ/Fi2mw09Y2k07c+rK15jejDu+HfS5kzhobx6xMf+D3v
mKmoxfYHn50D64dy1qgcLu0O3mmfBrG5Fbu62bHHsVMSg4F/ccJ5DVY/SkX7
wa8IvOLKxuyvGOF8UTxP3S7cFpVjdaMbTy7rghfW8lw6PZJtziOxsNZPInNS
wqANXbn9bCjn9EzFbKlClD50E8PDtqJ66g+8fZ3E7lPNuVNpqURrpzEvbCjF
lqmTeLbgMWKN7sIj2RFbl/pTOl+G9zaoc9t5f3qH7sfsnH5c1LmQsTFnoBjU
hdfENGGTnU4nW20G2sTQ2HISG81uYuaIL3Bcb8JFr1T5/XUMp5jNwt9a0Php
EV/FJzHDR4fGt7ZgopM2FWJf4/0Pf1738eBGR3f4PA7g9C+5PBpfj7ezX2Gy
8U8M99qJlUdzGZRrRK3bM8W/tnAozvZi9wBzJvS7jpPulzC7Np5tkX5UuTyJ
s0cWC7ONHuz5UtCo0QOBeSl8XenAE+GDWbzDn0PtPVnZbsbqXkVUcXOnzWpl
etpLaGCXzwN1w+m3MIZacz9CfeNi8cdYi1vd5RDxuk7ceb4TTy/LsNyjEW6j
lFCtdEmiJa+C3xflua/3dlgcrBF2W3NovOYweh7oxw2zMvj4aAr3TPFkrOwX
eA5sxOOLe7HpfCRr6wcxZN84KLqrc7h0uvhiu0PYlqbw4eEsZsbEw7tclm52
I/ggR1qMjhOSHzlf8fnsSNaNzqP3EXW6JAbiRfdgVtKUj8b3ZWqLH2R/uvD1
MkvukAvmwv96U/vZaKpuTeDiAWY8VzGIhdc/C/WfujT/ncVu2dE80a6MzM7p
jKvvRAuXLtTp2YUDOrjVLAgMm+vHqHO7sdgjnlJnt6DXV1v+DBjD+zEnYZti
QNt/76GzPoDV54Ipc6gZueZVmB0ynKdMVXnrXzJfnivgpuPGHKlnwPrf4/n0
hhIKrZx47bsRWwbpsqNssfbqOvw4+QLFh5okSh9nSma/U6Dv4/VYVecC3eB4
+sx5hl6bTRHLcvS6/QtBaoU0vD6Sxza+QlmlORIsgrm4pTsHRQ7khLE9UBHs
ys8xxKsz3jDsYOkVIwZxhVxn2r7vyhkdHmdyshTS5r3ou1HHua/yX7i/K8Xx
GbfwXlFwUXIpZCzt4VgVxNoBEzlZOPGWugv3vg1iwuM3ItfzAe4Nl0aAQTFg
RWD6cTRXXhJv4xR4+s5kavXWRnjSFzHgTRZ3hI6FzPNasenTPjHpkCGaCg8i
qdKNa9/rsNwui6tDJzC/PI4/5lahf1scgvpvwkWbWI58ncyjP2tEXWYA53bk
p7vJFCxUn4q6Cc4QYTl8+uEKFrklsLJLqCh+k4ujXi/hqz0D76z7MW/RK8TU
nYOqnDE7h45ioLEaF/0ZQO+eY9CUlY7YxIcIuauBecst+KefPns/CUOXli3Y
vseNn4OdOOFUFI6dTuCSVX24p96dWo167FQdwYuVTULtyWz0GfgJDsa22Fmn
zwMd/1tc4cbOjsosq9DhU/NZULrXMae7En6cWcQiO03EfZmGfh/t6bJ9BQbv
dGBkuho/1sQyJFOeB1xUOUM2n98W+cFcyYdNY+tQtL8fE99lIrfNimWrxjF+
2z+Yjk+kt6U01nXcnd6josUGpWpMvjqBuXuPirShUbzvrsnl4WZ8DS0EVG/H
sbMWdMdEKu5OE58n5XNfR9a6lWrxaLgDT73wYM5ZI1wbakmtfZ7c8uQVOvMo
aj8n8VppESd6NUoit+nR+kUYl2gpikGnSqG28i609mQwqqge7oXR/LnFjvs3
yXGfUxyP+VwU+d3v4tZmUOK+B2uXe9PrbQZ3bP8svBoLMWzbO3HwlwZU9w1n
1RwTlqQn8pxBLWYvP4Lfa0owfecXvPjeGeEbtCSrFXWZ1rkO29La4NwWzgOq
CviyazK2dN0Lmd2JzL4gzX/DA7n8QiQXHTkgaR7bmX/a9Jnenodx/Z1g2+2D
aPSMYKK+Lv7FK7PEbgYKtPcI/3FHYHRvBNdXHsPxvSexKekNCtXfiUVTz6HJ
zYFjbkygfIUtZh2okBz78QeGt8349KYHNgTeQ87YSF7xFaipGEajFH8uCVRi
5+5qPBXkzJ3FntiSk8WEKRSvLhzCa19Z6k/cjKeXlIirN7DHPoFHjt1ESqIT
FU0k3FDkyPlVifja5wzUlnzD35V5/H04kws9PNnzpw3HnrqCp687Y4d0Jots
forlV07ib85JTMFp4blxIQ7OHsFt6yQM2WTP6a4/xIgjt8TC9EoM2PwOU36l
Y9YbBT4/9U6UnSsWneqUaLskisUuA5nWvh4yZvoc4GItlvRU446qy6LXuwiq
uoVKDNb35lKl25K+K4uY2C+KVRWDsOuaNWV0P2JbsBVrV8pLFKRUef3jTej0
0WF+R+fsL9Wh5csihG55ghP/afPsizdiyKXijq7/BRfvOWJZtgvy5o9l1O/+
zFwozwo7a8xbYMxZkv3Y5urF/Psm6F5vwKG/p0P+Yy+qRKlwQg8XjlathEGH
hx28qUadDCXefLwWYRuGcZqUOb9vasGXtom49FaerQYdrJDvItm8sxZJsZ6o
jA0RpiV6/LnoMHLdxjBCYzL7dnBSlcJCuExUpLEYSvfITcJYbgQbLw+G3zQd
jjugzLdNoyQ9DVT4doEGtZL1eccigNdvdqLTkkE8uMkDwyOD+bxeCVebw+CY
WiI+1jThRJEqCt814IurPl+qHRaLuy4UGy2X4YLBP+F7aSbsrbtwvkUjypQn
csy4ySJ0em/KRNhL5JvKccWqHGZfjPhn+x9o9etK+YzRrPR/i5i5bZi5OZ3H
D+7Eig1rxOZxaeyfqYu9y/1xq18xj4wcjNW23elofRq5eybyhNlQMTPmvqSM
xRx4aRQTPgThYVx/GssOYr3HFDz+fhj3EtN4WTUeo8sVuObGcNpHD2T5jUu4
ezuOG7pO5L/sMKw3GohvEx34LOSyME5Qh2HLMslFz2gmWXrRRqcKR89chL+m
BkfmDqdv+g8c/1zMk6b+3P2gN0s7Pi96PgP7PlrQw/869JImCWZa8KV5CNt1
Y5l02532Mufwfok+x3iqce+Bhwg3llB1ijEOJRzC0GV2PFEZz+ahGnz1rUZs
+a1DGxlndnnUAveR47lv9Skce2PBrWYr8GnYQE68+ht1a02wefZiXJzUmUsP
HRN9XIzwePFDpKRvFpnySvC+dgJTVez43PYJfvcYzMudDuDQTV9YXb2EHt1c
0fA0mFWBxyXf3qeI8feSeVnGixffe/ISAjGkNoXIz2VppT/P7jPCzVtyDEvr
z/2GVvBvCOXjaWa4W/IAM09OZq9FYzn5YAy3pSrz/QQZzpo7F875umzdYcoe
KYn0lWtE9qkxHabRj4HXhvHYokieX5fLtxcLGRlgIyaeM+OvhpNwr3fgxvoG
HM2Zivj6DZiclsjXcZP4JEeJIa8ED065LKqGCcl/L4fQd08MK42DJS0nVDh4
9UuR+dqPPm1m4r8FA1k6QZo/52Xx1aVMJOlJOKVXHabkB7PE25Ltgzujs7QS
/4pFaLEZxdKojeiz0hAt2yNp8LRFyE67grn9Z4lgt+58NW0I14+uhFbDNYna
sQ5HHGTGAr1LeHvLXGTXDqTkTBgWF/pyUWQHx1c70TbEnt7S78Wkl0n8Na9J
6P49CF+PZD5JN4Pep75wizZBZE4vbvFY5dyccBI1ut+F6bAIullewr0Ya/w4
60uNU9+xS8jTs+96fIl/j9vdj2CHjRvO+NzCnYwD4lx6Af3tZbnzWjZO95fH
mKAJdOgu6Ky5UxyPjufOsbWovWRD+zke/HQqn7dqZzrvl3sgogobcX7iLWyc
oMcJD7/hwfQF6OWbT2PJS2yVuoOjX/rzWLQ1F5QsRFwHX1/uNo672235XOOG
ZPn5/Sh/ac8hjdfE66BdeLo0WWRe1mP6Bxs+u7QBsRF9UZp4CBHvMzi4qYhS
Q7Sps96TDqPS0aCayBdXu3KlRxPGmbnyww5X9KxKo7b+WewIOAb5McpMKPsF
S9/NSPLWRT6iuDNYliFrzqBrcChXv+/g+L3d+MI1HUqrtHmhdwiu2RmxLd+L
K17XolmnDdsuD2KnQyewaH8CpZ+mM/rpWBpbuLCHli3vh0RwWvFwFgfsxnvL
js6WvYfsg+aIaalBWnM1FJa584TtSMqvNafyod8YYN+PVdURqNhnSKXJiezm
NR6fp+ix7KkD/1rqcba/KQ4N8Ka5RgY1HEdy86FB+H24N3MsCtl8UoN/bmsy
/19fHF7tgRWbZfg+aTuiP+sgvWA4h8/Qo5LECksm/Yeklmp0VfKFz+cM5ugf
xbazi1Bk4UrFP+6cMCMfLbL6oiaxHNJXezK0IYXm0bFcPbOj6w5Z8Hd6AM+P
mIig/SpMOq7Gu/PjuaWvFU0uOGNQyUeJxSAX5lnHU3vhNdHjeQ4rnvTG0ao1
+HlMiSvU1bEhM4Xbbvhxw2Bf6h7P4mv/Iq7WcOEoIzs2a7+A3BYVNNR50kRf
XsQUjxJFqrbQ2ZPFyk1jmPtff+7Oeouh5e4c3SiHW+VNuH/9AyKs7mLiQ1WO
a9slmjc48PETO/6L9Gf2KXdKbVbgNx1PBseP5K277ThXdxB1/3S49dlOsdbc
hJPrVuP0mMn8ZyjNr+eGCb+BMUw8mYdlGbuQuzqFobsG0OmfFNWnDKbp3Tli
XsRYDFhmxiFedvi+QZYBl25ihko7kv1Hc15vWa5fXIWBtZ24rKoXlT8YMmlX
FodYB9Jq8y+hs/2gqP+cxc5/LLnLXIaPfknRdHlv7lw5jG9lH6O2II77kooZ
995YiNWGoq1ag4OHL8Q6uyD+Na0Vyf3bsVnOgRodvNPyPQBHsvfAr0WHe7YG
0naKP38ouvHi1LH88jaF0UUqtO80ArJ312HEIi9mzAGPd30Cx4n+XNdYIg6o
3Ybqr0n84KjEjOu9+cdzPqJ1PouILq6YfDKQt4cXUmmUA7+vj+FyUzfOkpfl
ULe72Lxah15ut8Xn8jT6bVDBl+1ZOGn2FC5PtiB84z4oPbdnpaI0LSqKeWWT
M1sTHoivfaOZ8eIc3NaPhVVuArsbLkXP1sOSZS+r0eNmGkf7+eD2WG9+3jK1
IzPXIi31COQrMyR9LsZxR7M9PaISsCh9GDU/rRBDdhdS5106h94dwv4PfPgk
JYd9v16BWudgDt3iRtknTmj89FDsaX8Os/hbmGHdC58zZNmvshnNA5ZClLtD
+q4JaheDT9uiuXvEHrzbFM5RI16j79wcuiXHckl8ChfFxWPA3TPOcmoWnKrq
iPOOI1AhpUXPnD6o7loCpZQlYu7AOSJ1qw+HTQ/kmrJwXOo0iWny8VS0bYHX
JBdOKU/gm2OFjN1lxKz7powymIQ2u340bpoNfnZl7ZleYsTE4TwRUi66vc1l
v4lqtOypJyzibFmxqB8uvi3g4RsqHHL3EXK7yogu5+LRp/q2pLgr+bwmE4H/
/cXjnslYE1Eudl69CN/mLty/cpdQHfNVvN0Vy/C7aex7cQT7zNYQS97ME+d3
tyLXMI1lhrVYti+byWfnoVsIec7bg+82dueFAXX4dNaHMsOW4mPFIxie6YKo
tbXYOKZjDuNOin7uL0X9HmnJ3FQFWu5Thb7LI4yrCWGSbjVsOlhkSeI1+Cgl
cvQHfTzZoyls1UfxYv410flXABNr3JmpEI0hr26hyjNfuFgSWzQGs3pnF/Z0
L6JZibWY570DDRPk+PhxiUgfN1yisPMipt2bgHU645ikEk+vU364Ft2Lzb8K
oL98DIOmp3HEaOLkxifi7ytpKhqHCONTrZCqnI+GS2cQwQXo6e0lnJdZMOEs
4WGRxE1zNWB2rYBa+/eiYdo0iU2YMv0DmlA05aVYo/UCFnu0WRf6SWhFZ/On
wQKofswUMuXbhfnmAhbNBLR0XXD0iTxK1Mdw3M9oloRFs1tNMM1tlLhguCnN
1qzFjNBfaNsbhQx3JwzSSuaUI4OR/SgIIT0bEaPkx4vzt4thSzZAyTWHsSeT
OLpPMD4mpYmxe3N5OugUomzNUPKxB7NrXoohiQnc0WkyX8pq893qRBYo2Ih4
00bs2RZL51/DGHFImTfumNLuqa/YEtePZ9bqY6LRa5GQlQLPsED+i3LngCoZ
3Bg0A91u9ULedysOOuIvTkoO4oqzD89LOjP+joawHOHL0Zu/Yf32aOq0BCFm
xiSaOk7BU80mHN65AmHFkXw+oJDrX3bm6B9OqO1w3MKbs/Go23AecXbk8A2m
CJ2ZhobtX3D6UZnYmAL2zYxh0McwsUi9k2jtqozxVy24ubYMtqF5NKyoxqur
b6D8wZ/7LbqTKtq4p5dPle9VeJLuyvr0fpxpE0gZV3mU+awUM7e347TPIsgP
VMKxTFduku/L/ZFmvPA7EZsCyvBNvhK3voQ7bf47jhLpSTzx9BSil5Rj66gd
mHPfhm39NVmRlcN97W2YZCHD8381MXprCjSaqlAQbAX0BzvNsObt/+1tZxmW
JkpRryyYYwrbYKA8lIrrnfj0txXNwu2pe1cafX/eQ4PUITgO6CfpEaPO9auU
uKrrKjzEZhE9xJCWp/yhYjNbXNJw5ZyeDZI5JQPZqhjGIN0o0flLPB1vrMWS
3wfw7MNoug2Top9eBv/OaUXSuC0wzTsLh477FfLTguYeWtAr0xX9Pplz81Jj
7l7UjgErdDnkkjwjGr9itOYkXIkqhu0gH8mQIcaMnS3FS5rjeH3AdfTVDkaA
nT/rDr6DY64/ux7s6NxlhVwxqCtNfoWCDOa5jCVC5kgy7TRPitMFtzF6WxhM
7BXoVtoP+wPuQKdSQRy//RgBC3dByiiAZQ3zxO5uq1C8Yq/wNRvBouSOTH1V
CuW0w0Kh6Azy1igyusaIMxv3wWrOSuwOqMN+PVle1f0Fz0mjKPXAl63xWmwy
1mbnn060lLRgcKIadst/d5rb3ZymL+ogJW/PW13M4NRvM7oPKGLa3CSGmVih
cNQ/BKgpcYpzN54NdmRVP0Gv/TNEt7rTULOsh9abYAZs2CV+DsileYYpc04r
ctfPqyJk5GZR3qcL597tjpafJnzSwdeqV9RwJ+2ceDVW8HVgNw7tcPDrOpdE
RWIt3K/9FB5Zvrhy3ZJz2wxg+XC7uPHGjKvbg9n2wIrf3naDa/03hNnnM3D5
KLab29Lk1VW4JR8QT08YskJqFXSvKaJyWK24ZHUe1zvcbGy2L/8+lKGC51cx
eUcqC16P54K5i1BsWsBR5huFdlpPRiJR3BiTh+aA+eh3XJHvL53A08d3xOzc
7VjcX0+yveKapO/2Fqgq6HPO71fIi1mG2TXnYb/ah+W2q2G1tzdVSxbjYIw/
L+fa8PnqqyJatgqTOxizEPmseJfNBvNMZDx04Jp2c+aeXYhy+xyWltnypos6
c/v40ny/AlWl0sWZpG7wqOvNBUHnETl9gZAP7cxnrq/xuaWYuvcHc95Xdxql
3EY/5TL01zOgzAE1prpF8/mfM7jua8nVnoZ8F2zP4Vcm8F5EIo2MvVg5wtq5
f/gCfEgP5oOTyVw1Np8tCoWUnFSSrH6xR/jk6zO+nw+9XvZi/9BeNNc1peHv
w0g6+BA73e+Kn1NVqVMegsomXY58ky1OWYXwXZwavx+5CKtz98RR8wCWH1Jn
11fjWLJPm+tvetHNoh5/5igi9u1EPl+hSuu38ZyQMgmD7+/FH/bmjYuTuKJk
o8gzfQ9575XiTcd9bqs/j6NRmqgaY81bzZ3ZqTQAJt9PQF4Y4+rlRH4Ij6bc
VxuaWX7H2dlf4Tq9Ae6p7rB2uY26wADG75URFckSmF4ZQ68GwUidHhwwLpbf
Sqz5qjGM4vocrI17CaX5sbBUuoB+mX+ccuOGM3bgUfzsUS70Z0eyV0uyaO1w
GrO7kTwX7ElTGTsO3GTPvb2uotPJDp74kysmvt2NGG8/VER6MzvhFSI2K3Vk
oi7bLhSIZx798chvHJUeKfL0eVloNyZTtnQ2TsxcAp/MKEYU51L3ahj7fNeG
fZkhm3PjmTmmCNcyXfFgbTi3uA2F3WZZFtydDJu+2Tw7U7HDMUdTr3W6uGPZ
E1kxo+n9zJKrRvRiryXZNOr1TjyMLmbl82sdufsMmuHqLD82lL1rTZCupE8f
d08c75mHqbXe+Ngswzv1Gqyf9QwnauV4659PR5ca4M1vJRr8Gs+tKu5YOToL
8lkdWd9UA/eW+cjtpY87W7X44pQfDSsl7OzYjzsztmG2Tgvs/yZRTqFjvxu6
oHbzUpyWpHDYUW3u3rsY3tVStK2w56v3s/Fu3DL8diMfKj3Et+3e2HHqCcbL
pNI3eRA7qxky2XgAXm204n1lCWsq1Kky2xRLFxvzxaIsSk7PxqYrQ3HYz5RH
ZsmLA89yuS73JsbrD+W//s+QI7sYQdJV2Narp9ihFMc3jbPQKhcA5/jLWPa6
D7ooyzJCuKDnUwu2q/ThHOlsJKa587/0eMi+rUNslA5jphSh+/crYqzuBsRU
+TLWzJ7B1qrc25JM7ap1WGU0jgf/C8OavVFs2Z/Mr52KqbYqDh/M16ClswdL
sjNpEtOVIdFzMWejAU85xSD0fR8xJkeaobdGckKoDz8HfMKvmUpUvmLPD201
0D1qxy5NgzlI/gcWfmkXk/8FQL6iJ//FjhS9OuvS/osLfV5boWpcbzys1RPL
9r/A0ocxnPx7JOu8tJjaQwk60h09/zaQ+5VyscDdGetCg+lU3IcO089DZ2pP
vDqmg/aL6my2mgKD6/dgFHEcr2SNceYreUHbh39Tz+Nd5l8Mlkpn/NtsVqks
QWr4YRQei2Vj+FcMGnMCo6/NhkqKAyqDmzv2swLKzfMQ1XQDkzeuxkIP0uhD
CmYkyvDT2GwuvnsKCdO6MbHrMpF7wIGKeZ4YuCGEU/+PYvOOp/L9wziyKSlE
yt7KiqxzX5dNJEUkMhJSMiKzSHt+005bpbSkPZVKS3unPSilvbV/5/fveT2v
8zz3c9+f63q/X69zvNdiXq4ul0n2YETrKmREjeEdFSfJp6kGHKk5iHFdruHD
hNfIKo1giMN5sf6cNU9H2HPrhrPioqoSU9fvRtTHVRCNmdzTcbdwtwnliD0a
9G/oRYPkYfRKnYKx30fRzWi7WHplNLVSu2L9gS6cf3U3vG4l8WGkNQ2N+mLo
WFUuqu7AhOtbULFgmQju4UuFHRHCPzIWrjbaWBEUixXDTNkz0JKaCR3YVqSC
n8vH0m92GBNDpXuuvxp+90L4a7YhVTTTsczNn3pugzFieJNoyArhUKsiFM73
xadBBXg09Sa+KBlhTpMcxlJf6lNF2HH1nXg2yB0/Yc+l22dhw34fbrFfhtut
KSJmbj3KTuXxc2ctHN66FBEdhuD75a7QqY7ksZuqHGW3BjOH6TApowIzWvSg
80RVcudOBOZc3IQj3T/DtDGdty6FcdWMsTx9ZxvS9/gIJdfNGDRqARI8VkP3
UY7nh1e5dB57BOF1u8XD3TE0Ubvt+f//oHUe9hhzPxbx0YAMzjyoxt4TMtmy
35S7fBy4Y+Zo4lUqnWVduDFOl07DujOnfC0Md7/CkcW5nLK5F7UtzsOmcypN
7ZO49sIK0braD0rK8hh/dyZy24cx+sRd3FWL5LIoHSYY12FJg2CA5gPIHvCm
xFsLa56nCauXNrymZcpM33R+eVcq7UxpB83wF12SB0pqrnhziLTHu3yVh86i
WTgZ58cZNzshrpcb7+30EjddzuP6klQ6/afDrGEfJcn6flx2eAX0YrTZb7MC
Nj2X5tfIHGgPewBY3ITO6kQkzU7nmURjeC6IgulJS/bzVGaJbDR3jM3lcJ0S
/L7TC3ZlJizZ3Q/tZ9O47WYoP7X5Uj/QCD4vrLl7aBmyLEfwydAx3JHhjl//
maHm9UZsORTOQT978X28JtUS9XF3nwJDmoO4ZGYfasUF8tliFV4c6scFX5bD
ytGMcodf4GhVHTxj+kqc4w6IPRs3o6rEhFVLhzI0+Crs30vv+bo/XaulTJSx
GQuzH+H7xOuonKvJef9Nx701+xE6UR8GG9ZhzokoDluQwk1rJrB/szF21L/G
kpr7sP2+V7w0zeTmhoHcVW3DDGk/tK3Kkqh/C2a3hSO4crwGB62O5rSK3hx7
4DP+e6eJO2VKYr21JRUiYzmA3+C0XI3/JiTxraUTvn+UoNeQzvySfQm74jtI
XdOO+yoGSFJGCb7d9Akr7l7B2+5bcH7wbDgu0KTTzmWi6tg9BHw5hvLDThQ7
yFe3tuKs/RLU9dWjRMOTa/4rROqB7tSrA/aEefPi381QG+HACNciJs9KESFr
Lgnzg5PhfPko1FIj6GJbhaWPvaHe1InimRa/d8lnXydTqvYfwQXbyuFKB0a3
2PLUuyge3WdBR93NyL9YyH5e2gxssKdGky+Dlntzd4UsvfOdeKGjAz91SMPm
omR+/bMWXTXr4K5sz4teR3B1ajJv+cRL+dqRJ3TOiupT4zinmzH3VZ2AWnk2
14ReRPyCTUBUFB2HD+f2q/bCrPMymBv+EFbRqfQwH8MFNjuFSXUBb4akYe76
y4iMnSqOn9uHN21yPD8gDT8uSp/H+QwGvWxC4CofXn0+gfqlCVz/ayK37TRm
xqT1OBIczFaNHO7sEMna7aTMvjZsyTsJu7Y4rhuURPeYeehinCV0szJoWntD
0sOzFQsO7UGL+VhmyB/A/jMqsBjUXWxUU4aCUSeU2YfSuXggN5x1l6C6mIou
OiLnhg//C78kWkp/isCbE3jHvAdXyeZQ4eU4WNzO5ZU6fwyX2Qndh6H83d9A
6tu5Ymm7OssaMli9RpMb3hSzbJkZxyzvRt+STcgoUeRFjKTV8A4cpbDc89bR
SnH1rr/4d8GN1zv6cHBhFld6+nOy3lmseVJII5+x+BFhglNPxvLcsnYx8Epf
0WNVKutuaPHQWnnezuxDpSkBLIMaZp15BCjIULPVg7ndpuLwcQt8+3cIA+PV
JeMXBsHtbzTLjJ7B+Jo+yuspLra/wnzzRCZqxeDOn0vYF2mLZokhf0s9yniu
CqevDmFaoz2jXl0XL6X7PfWzP+f07UjDOZa0GB3MvcoldMv+CL2Kaeg95Ana
DPTYftWM28+M5OxlvamaqUH1Im9+fpjNkY56PG3/C9etjZCyaSLduy0WV6Rz
PWHteZhNkghn+xRRYZ3N5ucJvHc6Vjj19qHLwVZ8TdsPpUf3kGH+EocNT0A/
aQwrbAeLyTufo26wPlUmbpXkpZvS1fEMLu8sgGHXdcLv+XppzqbwnHk8Lu+S
cM7JzSgxzWB24iXsv75Xovq1Nxcu6c3VvUK4bpQB96wO4I8SDxY1q/Gppje7
rdJlva6scJI60ZRn3uKIhQkndbqK4yaNiLr5S7Jb/z1OqkZz+94i6ljr48u8
dL6f0JV5BXYcP/yA6HZoA4RNAOuUDDj4piMvX36CE8HZlDVQxvYDPXlCxpLy
e95ipfx26cx+wNcp3TE/Mp6fHmrggVMOvyvtRo+eTmwTylw+KYypy5aJ2T9K
ENtSgnmTgjlduSvjuk5H2I9CyjYp0un6LizUmcgBq0ZyW70O+s1PZMn+6dgd
Fcotbz25ap8nszqX4dVka07fQF6/J1h1IYdeymMZtGk7Wi6A6gYSWHc3YcWu
V3gQEs7VAboMHnECO+7FScZV+nN8wWacKx7PY9lj2SA/FW2ugzim721xeUwE
ol98RkiqIf/WL8Bvow7wUupLDrgktg3oCJdGC+o7zsHBxGQO/9QDrxtPiIBV
axAS+xOKv/Phe1aWFxcEcsNvUy4y+gvv8k6clZDFgA6qrKqScKPRTTyxlkHj
E38q1SzBzAcuLHp3RGI3KYWPKw1Y9F83Ppn6Xcx648Wr5Wm0W98D+efUEX56
DA/H2PBTzSTw1AVYnn6FTXYyNK7vKTaZ/cCWi6HCRGMAZz+M5xSHQE4rT+A6
HVmc32HOqcYDuK+lCcXrY3Dd6Rhs40vgElyNiq5BNLK8Dkmlqei9Pojtflsw
fsIaSLxlKWnQw6Pys9j+1YU31UbQ4+5e6M58iqvLh3DnuY5sKZmH6demYu+a
OdCySmBqP/DZ6F1S3i7gfm8Zfg57g+OzorilWI9fimdhu9M0BF5eC/OAU8j1
9+ZNy0z8lW+A1sqt8FGJ4ZoQMy4eVMRr95XYojUDEToFuDtNHYcbStmwIgZJ
HkMQfXI5GhsUaN89h5MeePPBwFJ++9Sbx8zsuG62Gl2qcrhxoCru9j+NH9HW
LBodR/MgOV6+egn6MbksXanOxMlK7DBFg2UrybH2Vpyi1CJM/g3gMZPRbB5f
SH89P8qdnIAFB5LJ5bdE22FremTE8XHgKri8PopkE3XJS++B/DOiHFatBRw3
TQ/eA48KmVMDMOPqe/gPGoPJpzbCuW4YPys9RXlmKYc1t4iNttLv+zCc3TcV
ccwjQU850r2rNsNT4lBbpSy23p7I2isuuLOnWrI85DLO9MpiVCdtXszV8tQK
+C06d7TDDAs5ybDFPxBfaMbnWXksTIpmVLkptTNkJMdMT8HqWSoSLQzpMe4T
Htv04/eyCuj0saHW0zOQrR/Pjvbg4tMLsbFqkbCPT+HY+7cxKyFY5Dyvw9ZH
x4XVsEXo2+E8Lr2aJ9ZHesFGOxrbCgTdnfR4c99R/P1wEk53fbhoy2jONh3K
mpoZuL6qmK5bbOineEwiUzkXH050xR+Ft6iaOIr//51oXsF5PL8zig/2/RL2
S/vzRpihyNF+gdiY1UI24YVIma+CqEg/RneeA6sfynSviWcf9QAGdW8QpwNc
+Fffkp8CD3paK+dwvYu0aYbr8vyWcaJ/qxzfjh3NmfOK2VwdjWWnD6N0hOBl
78GcdbKTCPJ/Bc6Jor1DNIzLC1F/xIPFlzIY9GE1dpx1458NY/imVyxG/gzj
mqx0Pmchvzy2pZPPLcz9L49V17Zjar/reL1DTkQpdOSfJcZoX7BBUjb7pHD3
d+bwczUICH4ibDsZC8dCeRGsd0zYX1UXYfc7UWnHLAS/V4Z74nf82QXGhurz
Y3kpd3cr5L6+b5GuGM6QqHjWXPoqptlOpPfRAl5tSedKdxf2uK3FafZK/H5Z
gdId4oph+kyKAsSiuVgsXdu+5vF41/QORnPHQaJrRvUOTRhQ/Q2yBvb4vs6X
m/qbMk38hGWRPhd3k85yrQnbTTXE/ElVUJ3QJMIfrYTFgCOY7PtbnO7ZD888
TkHzigPGLypiV21vLpI6Z7xiOk61G/BUdQa+HZbjtg7qHGOvxmGn03ltpgwj
rC6gywEtXr0QBPmxFyFR1Off1A58tqeQry8vRfC0I5iqcgznY+fDOqNOvI34
Kc6ee4Tp1yfQ8pAqraZkQvaaDa2na0C7Job99cLpf80AFqEvxEVFsJupMnTl
pX7/PoUNXSykLDMZWxyvSEo9PHn1cyod1k9HXlEey/q4cMj8juxl25s7G7eh
JGW3MJvpwn/jbThlyBdheKUanw0+IuD2JsT8NKF5rT4b4uy5du9eMeuFNz0f
b8KTs9NxqdQUcp5m3JYUL75tFvw39CCOOGsyLWEOGh0OIvKJGu+lKuH1qy2Q
O1aDVee1aKdhhgnSvnv4xZV9Qy5LDjb3ouyZ61ie4owds0aKj7ty+cn3KzKV
XZGp7Qillyb8VvwaZq3zMT7gBbaNCuQSzSvQuFuDhDkHMXtIX/6e3pntq7Ip
8egqhp6Vx4AOx3Bx/Ri22q+SKA6Mwahu16XzKSeGWXXjuVkVkoYOp8Tlf/Es
fDqQN9erc2F0BjccTYTjSUUWls1GoeQHaj3r8a/7JVRHvJE4FQ1j5Ro71k1J
o7qXMs3lviBofgKH/BjDI0f9OGndbuyqy6K7UiwrHjsy/5QqJWGz0V9PAxvt
pBlfkM6G6Ucko6eFki396bx+MHZsl+e3C0ewp1SGMfttcePfNwy/pc+6xRn0
MfIWC317MuG1I/xyXdnq4cKj10241vU+pr9oF5nji7lWOi9HvB7g+Gp11n9M
4/g3dvxiJM/aD2qia0cvVl78gpap1WL5kmaE3AxmfMNC1E02Yt9PHZj1YrNQ
TXuGyZ1noGdxZ9o651FGaTgPxtuzNWOyWKpkzSE25vj76QvshynQyFSGjaU3
4XYrmeW7/ohHL2djSVdb/jn9HascdmKLlw039pmJE0FRHPeoHpYmT5DZfQjn
TyVOOOQxcmAlWi9X4qrMBvjVVknKK1ZKTo21Y73cA/EmQZo19wZTc8gLHFlm
xS3dwvizR5KwGJ/N+96B3PNQkUb7/8IncAVMXmgxdqQuv2Vo0HZxAg3UWkVz
22DqbSnhmP36eBHzGRnz/XnGxI7By+eKgr5zxa6NCQy2dWDM8JH8HprAO/f0
MWppd57+N0Zc8ujLm1f9WDX6I14Y9MTylSeFX/w+WKWOoUZENn01nNi/63lR
J+vGvU2dOa3ZnXGqebQ/tQxvrPpz9KIISlxKuWFqL3gqDeELi9GMT0+g/Nsw
0aFNcMWZZBTM0+D2Lrdw8pq22PfHipLLzXCcdw/2cW/Q0TeFqcZz8awmnE59
PJh99x7ufR3C0P3q4uXIcB6Mi2VRcShzf5WIYouLEhfHXM7KO4xFY3y5TPsU
Gmz8aFLny7tNSpyrHsmCJ5q0Ke7BE4P7S91iKh4PsmCE7yjW3Zaey7W5PPHl
G7rdt8KK60ch11ZA57KlsN7qId5uTeStWjs6jT2OiVPWwzqoM+vWv0aDnzuP
dfVnxW8D3utpAv/tqTC/FErb9V2pLluFsjZlFk5Kh1PfTOYPKWD7xGi2p02C
wlBy9YhXcJx5C4/HeTPyoAf1ToXx86tYJF+cLy72kOWL5r3w/z2RD53PixqX
G7iU8hs9Tb0567cqX67zQpxzEMM3y9OroS9lr2zBPFpLnbcvU7T8+acmitMU
R3CW0QW4XO/CkGwb7jcN5bvq48L24RnxIzObN9pTsDPmB+r/m8ALPRR5u9aM
5g2fxCVzLcYpCKGbFMYUcy2xckIeVdU+Y/Hmefh5NZMzNybxwucGyUJ3ZQ5c
nMlJfUiMeQH9UZBU/Ajh2Xu78KV0raShrEzMmleCfyenoCHNk98q1fkiRgdl
KVNRO/E4CoLVcWzsEoyu68boulGcO7katjnelM8M4bv/FHj0hw8VNSby1o4J
npMH2fLjl+swdH6Pve+yRZ7MfvzpYci6zTMw0/Yibs+pg+6mD5CfU8SenoJP
HPxpFOTA6YfVUbhAH53vDqLVhpPu2zprYlNeDJfuHo3ot8k8kNePpZOnYe8m
N97bVMIJ7h9wwDaL1zRLKLexBuHjZ0v+BPswvl8bFP8Jan32oORoPkzVfotd
Bwew1Em61+Mm0ndfAd2ljmTmncVOthLuMP4tFrVa8dCMb7jxvAhpqVb8ZJjC
foPzqT7FWljezsEZ1Xze2ZjJJzM6IkOxD381zMHsM+UwlHmAfyObscu3EZqB
LzFjrmCtuS2LdsVyc24OJ9/fKM50y4XDm+UY+2Wo1NWuIGnDXc/gkdY4W9mC
8i9deGtOOP89GgH7YyOR+c4bjTGOzJ6vwIbg1bg+QI+ckcPG+fNx42kh9fqu
RJ+Vlnz4yoZ49AXXh6/B+a4mXPJjFArXjRRudc9EifdUJLX4cJWvLENsh/DH
5vPIqZHA70Y2s/xGYPjPjjjZttfTvNM8oXUgjeLHLUQ7d6SSZS20tVokF24G
Yftfb5raeNPd6Cq2LFmIhs9NImuyEkaM/oYFA7x5+l1fuPWO5cjMDTjc6bJY
4duJMvV3RHpLoejSrVQ8KCql4a+1bh8vTEWFRA32svbik1wWB5eMR93QJvip
+HHOX0P0elrEyOkyDGotx7CxltDqqYitkZ8QFaHp4ZTjxg0RP4SlihtrZ8jh
jU85umvFMnuuI41/bRAvpvtw6+tJ0LrbgcpLFgpljWeYUH0dnwxH4f6ry5h2
Tg1PHiczQs+dZrqKPCXNVO/CABa9ykX86MeIizIT8w9056TzxpR9Noo9rzzH
v4pPaD5xSVyVcWdSirT7fxgw5uRopFqSMtMXw6XtN0ZXm3L7eRWWL41k0vN6
DF77FQNFALsmRyAx66dHtVwhz+TsFPKd/4mtP4z4o8dxsbi5A2STOjHCoRI/
XTK5c6PgNinj9G4dSMULNow8bIfcdFXaR3birRkDuGvwEskz13/4fCSPsplO
yFczRWvAS+w578Adw1oxJ7FKPOnrzA0yO7Dx6kVsr87jDwcN7jr/XEzW/4tf
zz5Co6+ZUCq8i87RBgiNzuLk4OF8ZTiQ3ZLvIihNU/R4WcINhwexLUSaf6X3
sWpzfx72NsO4Djo89Jz81ajCMDsHvvzgw5BDoNsjGa5f1p8qI1ZieYU/skpT
eHh6Kfd2kmfg1jF0f/YIfsrz0dXyMdQH5fPrHw1OqMjhotOgUnMQle5o06z1
ghiHvrg7bj6KE4KwZ/gO0Rifhz7dzfnO/QWqnpdy0/rfyPIIQ+jSfnSU+voB
LyV++PcaXq+z+MGuCv81DWHIlA9C36cNUwd6My32KNoa5+H8a4nITcnn9vf5
dNq/BMZrW7EkI03SpetDiVncclGxPpA3HgTjivJenI4IpLZmEoetL2R3s64M
bziDc3kyXBnvxeiMPBR2s2WlkxenPdel9744Xpwfzu3K8yAJ/I61z3qh6sBB
5B+M5liV/ojaeA6DPHtw8+AmdEjrSOeTu2Bv7Mnrf61xoPCiWC7rwNt/utF8
Tg/6GCeyfI4/Z0/vgwuXpooOISriUu/BPKidzxop22wNbMeeoTrUtz4p6XQ+
kq/XfcX4qWbc9MIKQ61zOU9rHM8tmY45NUY81V6PZ3eWi4vt9iwcqkuLc4lC
vjKDh/blU+lJEZ/WJWHc4TkId72DLxEaDP912LPTRE+e2hvOq4nnUDDgNGLe
RcB041nxQEOBB/3HcLyyH7HOkjWDV+NFN+lciA7QUl6KTP/zGHcuieK9DDt9
2IE3Gi5cciCKLlKucf3eg3qHx3D4gTgeeWbGs26HxHj5fLFnam+p0/yB25Qx
7JJ9EffebcP6bzrc87OEjR2bYLxhiwhYoide9B7CoaqlbN71BP3/FQExixGw
34vnj5hgp1IgQ9JtueP+TRy3+oNpDEJAtj7PLjmIgnwHWh1SZ8Wzz8hVacDr
04Hialo+lvXZBeP3nekvkaOC31jPGz/MuHudJrf02o/+qwrocuQI5h6N4Khb
Oqy6G87HnYyY7KLHuYcKeeqICoev6SU9g9XY+eELdM3vY+PBPG5+Fs91Hdx4
7e0+LD74BKU6/ah/Io0fC2356Gk8VitlM/Xie3GxsDdnKQ/m+Yxz2NehDDUz
S/leO5n9vBW4u/N+LF67FvUdVGGwawHi3aVzWvsEZ3rfw8i/A2gQVEDjEGXW
WztydpMpxPlbUL66Fcs8eoq2FW+w0W0gZeVvwcomEenBaxFtBlrOzGZ9qhrD
h8/CjKOVOLLJhxqjDqOH1HGGyW8Vp/ppsGZ8EFUv96briNMo94pi+H/9+WbY
Aih+6gzbeWM4XfEFvCab882IiZhaaUMr6XVmQ9S4pPGc8FSswRCpKwSyiG0D
zqGwNYh6eZ3h/u0lTka6c0vAZnFRsyPtlrlw/d3PokpbAXut+7PHQDU+vmXI
Se/SMeLkeE6J7UTP0CmwlAnynByagrTG4zD3UuPPDQbc/mcRBteG0X+wDuWK
C6H9LoSHlOVo/SKJGvn3PfR+npVgJOiyKIELF5Rh8jAjqF9w4WKDkRhxoyPD
tvxEyiI/JlQZScwNvGlcf1h86JPM37n74Fiby263tsOx7TgsSvcgIHQsF13P
4UvzjnRVUuDKVRKuPjGYbfN7MKQpkCYaJVSsicIyKdu0fNoDh2H5uPJ7GXoo
PxcfirtwqM4lHHtqxJutfdhd2i87+2fSMUOPxXra6BN5C3188/nhqDarXJvx
bo8zT6htxcyGZJEY4M4cRynPttZDpddO0fNVkET2uIT5Whkc0RbKc+MD2Drn
BsoUJuHbVV/RYWciO0x2RsSdIJ5teCbGNR0RZ3+5cdBJDb7blszDvU+J0zNd
uWJpIK+sX4HcOQ1wm2iH/ROS+NVai4PMzwhT2QF0bkvmIAMzxugm8PrFOaj+
3CwGlCUiarSK9L0U8EeVEX8PHy3lyWKOtU7EY6kbRmRVeBwuTKWO1ENvnd6A
QRozJIbVxty2tL+UCTty9aw7ON5zPpQbh3Hlwc9o/JHEZcef4bKD9P2dS0Je
cbVIcC/k32MZ7No9GCWPc+lUfxwO/e7j3vc+nHV1LbLXKjIx/Bbir29GwpDO
MN/QgpPeQ7nCdgTuP4wQj6U5XvFlHnwKM7GwiwN8zOokyoeHiMyenenuWcpv
s4dy8+eeKPmnRe/Fetg3JpeHAs04K7dayDYP5u/zo1k4NRcb5UNp9+UfNGZP
gkZtIl98UqFrFBn/yp4LTtohdvFCNN7QYb3pD4yOMuC/F1Viyi896lauxq5M
A04a68d29ffwqozggPgi+qRshfFBeW5vSaP5NXva3dmCxcuCqLzFi9/u92LH
j+fQ89BdDI9vRfJ1TXio9xQN+TPxEBlUU7qGhNXrkNozVuiUJzG3PZ1H/fSF
RHMC723rxM5+Bfx8rQVKdn70N+vOFPcJ1OqmwrZ3Lvy09aEYEftIUj4/mmfa
ZPi8uwqHvByF6BcPcNvlH1YMi+I1l0bMfndNcvzvIP65eRH1BTtw9rwddf9r
hKLJQ2HT4sbXKubcvq07D6Tl0UMmiI+tycZl01A2pg5XPvbnx39D2auyI8rt
fLFQqydetGshzy2XrjfcuWZiP7bE6FJtnjYTKuNoc22F1C1nwV0P7Hh3ifB5
K+G7dYOYVdyb14Md6ZqhRXf/eZJr9Y+R0quEmPYbEeXR9EvM4snNr1ExfSsa
TrgxUjovtWW9KFO3VZJ81BllUYIVmq+Av0rcf8cS5uWKnDxRi5n1FsLEph4j
tt9FHW9hRVwEYrZF8nfoYKbOv42yl0UiXCuPPv+s8VOulAkL4kVE2Dg67jXn
32H2PFq/Woy10KaUjPDEJAC71ZN5ap0L17jKUtHQi8UHJtLRcSuKf7mzreQS
xm4iLswJgeNyWRzPlhWyy3W4/YYelyi1Yd51Taq8mgTjE0VsOrwCCl890f/1
DqSf9+WR2S6MMtOi2hxnvg62p23MAO5Z1Ipph0254Ok3ye3j83C/1BZdYn6J
Od/1eHlbAN8Mt2SFVQVKKt9iVX02szX7slm1mD3cRnNUrg0HtBXy255q5OlI
+HzOYnzdGsK1/pUIcJ4F9TcW3P9xOZY+kbqOhjNfDSJ7nPZgUqUCL2VVoE3v
E9ZYXkaUUySytg3Ch4n1QrVvEU8UdfBkVirP5F9A5/2kvYcBd+z+Dl8uQUcD
MC0hnq8uBnDLt2z2GTkdy/RHc7vlJfShAWdJ16s4Q4MF1+7i/qV4vMvNoL6+
Kg07FCFTfiTjIvIY2lV6fseeRk58L15d1C7iPgXy4uYiGLbb0tmqL4/eSOak
/CT0q7oD9zhttlj7Eo1nYGwzWfKjcjiPaRYwpU6Ds0824352E07NH89pR7SY
NOUWzN3lOO+sN9f9S+KesyZ0nR3FwSv6INIzlLc8VVhvkc1bymmsSjdgD5lK
WE14jsYnwfyrZIXWBYIas4K53N6Azvrm1FEYialWQ1m0sQ8GvTFDxos43lMa
z2WuAzmn/TUeJvmz8T8NVnTP5D2PBeJ+rD43HFPlhQYjdD5Si5LeoZ75hw15
aK8aa88awk2xg9jZWCxuLNPkr/rTiO0RS/MHtlSJGIr1hsq8/fETruoO5cUW
CdP1ejLmywaU7XoufsW/F9vbXZHhaMIhQ405qkyXOh+18Cp1oegw1gvztp9D
2R0HOvyLQVvn8Rw5LQ/F2pcwpaMrDZ+P4b1eH5H7J4UnXT+iZZIq154OY+EY
b8bNSWHesDyMXiXvuVPbi44vc3j1Q0+YbS8T6TEDOfzsEiG3ebMkIkORiunf
8GfAM+g+VuEpfMS3hZdxtHEJ8rtGsXlWPSbfief7n9HSftsiMrT+E3tOqXHX
m0PwUjWA4bYh3DvTGO3afTnuynzIeC2B3l05NqcWC4dWWUyVXYeBWxVosSgK
70KM8SQtlHf/LccOOXWqL0tk9M5Ysb/Xc4n3Fkd0WRnPp87j6PdrH9D+R+TI
d2RNQgSX/6rCqycFfDF/LXwHqDHz61/cCqzAxh/GVH2Yxh2denNDuDE9Lq+C
/3sXtj0K4a8nq5AXFED5ZQr0yduODXGFvPNkjdj9+zb81xQx4ok1FXodR/Kx
bXj0TJfHNvjivy/JvBc5FW2lVnCu7MBH7TWSgI6OnB40E2vFOZF0WcrhY13o
4NIqvcaTxy9Z0sH5Mmo2foX9rSYMedOHTvO/QP16MIf4+LC8hws3T1iEMimf
iFEN6GmyQ/JsTaB4a7hCLJmfySbHaIaayIq3H8fy2SIZhqgMZ3X2HXxMHkvf
4DWiU+UCLJFpxrcBfZk4QINlXTqL+oleVB9agq+xceze0ADvzNUo147jxMek
zRxzfC4x5ossN3jFWXPrygvYPdedr/R2wqtKC4/mm8HSv4D1oy9DLyabT+M0
ecrDSzy9Ox/Xso09jXLlsavViwY/irg51I3lXYYyZ+cAHivrzTNWQWh++QfL
r8mzV4kOnUI6Mbw2kFM1TajboMIZbYvRdC6YWyMXoNlrv+TNq74Ilk+V5vxd
aP114o36UVx+NZLBusPpMW4PRjnnMSc6EePOL8EjW3mqWaTzmHwX9rqgioit
r5AVU4i80CzOs1iITsk3JGpjXsPy+HIsu/4U1/Aa77bZcf93TUQveyKOPn8F
89vT0fNBM2qXroPzPVeps632iPAZyvcGW0XePSWWJ9hjq38xD7WuwJ/tT8XG
wSXcM7gvZ28ZzhUyDtCbPprrm3Lwc+U69PipQkn5R7Gwk5Kk587T4vjHbly6
aBty5PvxX5LUw14/EgY19xFi9UPyLKkSlqP6M2RYKo5fuy2+5fuL30t8+aDg
M9JWTaCLoRNH/ZqKsO3KVFZMZmrfawhbMAl3jveisXcsc90WIqCwXhLg2pcn
n6Ux31qbp+x9eOZ9u2TT9bXo36c39AxD6fZ4i6fK83TxRO0AtKcP58q1Gly5
qwqtoSdgMd4ZqpbZ3KERTG+D83hydqpw7mVE2d/HofpCh8Ojb2LC/o/w6DgF
JwJ6MctwuQh76Iu+81ejTFOaZd+OwPqzJ+9Pvy/8Z+pxf8x0/HB4gfnloSyp
eCC8CyuhPOorVt74jMH3LDjz3Timy+uKc8xglKccRx8L4dXwtRJX6rIiWhrn
fT5isHJvRq/+jlohy4QwXf6Y4IrAXUqMnHoInxz1pGsMYpDXK8T+XonetiHc
8tCQfrt+4Za7K8tKvkkqOyYwt7ATsnUUeKOHH5tnLMD6+Im88PSX6HF/guh3
2BxedvaUC9dklkkUtk5Ip/moIh5dnMThBesRYdiBxXld0C3VjPeS/cTbye4c
3GcNtmUuxp7J6gzeNJ7vXFJo+OKPuHD2i7hvfQTvem/zlLw8ib1v9NlpYRRV
XCI4cK4t7b5VI752KEY3F7KLwhSs/OLK2Wd687aehI7fpZYUqMfQLbViZ/8Q
8cQtkucftWGq7W0MPiXLbP2uDO+VxAvbn+Oljx3Ldwxh0+dS7g6+grM2AWya
ORmZFUUszdISZm794DvQADbe3nSK/or5Sy7jgNF43tI5hNBbF8SCVXFMfuaO
tL03RCczGc4dPRl++ipQCR4nljim0GZxHmIqHFhrcBI23Y0kt+2mIv5Mf/w7
clVy/osjbxw4hCiTbrRYaMRZGW5MSJWuqSaa4xqXYpTSbni5FeLzfz1o1P4H
Cz0DEORvyZ1l/bBcP5qBDxaIsufW2GDch3M3JDB6ryWren+Cz+fR6L2gSdww
VuCdOdnUzxnF/WN7MrBjCE+vGIxLQQ60D1Lhz1Yb9jMvZHFWM/plODD9hyfC
hyzGrj/qNLYs5bXjq5HZuQ0t32WprBOG+60lfJ8qQYntcB4P7wNwHMtGe4l1
Sbq8tylZfF++AufPqfLr/k1Ie/lOjAl4iKqybiwxeIPG5N+oaBjApFx7+m/v
wuMmo7jELoqD9HLZNvSS+GAxlo2jBuHE96cY0NFdJO/tzJ1ZG9C5pgT3U+bA
6bwKh9b2g0mzCX+qFuHOpAyOLB3P9th2ZBtdgUt+IO1Vr8FJ+tnb3GFwfzwV
iU81OF4ul+nmWczN0GHCljPI9I3DK6fVSIldj0KnMpzTk2Xt8JtwU90One2J
fHw/jz8d01AXfBcGy2vxbWMdZP/NwsCmvWjfporWTWfgJWXPOxkd6b32p+ha
FcrQZhnIK61DllIwPprG4P2DHG7OncjvjU6c0yUUkwqt+Kzah4nVvlIG7k4j
KysW6GqjAXm0V5Pwmfw4DnX/Cj2tOxiePJBNr8byWI0Wsz08WDr7JVwWD2OA
qxIDldL4tL6zEK8fIdDyIdQ8LLGtbCK3juxI2btGGDY3ig7xZmx/8lnSTSGH
GVO7UX/2atF4XQ1HZxSx3/s61IV2p9mWKM7QC+LM22qs8/8iMlsLGG29Abd3
pvGAoivvXNLnVrXXQEkH1gTV4MHyTTAPz/JUawjjErNKHH4dRNXXF1EwcrXw
q2sTn0fqMeCdIjeX6uHDq/fC2/SfZH3mf2LoWn30tx3F6Ec+VHTKZ93s/gyu
6sh3ozy45MwrDDs3H9phAXTtJ+W5dwdQMMeYTVZD4dzkgYyMZ3C4oEqTowN4
r78K3/bYAw4qhlm9MQ3NVfjcaAaCjkrE41Y/DLrwAxPCfuL9u9MwTXVl4KDe
7GIxmJ6f+knW5yew47kY+vbK4NZjpvRMjGXTlzA4STvQVOOHONzuweqDKXhW
3IbzwR8Qc7CIaukroKqnx+LEEMjudeXq156sWrsVHf8cgP/6JG69V8BdexxZ
OViFezSH0cd4kvhbVMTcM29xUMhibeRzLKAZtaflMP/tBqy+YckxQ5pEdLfu
3L7Rm+e7+EvxupT3TryVLFqhjrdDBFe8/IqoXt3wRM+SDAB/dDFhqNZTsbXZ
gfI6gzjzmQ5bVpSL/Rd0EPT4HJIql0LGNx+fT99GQIddWKr+EPFW7dDrOB17
Zn3CjJg32PbfPow+o05rt/68bXNEkqS2DEVL1mHrsWniYVQ3af7/Ec/ip6F0
oR5bru/Cw+gW9O0LlqU0wr3/b8hEFYqxG/L44JEHbr/Z5nlbpwvqh+5HymFP
dJRmwaHnE+m8sCc/dVKhuesDMaZFsF9ebz682ZdXB79FUssMkeQZiH3Fepzx
wR2vJzfB+sB4/ttZzGM3hqPHTVf+jrKhgo8iOyUrszlwMkZO0+b+7UVQ2/Uc
Y0fIeMrNuy7q1HRpXDaauU+iETRgBxamaUjdpzv22RTy7/SnWN71G3SGfQAO
XBOnWw6IfkfVaDpSTjLaZQKPOW2C16c06mlqcJDzQBb6JLLXYTM+t7GH2V9/
Rs76geyC/gxqHsRNx/3onPIa5R7fULrrEbKqC3nq+FK8kd0Jxpfwen0Qk+db
0v/EJAQe2Yma3xM53lAFv6eAWfP6sOVLqGTWxT40fP8eayXxfH0gngoKF6G7
YI4YEePH/xzXiAHSXFHrZIPuSZ+x23oN5It24/K47pQ/lMD1/Rxx6EcOXWds
QJHaeGo7lmLPf3q0HBUP+cwUzlDoyKU1yhjRvAVKKxYgelYAVF6aUG75LDQv
k3rcrwqs3PwXNS9K6JxRSPmICnjNy8WZ9Nt4rtWO08ag3YjuDLs+EWaV/2Ak
sWTxwROeij5BvNR/CP+L86V78jas6TWGk69twd/2MZzrMRv1yZnUeNONnaZL
mDKrv4jPuIOyP32YOF7aA1O6c7/TCFZYKzPS5SlWpbhQbrQSt9yNRs4QVaZM
3i8kCaosifkqLp5qwFGFClE3sRybxiVwcWU2dmzNZNFmR95+LOWXXr8wtPdI
fMlOYYgkjPEforkvvTfO9OkMzkhiXL8IGsT+Q8uwN6LLfqlrVrvx1F5DRn1S
5AWTHuwxIAYB+6pgap8J1EyQstInfDE9L3lv0hMGLrtxs8QIeR//E48qV2NQ
5CS0GSrxs/oUdIl0p3enkaLHVEE72Uy6eiohoUQd+e3DuKzQkUMyk1ijmE5d
Dx1OOH0eh6tfw/xnP16cuxjHDl+E9X/OVI0N5o/vtZKk+u9QO3RUsi31Ex77
GHGlYwcaHAN79ezOiEAJVSMT6fgrifJ+VViuaIn259JnDGvF+y5VePDsJp5O
UeNQVUX2UR1PhdOHRM/N5rwRaYX903zheTqHvjH98C3/KowfbYZ9oRfHLsvj
f3pPhVzvFObeSWFr3mfsGBPFau3nkKQPprfxXrxpzeXN5HD6H54Ck/ur8aZa
kWP922Hhm4OXM/2pfuEvkgcuxpMRM+ExdjH++hXywNYSDl1jwFcjXOD6JoLZ
i/pIhH0CL3Z2RnyBDb92tWN0vBwNtCfhVlsc/wZZYMi6VuGwoieDz+nR84Q/
XmuUiCqlO1jq4U95bwd82pXKboMSuNzLlmG5E0XPdz249oUVVdf54N68KNpX
ptFocwVilozg9YglUNTM4Wz1KM6yuwnJzR7cHTRPDA86Ip4uzuGvxEW4q1wp
1ssMx/0Jubx9ajjbiraKVB9dTHxhjduN0lw5dBNJtRKuLB8s9eF5WNWeDv3J
6VTPewSNmTG8ojiAazrsEDN6VUr7XYGHHHdCYtSVCqGa1HcN5/cQZbb4AbN/
gmHbmqWzmsxW9XpEPq0Wlm+l53ujDg/kyUCtu5748sAWz2r6YdaJ91izaiJ/
6sbw2AITLj+bQs0jMpSL9RQ+z++g9M46rPuaxsLJvmKfNAtGxAzlhrwDyH6y
GtEfijD05R68MZKyuOZz/NwfTs3fsvS3euox86QF/5a8RX5VOG99+YeRO3ai
v/Q8ZK+9K7jUEU5PZ+OgtSUfxU4T623WQ3V1N3RYpc5v1/05bH4jCmKHsnJB
KL1VbXktLY4uVzzgfypFNIe3i35zTan0twjvLJMZqN+IB5fVueqDDAvSTfgn
cjMo8eXsB4bC77YXH9fsgvyl3TizaQVKw95gshgkxi2S597RZtw6fSS1O0Zg
Zde3CB5uQsPxN5Df1pnbNofz9uel6PtAlTWm1kh7X4Y89SRaLuvOjA5qTLhf
LO7YhfH2cH16jpPnyMax3Oc5mktqajHtrRefN9uwT6EDl3gO47a8UFb59kAF
Evj+gLTDJx8V3rnT8KJ8H2RS0ulVE8Zul14g4V+e0DGM5SHlWI5pLabLWm8k
rYuimWqAMFFJZLKjFw7mD6SC8Qc4NvTg0GJ9bl7XhROG2HFB8XSU6XSGaWIa
HeaEMrLzbPROyuarKRYMOdGXxrlT0OQ/D4NuynHTP0eUWocyYvIIGJqtAuao
oUUzmnfLRnLHhrPYW29HjydvkNF/qLtTyhlYu64RkpynOL7bkX8/5rFypiV7
WPlwd8gGpJf5Uvv7eD7p/xOOfU2YVZPHwLBkVoaeFZOXj+No6VZ4f+rHW+N8
4Px9IRYccaa6pCN37bdk2BBg7wpTJmtKOOqVhbjQhZS3VUXQjceYmdKBW7+l
sHrbBmRdSeBpnRNwSestjC915PnB2rQ98RAnf8jTvMTZs/+Rn7j3UIUTf97G
k9HZVHvuLtYPeywmGgfx6puPuFipzfZuxuhX5YwDJ/fhv9PqyPbJ5ICRclxy
twfj5g6mrJmGUIjdDe/Fl1EyLoNfl0fya+he9L8VwfYMC1p6a1D9mx97nh1E
5xXpYsWowSIj0VWUffDHJ9kL4saaU/DTncBD7qvQ8tME7rt7UL3rKWw8cxVd
E2L4d/kvmCnPRpPGXMRombC1dTZmHYplusM18TijCx8qh/J+qJSfmqwY5tBD
XCzz5rqcFRJTx4sweVEJh5TusKjujmVdViFQVeDw+eEcGNeGj6WLkLVmAdo+
eyDuch5s5U6Kxeo5vG2mzGEXRzPRjGzW0qVb6SRU/pG+c8kmPM2fKm79HYch
8d24d+AimBqn832RA48fMeLIqWnUP/4PVy0COcXombAqmYee52eI3ZezeWew
Ft2SZmLxuJmQrxnIHRbDEPUzgeXD1Gh7x4+mnVNoeyoCu2XcuPi/bYDKeEo2
5/JThQ27dHPmxCeZ3GTyEr232/D74NGMPPRGWCStwSeNEDY3SfM+ay60f3kw
9kwnSfnhWI7Lj6RmZTBWDalEZMQYjI+swwNpF+3sosBrP+pw6VAU5SUmTHCc
jRsvCmjYJYsGLZkY4jkDx9tlYZ26BRPnOSNfFyJLoYBW2xTR9keXdo9u4Exa
b9amPsK2zfpYqmrKfm5lSA3I4yh5R1pUduPaH1Mwuu8HfPjdKOImXfYM2ZlL
14c5fMl7eHSDGGukAKXdxVJurxGdQ55hocdKFF+S4blPn+G2yoa6fZaipcmA
Kj3c2VClR3Pb3pz0XIKqyZ7snbFUuPdIwrnj/VkvqcDuMaWsnfweoxJsmRVW
i4LgdA6qVmOGwnXMP9WbSe9r0e5qxatqqsy45chd8/tybYUXr68LRtRyB3b6
thTjT41gNw1P/m12R92/xWCTDtt2GDJsyWCMWvYUAY/DuXMvOLduEc72zcAw
2f3iR8EqaNlchcmhW1AxfS1O28ZwaUsXMeuKDbJdH0LnYBZ86tZ4lhSvQ8mb
vmj1egfHZAOmWBmws6u76DbxOFR0R2GqTzVeB73BWTdLdNbdKzo/NmW+RJbW
FiaMueTEoVUrsOhwJKNGe+DTjptCEmmB6nRfnvgTTLtMD667qsxJg+YL5Yny
7PN8nXCRsn9g40rJgAlKnB4k5ZeBCQyZsgOhU+RwYu8k/IyS47kdUte5Ek35
chNe3uFEPSsF/pQ6+76XasL6jQEbZ3kyqbAns7wakGqXzYWa2fzivlVsWt0Z
9XltUA9qE4ezzCkf2oyWqaGY1uLJMmdvbj/wFo0P3Hl9rg/tDJdhuEMzAlc7
4ZDRLZyut2HvhmyOSu/NN1W7xWnLbdCqvYC55S7cO/QhfgXXwnLqEbx/nMYL
p3OgERHP2phaVBw7ivTgFMo8Pw40jmHsrjzu+bcR2+8oomLWJ5G6voR+r2Tp
N/ER7D/Px+nrxfwWVo0NIe/w+kMtGqr/SY7JqSFR34BJYdY8oNGNZ1pcmf+7
kNdcJHyf9BX3XhvxmIwH6XVVuA9JY+WMibxX487KMhkav1Fgr6dZzNojj2NK
m6B0qB9PecYgu+dmcaL4D5Te9ma/zodQWDAN3++q4oGLGgt+W3Cx2wBsnyvL
w/VTETW9BDZpwbxUqEThuAHf5mVKOl0iksLH8MWas0L26hg0OTqhfN5I3lLt
h3mGCzHhfA79pG4a6zCO6irh8P3+Fts77MCC9dbcfbOYL+ye4rdSIH17mzAx
LYWeyg2o+nRFGJh05SFTZ6ociuCZaDN2dHAhxySLMM2O3Jn/FXVxzeg2qQKp
W/25zSqdN6qWQ258CtMfbkBsxDC+GLYKKYsSyOBcDmh+ixdOW9H18VTJ+YHB
XDUrmCnDbSn/PQC3fI+IbRbeGHPXjtNT/FjXko/aQZfgtzyI7oUrEVZ+TDh3
HU6zCe9woXMcx5ia8OYSH86PlzpEZidef7YeW87ECe21cvhW+wuftbtzz9BK
0cfKm7MHFVNh5SrMvBrE8d1KsCDqBd4Gj+WcjAK8a8xgx8MDOLI8n/MUTPHx
xxsYhIeJtEezMS68Iw0uZ9F123LI9zwHdyctBj6zoEnmCIa35/KKzzmJ/sY8
Wt5154Z3GRjy5hmEXxcmalzC+psjaRsdylOlo+jvVoSdCxT4aHgD5h75gGXz
/qHH21BPXNkI1V8p7G6vxU//5bD86g1sXOqEV70uSAr2KtP4yVh+vD8a5n3n
QdXJFU7ln8Q07T5s1G7BYZ/3WH16lniwSItJtfoI/fYQU87NxJAILe79e0Ny
x+Mggi70p+ZTZQbGmnLrwx+wy3bmbwMnxhzdiLYvmmwP3SsGrPSgasUI6g/5
KjQ2b4Xvy4+4Gdedhu6l9G3qy4FpfqKp62PYZF2D4qnPuKsbwj/Ol7E6I4IK
4f4MHxPLoeHRuO1ei/5280WxmyuN/Dpx78IKmO/tg+Xr4zh9zSchf8OUfTt1
YVS1Np/cacCa/YUsvWLDdJePorWiASp9VdgUY0aDr+n8oLQcM14XCf2MUtq+
cWFaUx9qeckLjVgbenTswl2bpXvn1oU9B9wRe/Juo1E3lAf/JFLF6ABu+yTx
q6XUNzfViC9IRMHfFoGwEUjMeY2VjeVQdjRj4umeIry7DS+tvoU7A90R+Okt
kvXTaDtPidY2V0WJ7UM0uuXz7WlP3h/3HJnHbPlFTtoHMV25ongsK/+58V/T
NxjaXYDctG68EXwBWwL248C7ahG3qDOVJ7ux98BO/M95s3B5Y8G4B8Ysarnv
2bM2GLf3DxLq9k34OeQJ5s7uwI2Wgg9nh3NW+GA2+AixZ4crJ16qgkqRB8P2
TODS2W6sWvAc9d0Wo3pOOC8c7IkXPy05pjKeqao7xJKv4MyZ6mj/7syLe1I5
so8RF6/dJmpvrsBLPTVukInHKN1lmJt+RSScf4UqxSC+9ayF8qBRPH13AlaV
WIklBR68MmE43p49gAp1O+n9b8B8Tyf6WZxA0OMiITrNxcnzGizVteLhQ104
3iiCKQcWYIDlbKyYWYjb1fq0lL+Iq0ng8awAqixyEJ7bj2H0X214mbxBUOfj
2PC5xjN7sC6bU0w5V6zH3hw5TtDVps7rFdj4eDi/chc2ng3g+qXKHDFGFyfW
b8ajpQns3GIjpl8bTZuvGtzqJMNIrUEosTDg3ldpnl0rSvkgUok7nE6JGWu3
4NyeXxBDlCgf5s7yGRZIjDVnrfsghBztxH3OpTTunsqdzcoM9cunp/EJOFlv
Fp5JXVH+1Yrm50YweNP/ODoPv57e94+3NCgK7VKSlDSU0XjfrxcVkvYuKZVo
iPaSkAjZEvIhe1b2XmWTVchIIXuXvf3e398/cB73uc91Xa/n836c8zgynN6e
iL6h1+HxbD7ed1XjsE0WLJ38HgMt89HLdBoavB9i17sq1MUksWq/Jd9pH0T3
lxlcza9CWzOSzkpu9HaRIHmCPlcEKzP3+XScpzr2NaSKMSY98C+rGSeSFBB9
N5afXCYyakcHfv8zjDPWerHSvRD7xgzi9udJOJ0aRrd/S4Xomo7qpiAO3/IY
N9blMtZ0EL172nBF9+sYXdaDRfZqbI2JFSHRSzFeNRLnJ/Wn9fclmFZ7Vng7
yvLFzHQGdUjmNu0E7loxGR7zunNvwxRUzurOp43eUh+dIowH6DLg9j68OPYP
lbsMuU6nVWTvr0T6/ksIatBms7gAuUd+PO1mzs8afTjw6wVEbDDl0oLTWFl3
D0HtA1n0toBvyhJxsz6Ek7s2Sy7ObkSonB0Xrw7AiqLL8PcuoFKaM1+0GaHx
QzQfyL4Qftuq8e1sGl6Z2PDtzyPImOHOtWt8aP88nlXtchwc6QTfKZl8/f4H
vAubJUeM/wnZ5eVQVT8jqlz/iJ2fsjl3rgJrtwzB7G3BTJjjwJMVXXjX2ogL
vsvx9FAvfv8QwF6LIpj40pmqywy49I46I/Ss+H3tCeFlasToHRF0UPmBrUdO
4PXJg+L+5kMwSs7gbVrzoaMqf/zbi1lXPfh68gxRmlosuf0UjH3tykrjaszS
7CydhaocrlmG7VFTeTzVArZf2lFgMpoR3w+K14sN2bh+nqRvy0Ho2KhSYcd2
aMY58r7kAkZFTmPaQC2e2G1Cky5rEdXZFUsKInnjnj+TTg5k2e27OPo2TrLr
5XgcGyH4dsM9cT2sBQdqWnFnQx0epziwoW8uc7YMZuwvI/xJicC3os0Y4rkI
8oNP4vDwaJqp+2FKqAfv98li4urtONZvHzbV38al0k3weRuHkzpy3PRek6um
b8AUk3rcWJvIAVct+fzdLozcZYUJZx8L7w3XRez9MXzuYQH56TMx5F8E7jQZ
Y83kJUJsjUP9lgn0nlrA/9S7sFy9P6seedBUdiDORJjxX4wTqwJH4PWUAD5z
uoqeH5wYpLoAHYYsx+x5cez2uCO/ZplwRaI1dU5Vif8MR8Jg8i0xsL8C9h6X
54OMUbwub8i8Ql0mrvCl6s3huF+XwHL7sagaWiJC36vx48E8LukRzptPZDhg
ywfkXM6HxihnVp2yFBO/abFs0WM8auxPNe8fkJftLBl/3I/1gwu40D4bQ9/0
x+WP9jh5aye6RdiweFkqu06RFZFRNZjVZQK1L7tCz2OiiHY248GtjSj/ksEu
a/Q4kn3o2m0+dEOO4vMKK8w6/Az7L4ax3stHvO0dxoU7FZkcHo0XkjD23K0E
o7Iv8EnrxjcnjJFRkodrBa7wGNeIFVfIea/NGe92Q6QPTWN79zI06LlizBJP
es6J5bP9Hox6th7ueX2o8ySCWV+jETgtjoG9F+LN4lCaJs6D0sKh1L9sz+o4
I7xqeuo8KGon+vytxIGvwdy04y/0vspD9dUYdv8UhO85FpSdFMqnsZW45l6L
nc9COCnuJz5m2tFl5lb0ds9mWRdd9shcLPTvkY9Tx7PxjT+jmgci89Ny5F87
iCHXevOSlIm7nxuEBtcxdDzqirV/xnPYY10a2JZjw8IBvJyUwr71HlzyvQkz
TVNpnHsXiVbvoJhejpq8QmTbWfD0bFVGBsWzdsVrXLDtyLa0SzhVdwEzLkmv
+XIK11fvcU7y0+WfNyP5IXs+NifcFTap5ZiJ8Sz4PR1zLt6GyZQKHG5Q58mO
YSJiiT4DIqzpMH8i//n9FZoFnbnSZSR///dHcnn0FPrtPoPvT0fxwu2T+HzD
Cw+UTomiuZqU9EnjThUfbprci/vbujEx8JywdPNnT8ti3OymAPv/ivG3vk2S
/CQSE3eMwMOgXnzdXCSJ6XlaPPWeDc/U95hkMJ7HguPo9XcIrhxy5oUAfRo8
0JBEu6jwUGE8Bk/phTrPI2iyGI8tZyez6rWAwsGPwvGPPOs3DuLF4QVi/4KO
7DSvFVbvQ8XGMXboW7gCSU5fxXFtHwTWZNOydxAG3xnKXwolsDgWxo8G60VK
i5q0Pk5h0KZ80fLoPObOv4D5x1WY/CyMjSV5wt59AlT0WrAnbAXaN77C653n
hLteZ45cnsXo2avhFXAM5lyABdO8UGEeyqXLG0Vv0/4cO+4HStbW4qfJIVQ+
GcFE875cdMicF7ZfwcrTguE3a4VSTiFMjJqx87+dGDEkkT/kgrHjtDeHmPdm
iso4qMSY8O+fPVAZ+hMD1X/jzXBFVpbvER8sFKjj4INHm+9gyK5sPvP+Isbe
U6ZfvRzG+MezRtWAEzTD6PpoCCtDezDvbAInGP6D78dAhN3ywfj+WSzMSMCN
2/5sNlwncmrTeWOa1MX/JKCjsh3nqHWmjzRLtMP/w4+ek9HSOJkDyw3w6ccq
PJaYsuD7MD45q8gL06zgMlCR/XwT6d5Ti491HDBBcwE2yw3COZN2vOjlzNTl
o/hMh3w+ehQV9VPY8HMFHjsr84i7LHPl8jns/kEx2/siLue+w8ITfdi9dy+O
NVDh8J2L8GvqdHhrbYbt7Dx+XvtYYvt4NurC9DgjKo2J1zuxaV0xOsbPdt7w
O4NzHo4VLkOKsH6xPqv7hNG0ZSo7hibDbXMFQuqVqTG6CN+PTEblKHsOT5vA
tbcU2PFvK1LUChFft1T83BhLv6E2tF+lz5z4rkxYc0H8qbLkhoKZktajXRl+
Q41FHZz5MmsTAurtxMh8GT4cshIT3j4Hl7tx8IUaFL1X4epNMuKz5UQ2nzWk
wYBgvtzTKFxP/EXIxAAOn/sVz+f04+AETfYt7sSf0plc9ViPshmLRFzBJNQ8
voulzSuweIUiYnN9+d3Sh58rluJ7QyQHuLShO1dDMXOh8HaTZUNDKZLHqkqc
SrTRk72Z9yiS30b7csXDG1jbksi8BevRK8KbIdF9UZUyjb9ulULhfAB8ijUY
WL0al9JDcbBOnUtuq+JXvTcTbDaLrt3U6Lf0OGS09DjXahBHy93B+oQoDp8x
gIGKJixLGY9i58s4/qI//xXulHy2ceOsK3rCzGAkdafJM35jMO71ksG6c5fE
hqAofp0YxNMOu6C0vwnnikIY1fMm0rd3wYAlU1k8JYKPV6pR0tyLt+54sOHU
VsnU4lQOTdGC3r9weo9K4zHF1SKuv4f48/WTKL0zlhYX/ah44DPydmTy/cxp
1O3mLK39zuz856RkcPg1HD5wGNlzE6lcsAiRg+rg18mNuo3BYmFmAh+n/0Sj
ZoPkucp6XL2jIKm690iU6Cjyl140y4Lr0Ho9nXXjRjDf/5Xk8yg9ofPFFB6d
DDlCaZaodP6AhatceT78NpzU5ZmR3BGKq4zZvH4Sd3/egSNaxny1fy3e3ffj
YfdFsNb3o1afOHb+GErVyhM4frgnB63LoVxtOKJUzLmlugj6ngFUXuxIdU1y
xpE0Rn34h/66YEPgFrGppTdxvitefdZHl4Yr4vfVJUjUzaPCSEeeOa/Csolv
hHdcAsqG9udT1yIcn/YV8jv6cVjCYygP9ue5r11oMLAjQ+xG8kVmNsc6+CLG
7A0cCifQ3vUoyvv7MPpJNjJhJsLjJqM0fhKN6hz4Ra4BXq2WPDnrLgbnjWD5
IFk27VDnNCdD5ndP5+sXhejdZsL3DGPVFksGm1ThaVwVNO+Npd82eRxcFMBz
sx9g7YCvuGWbw02vx1IpogPzBtvjy+B3KGp04JybG3GjtBev3VgBU2t7jGnS
F6kHvggFvyCx9WQ0NmRcwPMvJmzcPI3Dat/DX9maupaTueKWLQfZKDE5dTo6
zI6hQpk5qgxWwvD8VynLTuOYg2m89ns9Xh3z5VVlCY1eR/NIjA++KbxBYNNu
KJ1zo56zJg9Vz4CKdhFCQ6QeqmvMt1X7JK+Gr5SoP5khFA8Ecs8EIXzeD2B5
Z3XWmYcIh4WtwrS7Mx7F64o7LbZUtrfigroxqGs+jlHjKvD5rdQNRoP1gQpc
9bIFUSHeLI8bIsq/2jNl8j4s+6jBNdke/PtIkw6RWdx4tQvqPn2HYskG/Aw8
Kpqe5fGmrQVTxw1lcPVC1KzpwLqJq8Q0PsC6kwnQTI7nJClPbJmyDza6fdit
g4xI6/ERHeGCDV1d+bvqrPhVZkF5zUVQ0PnkvH37Wcnv0U0i1s6Jy6eT7zZF
cs5sA3btP4Bbb9ZgYeU+DJ06D15JvVHTaSITZ5VjVZUhzzjb0fuRDS8nGvFm
cUfJr1g5tlzJ4X4DL/7+UojyjkXCdUgU6r3MhPFqS25zcObcxkgWjnZyPqEl
h7+PLovA6GPoL+XCi0pDOOkRkbtrtMjdLPBhbTxkL8mj2+wz2PM9BzKuOQwb
6cB7G/RxuOYnaotLcG6rD83PLcGNTen8tkeWPSuXSWbyCqovPhUdFw9mrdTx
B3kpsK32DNyDnKmte1yYTW3Gm0wPyo1dh56lT3D1WGd8NXoI00lhIrm1BAqb
pXN2QQPG/e4F0yuD2KqwCB5HrdljmPR5tHVnRU8dPIx244TK0WJRjQ1jXlsz
eFo1euWlIVczCfFdj+FuXyfGaBgyQjmXy2TLcdpfn4Gxv5B07AyO+M3BmGMD
2fdGDw5MyeE46784eTKEGWV2CPttz6sz3mHB7Qm8XKDJqDmO7NUpC8e3R1FW
NVnyxagab3MOwXXmFKTKaDF9/xhuMNuNk5fS4PgwkfNHm3CzUwd8apjC+2es
2fhrExZN9OXJgGe4sFWeEy9bMvdNGbZod6SlfzhblUrweLM8V9mNR9YtCWUj
BE1nDaPlc8Fu0er02BQJx7dn8Z/zDnTdvw/3+AbrnrrQ80svpnRT4EH9t2Ky
NNcyPdwR5prHE2ZaQjvIiU59TfnUZjLH5YWJfrFXxTFbd06cHs8+nV47n3Ha
i35ZsihePZKfs1fi3chUBvkNYnymiTA8MpIXze0YOd+dGv0tuVphuPPTPAn/
21UniteMZNPW43ga34HhP7tQz0QPmdsegn39mbXzpmS8qh2+yHmg6V8fvrn4
Cf9WZdH1aDoTu+0U+xMi2CtiBCscf+GK1JuznhSi/xhbhoeZs7ngkhj44BgW
/Q1jP+cxLC/PYc01Najf3YHzuyZhFEdxuoWuGOa4B91m+ElmWnRjvcYgpr96
hulXziG5bhmCNSdyUsAU4ZlZguUdx2LA+WZ4eQVz95zxHKOcw2RpH+e0JcBX
34zqUv/cuukg9q6cRFvj97jXKUZ4XR/IM0rH4BZnybGaYxjt48Psoi5MtWoR
b1VH0vqpG+tV1ak0rhu3bHHn+uvhjDa2pF+oJ9dtP46pg3LoNOoQnkqZrZvr
ZSTfe4CgpfKsCG6G1YXhLK3KpvLQVkno4RUIiY8Ry12Hcf2Xn3gT9wVLR+ow
YtMF3N8q6Ko3mO4psfx3XEPy+G4CKo6EomGoBwd4fxdGYZMROb8Kv0y2YV3n
e7iRr0eT8Gfixf7e3PIihz9vaeNK15E0TvfFjY1GuGX62Wl5F1mqtgZwyG2I
0R1Uqb+2I0f+F8/lP9Zjx/tEvh5ky81jwGStYjFY9RD6ntdigNIkUX1+LJtL
k/ly1UDejOnHgo8rke7uzaK8SM6aO4S+W/LYmlkJzyA/FpmswXXtV+iXG8K0
qzuF2+4umLPiIear6PHn/TkYpWXG3+9H8MWormy+XQ0b12g6a03h2uIkugRV
io4nxvHLtQVSlvom0t9EQmHIWD6rH0+V2UfE1PbZ+PSvC7f7polcuUsI6jWJ
hodsePCHPt0efkSoSQYP3zJFm/s4ZlaOZOwCU779rg+LJYpQUYliRv4QLJ09
gi4X8yRG1mGMnJ7NvWtSueyhrlim2oFazg3w696Kw31MeGj6cKas+YY1CxJo
mqHGzmaq6DF6vciUGyCuzlXh5N3uNDYeJ9K2v8Jd49twbbqHIdUp+O/WDmHU
Po6nNTQ5Ya4xlPw2Q6k+F7dVlkgz+ioODsyn9VIL6OEGMqT7mn93ASaUTcKO
2Ge4Wt4KnTmmotNhffZ+d1QoqgZhyIo2MXV6Exw1pKxeX43aW57wmLZQnDyh
hcapx+AwpRfXG0SyQcaLva7Y8W1zNkqG5bJxmZShWjOoahrImooIdkp7Jx5f
aENKYjWs5+7EXxsF0dN2Fh6V6dM5Vpmdts0Vs+4LDt9lxoztjRjmsRc3Qn04
rXMPvvHVotGdOJpO3IC0bp7Ce/sYriv5D+fefMW8EF1MUNKmaHdkwEwjSqYf
RE97ddo46rFn3yOO5houYmjyfRFldhRl+I3z09MY9M2Sp3sudVr/I4mj1+kg
+8c+iGhv/iuvxvewZG6voFB+uQQynzYhKU1N6k/rJAqy4Xh8/iiS/DoIjyWD
8c//JyThvXHV1J+S/iex+PEUEbhlEt+ErRK2rg/x2imYQXfdufjjXlQveoql
t5Jp8OMRvp/Wo2HrYsiESTjjqSwPFzpRVu8wVGSnOx8dokGFGwtgmBJC44fu
3DbAhpd2qdLgVQV26PyHAb3VWFO2BmbTpqLp/jSsyd8oysZ2xufiKIyTtebh
gW70enMbC/UTGeatzdlxGpAvHsueCd+RvCiL6aum8HHhKF7d3YFb99twsFYc
nxcqwPiTLtcV90DbQmkf9AnCaFcjxD2pRX3ISJrfk6WJ5j0supHJEdWXYfiu
HJ/VezJStOKz/2GcTcqAYcAA2q0Zx05LvsJh9UZs0VDHysREtISFYZ7+TNRY
COrMcuO0gDg6rbTnum7OItz/GuR1xnP/8hzUnGzG8MB2JHnbcnJZGPckBMOj
+aJ4qRLKs1JnVT2YxXW5i1A46Lnk7zxNvuzkyNnLq0XVNicmmITQwdmPHa8P
otNma1qsTWRpP3VpLRqwOWsydVySaP9yifgepMrxPULgXq3Nb6laNOzhxoWq
W2D4Zw5mfiSmmV/GrP6nnDcHZvFF4ASMKviJ1P4jOGxnFSwsJrL9dwXGzI/l
L9sA3rDcBJMFIVx0L5sH/5vIIo1WjF4qw7F25pxr+AaVNsHsf8yHMq1xbNNU
pcvpFKapRHObUlcsLWnApsnFwrqvBmpkl4o5d8zEMZsZQiXwJAYf8+CE9LNI
tezMisvSmbP5G5bN9XXoYWxCvav/hLduHIckJHJQXTDTd06TpA2MpGfjQixb
P5B5lv74mhHFmxqDOd5RWaxQLoHJLG0qVSvQzFPab33+YU18MmeVDOOuLF2R
2cuTTXezKG86DMr+AtViu/itPQjyKfNEs6YN7561YO3YN3A/dtdZOETzYEIL
0qqCELYwTkRseo6bnnK8cvMVljXps1D8QIThMsRXLRZynfzYbpxOrZCVEuto
qbv6TqIoSuUJk4FUlYugk2MVhE4Blnk50r0li7/v/4Zs/QRe6b1LzDrhx9ud
s+icG0xJ+DC+bZyOry8T0fuRG8cZj2HXHqVYkS7HvGtXhYejAfo8zKF2UB02
OG/D3QqpK264gH51slA58BErjDdDTvu7BF1Hc2HeVbFneicqy3dgxx2pnHZb
FyM2fsCC80486HcGfdy6c2L1P3isWIcj8xslYa+H8UNpIj/eLHbKr5uJAt0c
uli3Y//pX3jtmczva0fCdfdGzG/diEKT7eJsnhG9G99APecd9sWE8dBwK+rv
7Cy2FuQwVdIBmgb+PORtxj5vS5Gu680F5++JaQfVhdcRcGrZNwR3DMO1/EwO
+uDLDL8VOHopgINdjkB0XY/kGC1aDTLj6/srMSNjNN4b/IZPsDINm4L5Ytw0
mi7bhOd3O6D7FVMe/CJ1X51M9l8ui7FKjmwxdqJGyB28et2Z1tsrRKZ9PkPW
BvH77zsiocgAlwcG8uISa6ZN3YZB3XM4f2iSsEj14fpiPaaUbsWiW9HU6JTN
d+q6LI17JG7OGogNxTGs01Hn42vK3BanSpnPk7neKonjvxngd25Pan98gi+1
Fei3pA59plrzTr8U7m+RusXeaXxq6c9sn+HI/qyB4PSDmDE/lOuvaXPKp4Gs
M7svtl0xpv1JD5h4j+ee+wH842DJHJlkHi0fjh1aSdSvr8L6TbMQ4eLPgbHa
fHs3XqL1PYnDpi5Aqacqvqh35Zx/GxC3Q4fD1wbyvxsW0I/9g5MrB9OnfRAX
PSrFxFU9RO2CGJ5JyKOriz7l4ypFoK8aW3uMwVlHZ+ZbDpRsNF0p5o4fzNPn
Z4qeaYfE/Lw22JXHodCiEBmWv7GrxgvXFGYhZOAAhh7SxOmy0Sy+MYSPP66U
BP7tgrbCoWw4SXT8EcGT5zMxIDwbU4K80GGTLEubQ+heQMzoW4RX8YpceLMN
j62LYfVbndsDElmZHCeKI8HhYj+mBPjSSrUHRuwcx9lqidxw1FQYuc+AB50k
9kXj+bVckedUOnNpx6HM1gOP2DjT+H4PNmfbceiK56JEeNB3jRGVIJ0Tebo0
y3Ri/zVajM0fx17vD8K27D4eFnWD5llXugQ/xNIwB/jGqHHe9yymPfHjoIYL
0N9/CfL5UewodXJFu2yW/uwq8VZKpZ3fBfh3bEdRVShjvOPw0umWuLhjKIx/
qtNQqQWZU8fyfIQDP5ooosLvH06s9eask6O4RiGPx7RT2Th1F9psVuDrNz/O
9BlFtPfhop12nHmkt9jnKb3XmI9wsy1FF4tWbL6ZwlYHde5KUcW/zeoMOa/J
X691cOT5KHadNJqy2aXOn665sbzPaXG3ZJUo6/YaefdKRNjyeiyvj2ZFQDp6
39gvfh1Ixm9jA6yPD+KEJ2nc5t8JAQbVuDHWkuee63PAxXPYVmCJmkAbVpw2
YcGmccx72JsNlrm8HHNGfPuiBN0tx3Fvzlc83HwLdW4yUEIqNaQ80ppcKcx9
HXls5UvMrUjmgXUn0WNbX37/egQ9tyez17JQTlJKw/VhoykGezCu9BZmzk/G
PnsPHnKL5IX+MZh0OIyz+3hhcG2WyKqMZnanmXCbsQoxWQsxdkmDmPntgHOK
zAvx54YNZ41N5FDPFGYsduOe32NpdfsKUo5l491eBy58UwfF7Wp46zSFI/Sf
4/2sv0JD6gYfApN47uQA50gnd3brtBi1+0MYlHnPOSRgOo7uVMWhy5oMHT2B
atZeovRGFR7efCnpXu9Hu/vmNH2dgFxzf6zXmCEZM38sw9QFZkRtxufRk3h9
YxB3blegZaUuSn5oQlXafwEK91AxJpjex0ey5zFZ+FuOYF/Z83jVP4ff02y5
hq6sLm4Vime9eCPuFNbHxNH58SwYxmwTeVJHG6CQz/7PjHHu9EbU5qexOrzJ
qaEmF452QSxS68GOSxJQ98NQ6objuWyRtkjP2yayv9qzduY6qNQfE++bhkDx
Rkeu3aXEFdtr8WdMN/q+suPBcydwN9WGn4YoIcBJOndOrBaWXr3p3XEexjjP
wfJjofz0K4a6N9ajNFzgp9Vd3JsQi2fjxnOrcyscVf4gfJcn3+yR4cmnnTmu
LpZ6Q134sdEXPT5vwOwtQZzfY72ouWvKpfmzUb8zi4UDrMSrwqf4WuvM9v63
kbhhMM2Kt2NzxjD02WXH/FE6km0DrNn/RA2W2f7EOW1zMaZiG44fHEj3On0+
NPPmMpnbOKKmwFqlCTxj2I1yPVpg12MKlR0vQs7UXHgl9KCu/3JUxhzF+jW/
Rf30dGSk/sLy7GR231ODqdVejPg5DxtCJ/Nb920wvfcbaw6nUHPRTUT82iaO
/TXnm1+JXLBWh2YaVeix6jk+TK2TvMt2EY9zn0E23p8RLdcwcsgDjDh7B+6a
ahyyIoMmCRLJvafK/Hv4O0w0O4nS/jq8fewJxvn8w4XS27iaNJ660+/i/opL
Tj/z9Xl3cjFGp05h0rtxjOzUhwd6mqJ4SwJtZRRYqLVF/Ascywefj2N/YWch
E3EJtpvqMDArDD+eA/3sP6Cj30guMktGY40Zs5RnYkHKUyyzD8ZCRTLVoxbO
I+W55lOMU7SbB/JvvUdGsienb7ejpkUc/9kb83d3c5zMf4pRDZbiVMkneKrs
QMokX/pbK+DiY0WuTsjmkpNdRHdVC95cswShDgGS0DxBq2GgY/ZaMaN5KmKS
Mjn342QOPq3LORtH45bZZ2GuoALFuaugm/UdBWa2/GHSl313Sv21qTNRfk2S
NvKvMFc0ZLM044bflefzFWTls6HsoZdCd0lfhpeOpqVjNLdmqbLf/o+Shtfm
zFEaxKTO35BWk8/oQ0OoZqHJJ9f70qGwCNrTi8Xy3/acXR9Eo+Fd6OU8led3
qzHHjky3qoe7vhc94xLJBDXODt2HbZ4t2HjJF2WrcmlnvQfGVp0ps7gz7BTt
WRiWxT4PHHDJyI+2u+aJay6GnBXfn6ElufRtL0LyxghWmn9A1tZo7s3vzIDz
d8Troiv/fwb7N+WJ0Iy4Cre1MdRclkRXo0tY+taE79OHcXZQLA1TgnFh/AQu
7XML35QSuWlJAGNlBvKtfymyK6z5bYcLs10/YvJCZQZI66+TeiTHJBXw1O54
WjY/gWKsL/R3GrI4/Q6myPyHUygSw5zqsdtuKucc1uKuQYGMvtWO/EeXMUD9
B35YxdDPQR3pU0PYvX83jhgzha6754r8Eblsb4nkGSdd9n27FZmrM9m9qwK/
DcrmsvYA3ly+AD8f78Yv4c1tK/7gycME/gjT4omO9fCvd8Zue1MY9Tam3mYX
KYPPQNDCtWKRxznsGTGCWO/J2xoyXLs+lpeOK/Hl4+5cVdkLyRfPix+uK3Go
JIolAzsxc7wLJsZk07KwSrTKvsH1U4Pw7LQlaV7ArdXJvNqhI42itfGlJID1
Wa8ROlyTC26fg8LHRSh7uRY3T12QvNjXH5+3juOMdFVOS5Tl9XNdoBG/Fec8
LdhyV4FKtUX4lTGcNSuS+e7WAF4pbRf35sTQtW8nJu1rxZN+mnx/fDfib7ix
/V0UK/XWifI1GmJ76EEYLPfluX4qjKuUEV9nTWXiDT8OX+rEt4YLxZJPY3H4
SBIt5njw17qVyP9uyCse8yX6qSEUv/WpeW8Kwp9dw0BFLaZ+mIfWY1O4vzyH
pl9mItYrl5Yy6TS4+gDPq0ows3ACNVNn4FPYGCrWW9Le7iXmTHflNc8fkqy7
+Sw12Y/CGzpM8h3KK2dceHiGpuRN52AOet0VCxIe4POGG5jio4jJK9M5K+eo
6CB/GvJZFtyYE0rV9ljnHZET+WDVIK50qMREh8UitTqHXw0C2GGaAt3CbjrL
njHmhE/57De2OzZuvS++vPLk2vdZ/P5ruZDVDCbS12LeM0v2qdBDrUw3zo8W
PNHfBGffrMbXcwp8WrFC/LfXBmMNvuHdREMG9hvJtTKT6fz1OB6eSODRmVM4
fHKNqHxwCs26Jnys58Y7U535pj4bSi5+TDjgwzsKV9HhhSaLbvfgIZwWxbID
OURbm/IfbXjl4iQoW4WjuqYYz4Y+RdgfO+77PAp1Y9fBcqGUz2x+oHX+Q0lt
chUS8+zFr+XydDs/Q4RVylJrQRY+LM3GSf9Mlmw9ionXc7nKslJS0GLAgHnT
uCdLn0Yf9sAhJIXm2Uq8bPcOLVOHYMuNleJH7RcYSzPhWO4EdvqZgXVNvbir
9QTaXl6DQakPZ0k55MRNLSauHcc5R5XgGxzFmSdbxZ7XVhwqN4DrdJ9hXKkp
T81cicTAveip05+FyXJcl3VCHK+KpoNGb2o7z8SdGMG4uEqoqQ3gDP/j8NC6
Bu+rt9GYaMmW7J3opKPHc/lV4nFkkyiUkO+PTuTpbTY4cLo7KzY/Fw8SOtCi
wh5FH804tfi40DrxU1S0qdDtgC8kUu9ecCaRb/TbcHbNKdSWJnNYaBES3iYw
42A89by7sIuI59BQQQvkMGhAJ47v6CoO1cvRZOJjDL1/EwvmVeDGTRVetTUV
txtXik2JyqJ11FyxVr0ULWnGzJ6kyEedR7Nb/Xs4jYuiidEgMX78Aeg1DqLD
wCHY+mIpKn+YCM35O3DrOTnrnTq7XHNEv+uGfLR8LspWZ/NvczBDR30F2xN5
+H//HDvgwA8TY7jwnw075WhR5et7ZDdFUM7OlTluJqKkNJZ/Few4bpU9nTYH
UqtZmVP25RMnPooWz568uE1QfaEC6orK8Cs3i10rHehd34/nhzsi61IaX/Yb
y2uudzA5sQvrLTS47105/Pv5i0tRRzGFCnRN8uOsl1dgJNuNPU77s+vVNBqZ
/0KHUFsst4lja6ezONQ2lpMe7RJNGl1wtDdwMVKGTy8p8tsxH5y1CGJV8SMU
YpJY8/ol5ofE0mvxNMrbDhcXH0Twe95uyM61wrNhWrx8rSd7jBjIXa+iGKM+
E9Gbx3DjNhW6HMumaUIxjGtasTN9DB9JveGKWSDvbxD8qy7dK51CEfzFnAeq
p/BhowTpOwbws9RDXvl+wi3bPO7t7sk1s/KoIPHi7VgFHknagCX3M/ls7ST2
ufdVhFgH8ZuzLb0XebHNKJ01QRoSSHJ5RKGr2FynjxV7v0j9XIXFu67BWF2C
xR4evGj+GWqe0tmddkUyOGe35EDccAZF/cLQQ6HsF2HDxQPUJLmX5XnoQSn+
G9kC1ZuJLHWxZcMtI575FM+Lb8JwsmaIlM0MqXggm3XLcqT7pMCM3lK+/6tA
+zJz6j1dI2l7k8zOheWoruvP2afk6awkdcB1UZDLHsgnpr15+7kH+3y9j2Xf
ZXik6S+ut43jiy5y3C6GQkthnhi/eCSPWznwQJMeOo4YBSdVX7HcwBujTxyA
Rf1iGLeE8EhkJ1Z360MHmWfo0zQXVl/X4lr8M2F3tyuj9phR3cCWZWt2Ys+i
SdRX9uSTl0V44X0YSZGGvL18HHqo/cDsY+OlXCP4oz2elbvjYLI0kjY115Ch
OJSdxntTO0+HJ566UF9Pn1Ef3qN9wng+vTqJA8YZ8PQyZbr32CvpHO/H+A1m
Uq+R8lOLG7N0+/P1X2XKj3TnJmVHij22dFzbh89jtbG/aBvUXh+FWu+DqHgT
zq4zlgkVm0z+adwHlxm9uFYuDVddz6NtoxtK/XtgT8UPNAX34hkPe155YMfZ
Gl58sUfKZFZHEN3UAcu/XBQ9FRWI62ehvWAkDyXXQ7XnC2G7+S9OBY5jW/BW
vDztysGRC8WRF4Gsro7EOtvBTl4ru+Pe5zO4MqtaslmtQiiOncRd/9zpen8V
jt405aiQI/jvgRf/ap9DcVl3nnqXirYoKdtUWzKtwJ2ymjK0n+fIj7+vSfY8
mcpTAV15Y70Pw8w78/e+a6J25zWU7twCo1gXKcguxK2XwfxZOY1X/52Bf/4A
UVEcw4rSBKavjsaELmqsPfwHtsMs2NqyFXnlucx4eVoo3a1ElNEFLLG8i6lK
FGrn+rLqhArDbWx5uxSi9ZQWnr0ewLyczeJE4f/OEueI4BXLsBJNwurBOvRf
EcdRW9fAYIkVZnRIwt7VW8VMKSNYenTjlP0pkl1mw3ha5NGnQwa125LERn9v
VjjI02bRKForn8Nz2SmcJvKg/SuAV8qT+aTDSmR212LLeVdsPBvCTaPO4b8Q
GepN6ECjliT+srLk1L5DGRAEHhVd2Ky2GcYm+eJ4Qyy7j/mNh2Wd0cVFnv4T
+4nBMl2Yn/YYXxx/YcTpbLbL9mVHvTxWuynx2TBnJtUm0eqAYMKavkKh5SYu
Bcqy/Jk8O81OYKaGAddn1OJimwJ/rXKiwosQ2v9W5iFNqbs9egu1cYeE8UZd
6iz9ih7li2CxOIK7zywQE8wvY3+2Be/VqfPLrkncSn3qT1VH5saR2LHdhbsL
2hFf6EjV15aYZziAJuuPwn2oGmf8qset6FgOC1mOoAc7MGOQEQNjvFkWcgbm
0S/EBe9Mqh/tx2PZXXHkiTer7Z3YttySuzvnc5d5DsPl74ppTSqcPcaKPmfL
RfuTbE5TGynNZOle1d/B+L9eDNRXxK790nzukcpx48cz6rIrQ+dnMN75FHaW
Lhe9dDyEpetXzJ/iRqvj8bS2TMAChT94vMySD/6pMVt0FM+vXRRvPP+hTs6H
nS70wROdDF7T3IyP9+Q5f244e26Zyh3/6tFxRwA+trrT/oUGj/c6KUZstqZc
i7aQGK6FllsVbG8o8+2zUBpqD+H+bhl0mdlP6igfxNaQHHoVbREXzo8WSV0C
efs0KOoPiUPfrVhs+gebmpy5JWsiXyp54qrhV3xza8SV0IHs9be/5MajB7B1
BRf+9xLG1Wr8sj8Gy1LzOS3qMI54vkR65Q18btCQaKzZgkspRrQLHI/5BQX8
LAlGh3ezIFv/DvPqfkpOrhWcmiEvudBzmfikqMmPi4/jZtVT7H4/jI8UnVm/
XMoEP2IQ8rIeSwIq0fvNIXxpS6bNNz2U+IVRMuwx5m6fyqpUCcMfTKND/UO0
bNqIBm8d6qZVoOfWK/AZEkf3pAZcSszkjTefsfGvHT+ci2X2mOf4YSrlSAMV
NuYtRvPqGgQvK4TBmYG8+C6cXr+eiDadLD5/MYixF/O4ztSazhMX4t4rVfF3
ejQSm3vz4q13EqW2WBg9yeC9iKWib9Uq4VTQ5myhcRLPX2VLNGoLKNM5jU3v
nXA6M5PWxtOgXjtPfJg6jJtWS+tnlolYst3mf+9k40WJPRd//oAnvkqc6XEQ
4c39uPL8Sai9sGX4i12o/vEIu9ISEFBejswfVxDW3Cwuph5C/LOl0ClxQ9JB
H1bdG8FH5Q5cfNOHdUvOI+ulOlsUfBhvU42TZzZKtqbOEXHWzvSrPASVSAl1
JGPYQckUCkfGc5C6Fv+qZaLbi3QajfyAnBIfRuYqsWq9CcPPavOdzwCOCAyh
Rt+euDzcmmEBZtSbbcjTQROptVOC9QnpPHgtnamq38FZltzz/hJczvThuH7u
/38e4X+tM1y7WTOpYivm1NyHpYwKvWZOouVuwfiXc/DtkALvdouljpRbs+9H
Mr/nXHHmjB0+WL0UOrfvQXZXMqoOaXHK57E8Khcs2la+gM9nX1652oufkz/C
ThwR4U6JvLHyBFqyrqNLhTmV67NgE7wM04aOAJrmA1KvdbzqzLCITPR+1ALx
YK2wSI7G8v0BtGz4ISrykliyeoP449eOoo7dgSXt4tA4PeSXhEua9vjzs9lw
DJ80UCh8MKfsEUtaLdoFuxHSvvK/hLGpJbjrV4OESV6MHFmBup3pPH6iGw6v
SuRgV3fOOCko79vufMfXgqoX47BP/rRoeDJKuJ7cK7JX/xG/lceJ823LULSq
wfmt8gIMYFc6Oj+G7Ye5GKuaT4VKZwY1fRP2ndy4odSOKW/PYEHpJEwb2CJK
3KNxa5ULRknX2+fxaqhUnME6l+ki0m84B2xaAZeCLAYN/4FoQwve312NyvCL
+FcsZdZEE17dkU/bxlA+V5AR/eYb8WT0VKF0x4XeyQY0i8tmutYDsXfddkzO
G8zAPVkYrrEbL2IzJYGL8oXCejNOMPLl2bSd6Pwzho6ve/BEp+mSXKdeLDTw
5G81HcZ2J03zOtHndE/RbxC5abgFj7hew8cWc+bOa8KGC8rckTsatw+bUUZV
i9uHJDFFLoNVq/rwWVkgV50KZZuKIlraYvnqXAwPf5onTmf2o5VxFaojXMTA
Qa/Fmkt2Iuo/eyYKd8w5Y86MB4k8ejOSF28QD/IieafClgbSGrI4EcbLSaYM
2WfOmGhdRHUNpt30UpzufRe9rq3Goi1pVN1ozDuPJrMmY67TkZp4DtOx46Q9
jqgNcaBx4HmslPLeD/9kyKmuhZuRCtVz36BdO4YmAfZil6Y3v3cYga5W9xFb
90jy6ed8OM+W+sm1jiw60wFn0jI54qkHQ03O4vMpJYYMj0FTeT4n5Plw2dXJ
HH57Jtp3HcPzSQWIqLXkzJu6lN1ajavqxoxYLkcXzMXiQ9FwKsnC0gprPqqM
ZtJRRWrfCOG16eNxYN96MX18X4Gki2JSsqLEOUDCzc9tqDa6O790v4gq00TK
d82F4SMv3ug1hT1V83gmfB3MLjfgWlxf7tfdjPQl3yTVRd4c5RjPlKIaLP34
BL2D50N71VSm/XXjl8IIRh3yZVKKYHVBENd5FYvRd3rQZ7kLU/7lcNGzA+Kk
dE3fyppExYa7wmLyMOZUTuaSUabsrbQIXf7rRb/nJWLQjTV4cOuSMClS4+cz
ZtyWZ84RVslc9SqNXRO/Ca0upriyvRyvXe2ZNiuF7b0W4e/vIHo6LMU9OT3Y
m3XA9uU/JPgnw1mGVuyZ4MSSaxOYPsqKeTWDqLvqEN5PeSHa/Ovw8Ei2NJ/v
wqDYVqKm7oQvhv2peegARL+HMHHuzc469yWOCydxiJsbw7t4MLzdjGHtF+G8
Jost0YehKs2rOpXVEC2N+DBfCdFjnOHkJ88VRh35z9QO8x95oL4wkes/dGKA
fy77jhnHD99Wip7b7fGvNZ95vhnc7eCDCYZCMqF3Tx5/m8iG+ImYrtuButp1
Ik/ekU1FDpw4YKNo+DKQn807cr7NR+zuPF10101m9fbH6GK+CGZjhqL6mNQ3
urXDZusknp+nz23YjwSzAsT+aYa1rDVn7piNnubv8WymumSsxmrU2MvwzAUX
Kr0aTp3hurR5I8P1ukZcPyMavceoM84qiSadXqBhVgwn3V8h+Vs9VBjum8BN
zyxY9FCd+bHHkdb9Jsx82yX3p/SlbPc7yFSV0NdhKN2HZjLSX110lyHXtmgz
6rdg+MShmPHagJqVOjAaro1m4wA2Pf1PJFluREzOQRF9UDrnX06gWVMtYkUA
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
0kFUvUzGEoMXuPtAhu4+ez3i48KwadJ6zHDORsLlQO7AJby61+xRHXJfcqhG
Hofl14ux4SVErwEeEm1Fal87h1n+qmQ3GSx6N5x3fnhg8ZLhzOpfzItupfz9
bgm+twzm9VgPPAiMpuTLEsmArUvhh3xm+9Qi7EgGJVdDuWbqR6yNLiUC4liW
cBY91n1Hr+47sNivG1McxzLQMp2mVY+xXz+K+1eqs6dcBOv3DcbtHp1QO7Mj
nmiswBGVrrw1rwjGip/hOvuSeFA0Dyf367Ch2QS1Yc/BCV2pE/wWvF7Ags8q
WNG4QHRL6E2t7Yl8vtWKD3orMLjAStB2h1A4PJLjXWahrHIU1SNj6L/JilMa
h3PcJHtmyZjx3jhVyu+ph2Z5vuRT725sNnHinL0xXO/+EUdNh1CzNZVD1Xsy
scWfqe8nQV87CAbv1mHg+o0oGmSCybvWI//qGHxQkBOfR13ErQOd+OOGIisU
zbjobDLpGMXL7s7i2SEzej32pulzJfo+P4XR0uxwOieD4Mt3kV0XJ/Re3oJr
2hOPojV9WfklX1wOuYyCeenU0hvM0++8uTh6EV5ZJnD1tTH8s0eeyceNUFkV
zrIzGxD3nxX31JbAz6gdp6NNubePHft1D+fL/BTKXPLmlvAvaO8XzXNL1Nin
rTfLsopY++8XjHJUuXWDAqbq9YW5iiZnb0rjLCV3Oi5wl7JiBY7P7shX6uaM
tAlBp5JuSBqYyqtS3leS9OLzHRskzdcW4tMtTVxvzGO0ay8MTDIR7+6pIDO2
Jzs6NKFrtw3ifC89RLaG8lXrW+x6r0t7KUfdr2qC1uFSfrVzoOVecEZiochs
COSCpiG07SvHXgeGocL9DtoD20RkmD816o1xzegIXham86KUS75sH8fRw1/h
3RVN+m57iMUa6dTvYc/FG0PZ4ZACK/w1mLTLlD++/0VMvCJW5FdhrPFlWBU0
oOrTSlQNS8B/mksx674stZd4ifH68+FdsQxykQvwVTqPYa6O4lbHc2jje8yO
1aJi1X0x58kh7D8Qz3VXJwl/Y23++b+KzjOsB+4P49KSkRKlqRANobT7nfsO
lRIqFWmJkrQ1CCmEkIqMEGk8noynbE9EsrcyIpuKbD3JSvj//u/Ou/PifM99
fz7Xda7rXE5ht/9uYf1ZeywM1GTrtjD0W1Mtcf0TzSve65B04BN0/NTYtD6a
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
    "], {{0, 150.}, {150., 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150., 150.},
  PlotRange->{{0, 150.}, {0, 150.}}]], "Output",
 CellChangeTimes->{3.933257961952978*^9, 3.933258011455002*^9},
 CellLabel->
  "Out[738]=",ExpressionUUID->"61aa61f8-fca9-4658-919f-98521a18f350"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CORS Preflight handling", "Subsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938014641793635*^9, 
   3.938014649251034*^9}},ExpressionUUID->"a936a9e6-9521-473b-bfce-\
420e2a90de74"],

Cell["\<\
GET and POST HTTP requests are often preceded by a preflight request in the \
form of an OPTIONS request.\
\>", "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938014664750268*^9, 3.938014735090744*^9}, 
   3.938147923070339*^9},ExpressionUUID->"2cecc98a-c32d-40ac-ab46-\
351ef170d691"],

Cell["\<\
OPTIONS requests ask the server about its availability and its capabilities.\
\>", "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938014664750268*^9, 3.938014778288383*^9}, {3.938014902408793*^9, 
   3.9380149274534607`*^9}},ExpressionUUID->"391b51ce-122b-4c3f-b85a-\
1a50d90727f0"],

Cell["The server does this by returning some CORS headers.", "Item",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938014664750268*^9, 3.938014778288383*^9}, {3.938014902408793*^9, 
   3.9380149700616693`*^9}},ExpressionUUID->"61e8eef0-a161-4ff9-98a8-\
4ffb8947550d"],

Cell["\<\
The preflight request can be handled using a simple condition:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938014664750268*^9, 3.938014778288383*^9}, {3.938014905714011*^9, 
   3.938014924157185*^9}},ExpressionUUID->"2914a57b-6f15-4e05-98e3-\
2641281049dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CORSHeaders", "=", 
    RowBox[{"<|", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"\"\<Access-Control-Allow-Origin\>\"", "->", "\"\<*\>\""}], ",",
       "\[IndentingNewLine]", "\t", 
      RowBox[{
      "\"\<Access-Control-Allow-Methods\>\"", "->", 
       "\"\<GET, POST, OPTIONS\>\""}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{
      "\"\<Access-Control-Allow-Headers\>\"", "->", 
       "\"\<Origin, Content-Type, Accept\>\""}]}], "\[IndentingNewLine]", 
     "|>"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"req", "[", "\"\<Method\>\"", "]"}], "===", "\"\<OPTIONS\>\""}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Handle", " ", "OPTIONS", " ", "request"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"HTTPResponse", "[", 
     RowBox[{"\"\<\>\"", ",", 
      RowBox[{"<|", 
       RowBox[{"\"\<Headers\>\"", "->", "CORSHeaders"}], "|>"}]}], "]"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Handle", " ", "actual", " ", "request"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"GenerateHTTPResponse", "[", 
     RowBox[{"expr", ",", "req"}], "]"}]}], "\n", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.933262446349804*^9, 3.933262597160095*^9}, {
   3.937979376367062*^9, 3.93797940609137*^9}, 3.9380149806273613`*^9, {
   3.938238616571541*^9, 
   3.938238621664383*^9}},ExpressionUUID->"804b8c8d-2c31-478d-9c06-\
9ba53f8c4198"]
}, Closed]],

Cell[CellGroupData[{

Cell["Using LocalDeploy", "Subsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.93801499779346*^9, 
   3.938015008041088*^9}},ExpressionUUID->"db4b086a-38ff-4d9d-9704-\
da6f7d7512b2"],

Cell["Install and load the paclet:", "Text",
 CellChangeTimes->{{3.936726991746049*^9, 
  3.93672699697113*^9}},ExpressionUUID->"f76068ce-5aa0-4678-b639-\
14f72f09d008"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletInstall", "[", "\"\<TonyAristeidou/LocalDeploy\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "TonyAristeidou`LocalDeploy`"}]}], "Input",
 CellChangeTimes->{{3.9367269445950747`*^9, 3.936726986201048*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"65f88c1f-91f8-43af-a4a0-dc70bdf2a12b"],

Cell["The main LocalDeploy function can be used as follows:", "Text",
 CellChangeTimes->{{3.933269507799774*^9, 3.933269523308241*^9}, {
  3.9380150642771482`*^9, 
  3.938015074893819*^9}},ExpressionUUID->"25022f65-a5cf-4b37-8552-\
d7d55d900540"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deployment", " ", "=", 
  RowBox[{"LocalDeploy", "[", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"URLDispatcher", "[", 
    RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"\"\</square\>\"", "->", 
       RowBox[{"APIFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", "->", "\"\<Number\>\""}], "}"}], ",", 
         RowBox[{
          RowBox[{"#x", "^", "2"}], "&"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"\"\</staticData\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"Now", ",", " ", 
         RowBox[{"RandomReal", "[", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"\"\</delayedData\>\"", ":>", 
       RowBox[{"{", 
        RowBox[{"Now", ",", " ", 
         RowBox[{"RandomReal", "[", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"\"\</delayedData2\>\"", "->", 
       RowBox[{"Delayed", "[", 
        RowBox[{"{", 
         RowBox[{"Now", ",", " ", 
          RowBox[{"RandomReal", "[", "]"}]}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "\t", "}"}], "]"}], "\[IndentingNewLine]", " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.933269527511902*^9, 3.933269558582987*^9}, {
  3.933270183959343*^9, 3.933270248021446*^9}, {3.9332703624767857`*^9, 
  3.933270365823805*^9}, {3.933270610023031*^9, 3.933270647049206*^9}, {
  3.933322454206341*^9, 3.933322477244549*^9}, {3.9333225613453445`*^9, 
  3.9333226649259415`*^9}, {3.933322705193905*^9, 3.933322738062813*^9}, {
  3.9367269343929*^9, 3.9367269395229597`*^9}, {3.937979486393117*^9, 
  3.937979502486534*^9}, {3.937979562676641*^9, 3.937979563647933*^9}, {
  3.938147996914762*^9, 3.938148001171821*^9}, {3.938225677231811*^9, 
  3.938225683335367*^9}, {3.938234849235127*^9, 
  3.938234857318494*^9}},ExpressionUUID->"859562df-65e6-451c-ae5d-\
36f7b117e2b0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LocalDeploymentObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                23.456953125000002`, {0., 23.456953125000002`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GeometricTransformationBox[{
               Thickness[0.], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {CompressedData["
1:eJyFlDFLAzEUx0M/gC4dSkE4WxE6tKBnr9XKcbNOraMdSmknByfB8WY3F6Wd
ih/Az+Ds6upwOAmdu4qXl/xzL+mFBo7HP/fy8t4vLzmc3o/mFSHEMP+kVeMi
UTaSdnV6fS5t8KP0pL7s0//bMNJ+pNP1M+mPze+ZtNnwMST/cKridGYnln7r
tbl/MN5v8Xii9d2w9rtaNHk+q8FfM7HzPaI4T91LrvMRS5tU7wKu81HjOnu/
2XPWCyc+6ezhs+f8j/h6aMQHt7T7Vad5zW3y8npA85qbdKU4mlta7RxTneC2
GKj6NTdocIM/uCEeuGE/cDP5FJxqXKMexk04fsKpW+yYt9YhLvMrzQN5Im/U
gbpMnbpucAAXHzdwhT+4Ix7Oxeynzw354FxZvr4+8PWN1VfoO7a+tE9L+tjX
9xQf3HBvTD/gXhX9QhrccC8NN889Bjf4s3623gnsB24mn4KT9e4YHgW32PGL
nbrjHfPWOsRlftt5/APV7MIf
                 "], {{26., 4.}, {27.104570388793945`, 4.}, {28., 
                 4.895430564880371}, {28., 6.}, {28., 7.104569435119629}, {
                 27.104570388793945`, 8.}, {26., 8.}, {24.895429611206055`, 
                 8.}, {24., 7.104569435119629}, {24., 6.}, {24., 
                 4.895430564880371}, {24.895429611206055`, 4.}, {26., 4.}}, {{
                 4., 6.}, {4., 4.895430564880371}, {4.895430564880371, 4.}, {
                 6., 4.}, {7.104569435119629, 4.}, {8., 4.895430564880371}, {
                 8., 6.}, {8., 7.104569435119629}, {7.104569435119629, 8.}, {
                 6., 8.}, {4.895430564880371, 8.}, {4., 7.104569435119629}, {
                 4., 6.}}, {{6., 28.}, {4.895430564880371, 28.}, {4., 
                 27.104570388793945`}, {4., 26.}, {4., 24.895429611206055`}, {
                 4.895430564880371, 24.}, {6., 24.}, {7.104569435119629, 
                 24.}, {8., 24.895429611206055`}, {8., 26.}, {8., 
                 27.104570388793945`}, {7.104569435119629, 28.}, {6., 
                 28.}}, {{16., 20.}, {13.790861129760742`, 20.}, {12., 
                 18.209138870239258`}, {12., 16.}, {12., 
                 13.790861129760742`}, {13.790861129760742`, 12.}, {16., 
                 12.}, {18.209138870239258`, 12.}, {20., 
                 13.790861129760742`}, {20., 16.}, {20., 
                 18.209138870239258`}, {18.209138870239258`, 20.}, {16., 
                 20.}}, {{26., 28.}, {24.895429611206055`, 28.}, {24., 
                 27.104570388793945`}, {24., 26.}, {24., 
                 24.895429611206055`}, {24.895429611206055`, 24.}, {26., 
                 24.}, {27.104570388793945`, 24.}, {28., 
                 24.895429611206055`}, {28., 26.}, {28., 
                 27.104570388793945`}, {27.104570388793945`, 28.}, {26., 
                 28.}}}]}, {{{1, 0}, {0, -1}}, {0, 0}}], AspectRatio -> 
             Automatic, ImageSize -> {32., 32.}, 
             PlotRange -> {{0., 32.}, {0., -32.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Local IP Address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["43115", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                23.456953125000002`, {0., 23.456953125000002`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GeometricTransformationBox[{
               Thickness[0.], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {CompressedData["
1:eJyFlDFLAzEUx0M/gC4dSkE4WxE6tKBnr9XKcbNOraMdSmknByfB8WY3F6Wd
ih/Az+Ds6upwOAmdu4qXl/xzL+mFBo7HP/fy8t4vLzmc3o/mFSHEMP+kVeMi
UTaSdnV6fS5t8KP0pL7s0//bMNJ+pNP1M+mPze+ZtNnwMST/cKridGYnln7r
tbl/MN5v8Xii9d2w9rtaNHk+q8FfM7HzPaI4T91LrvMRS5tU7wKu81HjOnu/
2XPWCyc+6ezhs+f8j/h6aMQHt7T7Vad5zW3y8npA85qbdKU4mlta7RxTneC2
GKj6NTdocIM/uCEeuGE/cDP5FJxqXKMexk04fsKpW+yYt9YhLvMrzQN5Im/U
gbpMnbpucAAXHzdwhT+4Ix7Oxeynzw354FxZvr4+8PWN1VfoO7a+tE9L+tjX
9xQf3HBvTD/gXhX9QhrccC8NN889Bjf4s3623gnsB24mn4KT9e4YHgW32PGL
nbrjHfPWOsRlftt5/APV7MIf
                 "], {{26., 4.}, {27.104570388793945`, 4.}, {28., 
                 4.895430564880371}, {28., 6.}, {28., 7.104569435119629}, {
                 27.104570388793945`, 8.}, {26., 8.}, {24.895429611206055`, 
                 8.}, {24., 7.104569435119629}, {24., 6.}, {24., 
                 4.895430564880371}, {24.895429611206055`, 4.}, {26., 4.}}, {{
                 4., 6.}, {4., 4.895430564880371}, {4.895430564880371, 4.}, {
                 6., 4.}, {7.104569435119629, 4.}, {8., 4.895430564880371}, {
                 8., 6.}, {8., 7.104569435119629}, {7.104569435119629, 8.}, {
                 6., 8.}, {4.895430564880371, 8.}, {4., 7.104569435119629}, {
                 4., 6.}}, {{6., 28.}, {4.895430564880371, 28.}, {4., 
                 27.104570388793945`}, {4., 26.}, {4., 24.895429611206055`}, {
                 4.895430564880371, 24.}, {6., 24.}, {7.104569435119629, 
                 24.}, {8., 24.895429611206055`}, {8., 26.}, {8., 
                 27.104570388793945`}, {7.104569435119629, 28.}, {6., 
                 28.}}, {{16., 20.}, {13.790861129760742`, 20.}, {12., 
                 18.209138870239258`}, {12., 16.}, {12., 
                 13.790861129760742`}, {13.790861129760742`, 12.}, {16., 
                 12.}, {18.209138870239258`, 12.}, {20., 
                 13.790861129760742`}, {20., 16.}, {20., 
                 18.209138870239258`}, {18.209138870239258`, 20.}, {16., 
                 20.}}, {{26., 28.}, {24.895429611206055`, 28.}, {24., 
                 27.104570388793945`}, {24., 26.}, {24., 
                 24.895429611206055`}, {24.895429611206055`, 24.}, {26., 
                 24.}, {27.104570388793945`, 24.}, {28., 
                 24.895429611206055`}, {28., 26.}, {28., 
                 27.104570388793945`}, {27.104570388793945`, 28.}, {26., 
                 28.}}}]}, {{{1, 0}, {0, -1}}, {0, 0}}], AspectRatio -> 
             Automatic, ImageSize -> {32., 32.}, 
             PlotRange -> {{0., 32.}, {0., -32.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Local IP Address: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["43115", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {
                    14.850937499999997`, {0., 14.850937499999999`}}], 
                    Appearance -> None, BaseStyle -> {}, 
                    ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["43115", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Number of connected clients: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientCount[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                    ImageSizeCache -> {8.14453125, {0.140625, 10.32421875}}, 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                    "SummaryItem"]}], "\[SpanFromLeft]"}}, AutoDelete -> 
                    False, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                    BaseStyle -> {}, 
                    ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["43115", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad\"", 
                    "SummaryItem"]}], 
                    RowBox[{
                    TagBox[
                    "\"Number of connected clients: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientCount[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                    RowBox[{
                    TagBox[
                    "\"List of connected clients: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    And[
                    AssociationQ[ZeroMQLink`PackageScope`$Sockets], 
                    AssociationQ[
                    ZeroMQLink`PackageScope`$TCPConnectedClients]]], 
                    
                    ZeroMQLink`Graphic`PackagePrivate`\
formatConnectedClientList[
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$TCPConnectedClients, 
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    Lookup[
                    ZeroMQLink`PackageScope`$Sockets, 
                    "TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad", <||>], 
                    "SocketID"]], {PatternTest[
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[Association]], AssociationQ] :> 
                    ZeroMQLink`Graphic`PackagePrivate`clients, 
                    Blank[] -> <||>}]], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$Sockets, 
                    ZeroMQLink`PackageScope`$TCPConnectedClients}], 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    AutoDelete -> False, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketObject[
                   "TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad"], 
                   Editable -> False, SelectWithContents -> True, Selectable -> 
                   False], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Listener: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["SocketListener", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"], 
                    ImageSizeCache -> {
                    14.850937499999997`, {0., 14.850937499999999`}}], 
                    Appearance -> None, BaseStyle -> {}, 
                    ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0., 24.}, {0., 24.}}, 
                    PlotRangePadding -> Automatic], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3712979410772326741], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    ImageSizeCache -> {144.0234375, {3.421875, 10.828125}}, 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                    BaseStyle -> {}, 
                    ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{
                    Thickness[0.041666666666666664`], {
                    FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                    14.281400000000001`}, {20.351, 13.3764}, {20.5, 
                    12.4404}, {20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                    9.624400000000001}, {20.057, 8.7184}, {21.959, 
                    8.101400000000002}, {22.317999999999998`, 
                    9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                    22.5, 12.650400000000001`}, {22.317999999999998`, 
                    13.7944}, {21.959, 14.8984}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                    15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                    16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                    20.3906}, {16.782899999999998`, 18.7736}, {
                    18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                    20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                    21.2409, 17.1096}, {19.857899999999997`, 
                    19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                    6.9358, 1.2296000000000005`}, {9.1698, 
                    0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                    11.4998, 2.4996000000000005`}, {9.5958, 
                    2.4996000000000005`}, {7.768800000000001, 
                    3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{16.783199999999997`, 4.2266}, {
                    15.231199999999998`, 3.0966000000000005`}, {
                    13.404199999999998`, 2.4996000000000005`}, {
                    11.500199999999996`, 2.4996000000000005`}, {
                    11.500199999999996`, 0.49960000000000004`}, {
                    13.830199999999998`, 0.49960000000000004`}, {
                    16.064199999999996`, 1.2296000000000005`}, {
                    17.961199999999998`, 2.6096000000000004`}, {
                    16.783199999999997`, 4.2266}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                    6.911699999999998}, {18.3376, 5.358699999999999}, {
                    16.7836, 4.226699999999998}, {17.9606, 
                    2.6096999999999984`}, {19.8586, 3.9906999999999986`}, {
                    21.2416, 5.890699999999999}, {21.9586, 
                    8.101699999999997}, {20.0566, 8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                    8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                    3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                    6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                    3.5304, 6.911699999999998}, {2.9434, 
                    8.718699999999998}}}]}, {
                    FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                    21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998,
                     20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                    19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}}}, {{{5.0391, 20.3906}, {3.1421, 
                    19.008599999999998`}, {1.7591, 17.1096}, {
                    1.0411000000000006`, 14.898599999999998`}, {
                    2.9431000000000007`, 14.2816}, {3.5301000000000005`, 
                    16.0876}, {4.662100000000001, 17.6416}, {6.2171, 
                    18.7736}, {5.0391, 20.3906}}}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                    0.6819999999999999, 13.7944}, {0.4999999999999999, 
                    12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                    0.4999999999999999, 10.3494}, {0.6819999999999999, 
                    9.206400000000002}, {1.041, 8.101400000000002}, {
                    2.9429999999999996`, 8.7184}, {2.649, 
                    9.624400000000001}, {2.5, 10.5594}, {2.5, 11.5004}, {2.5, 
                    12.4404}, {2.649, 13.3764}, {2.9429999999999996`, 
                    14.281400000000001`}, {1.041, 14.8984}}}]}}, 
                    InsetBox[
                    GraphicsBox[
                    GeometricTransformationBox[{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}], {
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}, 
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}], 
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}, {{{1, 0}, {0, -1}}, Center}], 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30, 
                    PlotRange -> {{20, 80}, {0, 70}}], 
                    Scaled[{0.4815646584533839, 0.480603401001521}], Center, {
                    15.479525531281004`, 15.479525531281007`}, {{1., 0.}, {0.,
                     1.}}]}, AspectRatio -> Automatic, 
                    ImagePadding -> {{0., 0.}, {0., 0.}}, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0., 24.}, {0., 24.}}, 
                    PlotRangePadding -> Automatic], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Messages: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    DynamicBox[
                    ToBoxes[
                    If[
                    TrueQ[
                    AssociationQ[ZeroMQLink`PackageScope`$SocketListeners]], 
                    Replace[
                    ZeroMQLink`PackageScope`safeSocketProperty[
                    ZeroMQLink`PackageScope`$SocketListeners, 
                    3712979410772326741], {
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`listener, 
                    Blank[Association]] :> 
                    ZeroMQLink`PackageScope`listenerMessageCount[
                    ZeroMQLink`Graphic`PackagePrivate`listener], 
                    Pattern[ZeroMQLink`Graphic`PackagePrivate`a, 
                    Blank[]] :> Missing["NotAvailable"]}], 
                    Missing["NotAvailable"]], StandardForm], 
                    TrackedSymbols :> {
                    ZeroMQLink`PackageScope`$SocketListeners}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"HandlerFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"Function", "[", 
                    RowBox[{
                    
                    RowBox[{"{", "TonyAristeidou`LocalDeploy`Private`data$", 
                    "}"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"TonyAristeidou`LocalDeploy`Private`res$", ",", 
                    "TonyAristeidou`LocalDeploy`Private`req$", ",", 
                    RowBox[{"TonyAristeidou`LocalDeploy`Private`client$", "=", 
                    
                    RowBox[{"TonyAristeidou`LocalDeploy`Private`data$", "[", 
                    "\"SourceSocket\"", "]"}]}]}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "]"}]}], "]"}], Short], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"HandlerFunctionsKeys: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{", ", "\", \"", "\"Timestamp\"", 
                    "\"Socket\"", "\"SourceSocket\"", "\"Data\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"CharacterEncoding: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"UTF-8\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"RecordSeparators: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Socket: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["SocketObject", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["43115", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    GeometricTransformationBox[{{{
                    FilledCurveBox[{{
                    
                    Line[{{36.558, 8.569}, {40.947, 8.569}, {40.947, 
                    43.684000000000005`}, {36.558, 43.684000000000005`}, {
                    36.558, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{59.053, 8.569}, {63.443, 8.569}, {63.443, 
                    43.684000000000005`}, {59.053, 43.684000000000005`}, {
                    59.053, 8.569}}]}}]}, {{
                    FilledCurveBox[{{
                    
                    Line[{{55.487, 8.569}, {56.95, 8.569}, {56.95, 
                    21.188000000000002`}, {55.487, 21.188000000000002`}, {
                    55.487, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{52.562, 8.569}, {54.025, 8.569}, {54.025, 
                    21.188000000000002`}, {52.562, 21.188000000000002`}, {
                    52.562, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{49.636, 8.569}, {51.099000000000004`, 8.569}, {
                    51.099000000000004`, 21.188000000000002`}, {49.636, 
                    21.188000000000002`}, {49.636, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{46.709, 8.569}, {48.172000000000004`, 8.569}, {
                    48.172000000000004`, 21.188000000000002`}, {46.709, 
                    21.188000000000002`}, {46.709, 8.569}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{43.783, 8.569}, {45.246, 8.569}, {45.246, 
                    21.188000000000002`}, {43.783, 21.188000000000002`}, {
                    43.783, 8.569}}]}}]}}, {
                    FilledCurveBox[{{
                    
                    Line[{{40.947, 4.911}, {59.787000000000006`, 4.911}, {
                    59.787000000000006`, 6.922}, {40.947, 6.922}, {40.947, 
                    4.911}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 31.675}, {56.678000000000004`, 31.675}, {
                    56.678000000000004`, 39.051}, {44.057, 39.051}, {44.057, 
                    31.675}}]}}]}, {
                    FilledCurveBox[{{
                    
                    Line[{{44.057, 43.685}, {56.678000000000004`, 43.685}, {
                    56.678000000000004`, 65.089}, {44.057, 65.089}, {44.057, 
                    43.685}}]}}]}}}, {{{1, 0}, {0, -1}}, Center}], {
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{20, 80}, {0, 70}}, 
                    BaseStyle -> {CacheGraphics -> False}, ImageSize -> 30}], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Local IPAddress: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"127.0.0.1\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Local Port: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["43115", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Protocol: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"\"TCP\"", 
                    TagBox[
                    "\" (Server)\"", Deploy, DefaultBaseStyle -> "Deploy"]}, 
                    "RowDefault"], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]", "\[SpanFromLeft]"}, {
                    
                    RowBox[{
                    TagBox["\"Endpoint: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}], "\[SpanFromLeft]", 
                    "\[SpanFromLeft]"}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    SocketObject[
                    "TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad"], 
                    Editable -> False, SelectWithContents -> True, Selectable -> 
                    False], "SummaryItem"]}]}}, AutoDelete -> False, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    AutoDelete -> False, BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   SocketListener[3712979410772326741], Editable -> False, 
                   SelectWithContents -> True, Selectable -> False], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Endpoints: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"/square\"", "\[Rule]", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", 
                    RowBox[{"APIFunction", "[", 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeEllipsis"]], "]"}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["424", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]}, "IconizedObject"]], 
                    APIFunction[{"x" -> "Number"}, Slot["x"]^2& ], 
                    SelectWithContents -> True, Selectable -> False]}], ",", 
                    RowBox[{"\"/staticData\"", "\[Rule]", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"List", "ListIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["List", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["480", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]}, "IconizedObject"]], {
                    
                    DateObject[{
                    2024, 10, 15, 12, 12, 52.512885`8.472840853579264}, 
                    "Instant", "Gregorian", 1.], 0.8425494436269207}, 
                    SelectWithContents -> True, Selectable -> False]}], ",", 
                    RowBox[{"\"/delayedData\"", "\[RuleDelayed]", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"List", "ListIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["List", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["480", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]}, "IconizedObject"]], {
                    
                    DateObject[{
                    2024, 10, 15, 12, 12, 52.516774`8.472873015375407}, 
                    "Instant", "Gregorian", 1.], 0.313720970613387}, 
                    SelectWithContents -> True, Selectable -> False]}], ",", 
                    RowBox[{"\"/delayedData2\"", "\[Rule]", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", 
                    RowBox[{"Delayed", "[", 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeEllipsis"]], "]"}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["144", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]}, "IconizedObject"]], 
                    Delayed[{Now, 
                    RandomReal[]}], SelectWithContents -> True, Selectable -> 
                    False]}]}], "\[RightAssociation]"}], "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TonyAristeidou`LocalDeploy`LocalDeploymentObject[<|
   "Listener" -> SocketListener[3712979410772326741], "Socket" -> 
    SocketObject["TCPSERVER-da02bb52-dc28-4381-9cfa-34c293f7f3ad"], 
    "LocalIPAddress" -> "127.0.0.1", "Port" -> 43115, "BaseURL" -> 
    "http://127.0.0.1:43115", "Endpoints" -> <|"/square" -> IconizedObject[
        APIFunction[{"x" -> "Number"}, Slot["x"]^2& ], Automatic, Method -> 
        Automatic], "/staticData" -> IconizedObject[{
         DateObject[{2024, 10, 15, 12, 12, 52.512885`8.472840853579264}, 
          "Instant", "Gregorian", 1.], 0.8425494436269207}, Automatic, Method -> 
        Automatic], "/delayedData" :> IconizedObject[{
         DateObject[{2024, 10, 15, 12, 12, 52.516774`8.472873015375407}, 
          "Instant", "Gregorian", 1.], 0.313720970613387}, Automatic, Method -> 
        Automatic], "/delayedData2" -> IconizedObject[
        Delayed[{Now, 
          RandomReal[]}], Automatic, Method -> Automatic]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9333224790513306`*^9, {3.933322580499319*^9, 3.9333226101305447`*^9}, 
   3.933322640475321*^9, 3.93332267736265*^9, 3.9333227106615105`*^9, 
   3.9333227407771854`*^9, 3.933322804499075*^9, {3.937979536163835*^9, 
   3.937979539632257*^9}, 3.9379795725692377`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"cd6fab46-55ff-4ded-be08-cf23d2188f39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Dividers", "->", "All"}]}], "]"}], "&"}], "@", 
  "\[IndentingNewLine]", 
  RowBox[{"KeyValueMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"endpoint", ",", "expr"}], "}"}], "|->", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"endpoint", "\n", "\t\t", ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"URLExecute", "[", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{
         RowBox[{"URLBuild", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"deployment", "[", "\"\<BaseURL\>\"", "]"}], ",", 
            "endpoint"}], "}"}], "]"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", "\t\t\t\t", 
          RowBox[{"\"\<x\>\"", "->", "5"}], "\[IndentingNewLine]", "\t\t", 
          "}"}]}], "]"}], "\n", "\t\t", ",", "\[IndentingNewLine]", "\t\t", 
       "expr"}], "\[IndentingNewLine]", "\t", "}"}]}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"deployment", "[", "\"\<Endpoints\>\"", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.933270069733408*^9, 3.9332700936124954`*^9}, {
  3.9332701776250343`*^9, 3.9332701805245*^9}, {3.933270327457083*^9, 
  3.933270327572075*^9}, {3.933270470332577*^9, 3.9332704716526394`*^9}, {
  3.933270508603571*^9, 3.933270603710041*^9}, {3.9332706495961742`*^9, 
  3.933270660414245*^9}, {3.9333222337684994`*^9, 3.9333222365653133`*^9}, {
  3.9333223284061127`*^9, 3.93332237223036*^9}, {3.9333224883472958`*^9, 
  3.9333225438199387`*^9}, {3.9333227511785145`*^9, 3.933322751218075*^9}, {
  3.9333228194374695`*^9, 3.9333228238512897`*^9}, {3.9333228849433346`*^9, 
  3.933322953308077*^9}, {3.933322986054039*^9, 3.9333229977941856`*^9}, {
  3.933323036769436*^9, 3.9333230540104637`*^9}, {3.933323230330183*^9, 
  3.933323263812277*^9}, {3.938015087473009*^9, 
  3.93801516213159*^9}},ExpressionUUID->"55dad597-fe50-4c71-843d-\
173a3bb5a3ea"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"/square\"\>", "\<\"25\"\>", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", 
         RowBox[{"APIFunction", "[", 
           DynamicBox[
            FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
           "]"}], 
         GridBox[{{
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["424", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      APIFunction[{"x" -> "Number"}, Slot["x"]^2& ],
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"/staticData\"\>", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Tue 15 Oct 2024 12:12:19\"", 
           StyleBox[
            
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
              
              StyleBox["1", NumberMarks -> False, StripOnInput -> False]}], 
            "TimeZoneLabel"]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2024", ",", "10", ",", "15", ",", "12", ",", "12", ",", 
                 "19.569778`8.044160883017263"}], "}"}], ",", "\"Instant\"", 
             ",", "\"Gregorian\"", ",", "1.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "0.3042817635109345`"}], "}"}], 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", "ListIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["480", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {
       DateObject[{2024, 10, 15, 12, 12, 19.569778`8.044160883017263}, 
        "Instant", "Gregorian", 1.], 0.3042817635109345},
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"/delayedData\"\>", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Tue 15 Oct 2024 12:12:32\"", 
           StyleBox[
            
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
              
              StyleBox["1", NumberMarks -> False, StripOnInput -> False]}], 
            "TimeZoneLabel"]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2024", ",", "10", ",", "15", ",", "12", ",", "12", ",", 
                 "32.326762`8.262137186251017"}], "}"}], ",", "\"Instant\"", 
             ",", "\"Gregorian\"", ",", "1.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "0.6709703478030309`"}], "}"}], 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", "ListIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["2", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["480", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {
       DateObject[{2024, 10, 15, 12, 12, 19.578151`8.044346657736146}, 
        "Instant", "Gregorian", 1.], 0.6402611153759832},
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"/delayedData2\"\>", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Tue 15 Oct 2024 12:12:32\"", 
           StyleBox[
            
            RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
              
              StyleBox["1", NumberMarks -> False, StripOnInput -> False]}], 
            "TimeZoneLabel"]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2024", ",", "10", ",", "15", ",", "12", ",", "12", ",", 
                 "32.430102`8.263523295061272"}], "}"}], ",", "\"Instant\"", 
             ",", "\"Gregorian\"", ",", "1.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "0.6520901324549759`"}], "}"}], 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", 
         RowBox[{"Delayed", "[", 
           DynamicBox[
            FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], 
           "]"}], 
         GridBox[{{
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["144", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      Delayed[{Now, 
        RandomReal[]}],
      SelectWithContents->True,
      Selectable->False]}
   },
   AutoDelete->False,
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.933322481459776*^9, 3.933322491374075*^9}, {
   3.9333225355646515`*^9, 3.9333225528206882`*^9}, {3.9333225831642456`*^9, 
   3.9333226126843967`*^9}, 3.9333226429619503`*^9, {3.9333226811701202`*^9, 
   3.933322749914295*^9}, 3.933322954892168*^9, {3.933322990195801*^9, 
   3.9333229999085255`*^9}, {3.933323031214073*^9, 3.9333230627305946`*^9}, {
   3.9333232301920013`*^9, 3.9333232654189434`*^9}, {3.9379795345534363`*^9, 
   3.93797955251723*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"89a6bf9f-1b44-49ae-a71c-7c0232227b82"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"1f6502ca-e788-4634-854a-e9d78e750aac"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a6e27d9e-1550-42b8-9ff3-cdd2968fb97a"],

Cell["5 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938148054688715*^9, 3.9381480557602577`*^9}, 3.938152886295895*^9, {
   3.9381540805263453`*^9, 
   3.938154081171117*^9}},ExpressionUUID->"d0c01ad0-5a0f-4225-9da4-\
f65f2b879803"],

Cell[CellGroupData[{

Cell["Deploy script", "Section",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9380153544137583`*^9, 3.938015360835802*^9}, {3.938180984495242*^9, 
   3.9381809876647577`*^9}},ExpressionUUID->"febe690f-ea53-4e79-b0c7-\
738f687d67ce"],

Cell["\<\
LocalDeploy can now be used to set up the WL APIs which will support our \
application.\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938015367729611*^9, 
   3.938015400978237*^9}},ExpressionUUID->"6ea83d38-00dc-4b35-96e7-\
e202348857f2"],

Cell[CellGroupData[{

Cell["expressions.wl", "Subsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938015462629485*^9, 
   3.938015466385809*^9}},ExpressionUUID->"e4ae71f0-5585-4464-994a-\
fc401190e8f2"],

Cell[TextData[{
 "The expressions to be locally deployed on the launch of the app are defined \
inside ",
 StyleBox["expressions.wl",
  FontSlant->"Italic"],
 " in the following format: "
}], "Text",
 CellChangeTimes->{{3.933274854119625*^9, 3.933274930923132*^9}, 
   3.9333064985729218`*^9, {3.938015846917547*^9, 
   3.938015852540023*^9}},ExpressionUUID->"496fc0ed-e268-4ce9-a15f-\
ed5f84cdd817"],

Cell[BoxData[
 RowBox[{"{", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"8888", ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"URLDispatcher", "[", 
      RowBox[{"{", 
       RowBox[{"\"\</aliveQ\>\"", "->", "\n", "\t\t\t", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"True", "&"}]}], "]"}]}], "}"}], "\n", "\t\t", "]"}]}], 
    "\[IndentingNewLine]", "\t", "}"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"4848", ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"URLDispatcher", "[", 
      RowBox[{"{", 
       RowBox[{"\"\</example\>\"", "->", "\n", "\t\t\t", 
        RowBox[{"APIFunction", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"RandomImage", "[", "]"}], "&"}]}], "]"}]}], "}"}], "\n", 
      "\t\t", "]"}]}], "\[IndentingNewLine]", "\t", "}"}]}], 
  "\[IndentingNewLine]", "}"}]], "Input",
 CellChangeTimes->{{3.933274980790777*^9, 3.93327505138421*^9}, {
  3.933275342637308*^9, 3.933275358740513*^9}, {3.933275389004965*^9, 
  3.93327540220142*^9}, {3.933325851119499*^9, 3.933325851453642*^9}, {
  3.9379796848798122`*^9, 3.9379797194487877`*^9}, {3.938015859813292*^9, 
  3.938015876654697*^9}, {3.938015921404891*^9, 
  3.938015921576612*^9}},ExpressionUUID->"dafc237f-faab-42e9-a100-\
0b30940a7624"]
}, Closed]],

Cell[CellGroupData[{

Cell["deploy.wls", "Subsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938015414742455*^9, 3.9380154169474983`*^9}, 3.938019155216219*^9, {
   3.938152214956868*^9, 
   3.938152219062543*^9}},ExpressionUUID->"cc326b7a-f58d-45cd-b8f1-\
e42dbc94b8b8"],

Cell[TextData[{
 "The ",
 StyleBox[".wls",
  FontSlant->"Italic"],
 " file extension can be used to define a WolframScript, which can then be \
invoked in CLI using the ",
 StyleBox["-script",
  FontSlant->"Italic"],
 " flag, taking the script location as an argument: "
}], "Text",
 CellChangeTimes->{{3.933271999911297*^9, 3.9332720093890476`*^9}, {
   3.93327204760903*^9, 3.933272096534218*^9}, {3.933272140393255*^9, 
   3.933272319274496*^9}, {3.933272462669607*^9, 3.933272467072567*^9}, {
   3.9332726849341393`*^9, 3.9332727520655766`*^9}, {3.9333064116284904`*^9, 
   3.9333064263725033`*^9}, {3.9366870916241903`*^9, 3.9366871096360483`*^9}, 
   3.936707682107181*^9, {3.936722802528607*^9, 3.9367228030763493`*^9}, {
   3.9380156041634808`*^9, 
   3.9380156184488363`*^9}},ExpressionUUID->"cae4c32b-d9a3-4435-bf0e-\
7c71a642e706"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$HomeDirectory", ",", "\"\<example.wls\>\""}], "}"}], "]"}], 
    ",", "\[IndentingNewLine]", "\t", 
    "\"\<Print[\\\"Hello from WolframScript!\\\"]\>\"", ",", 
    "\[IndentingNewLine]", "\t", "\"\<Text\>\""}], "\[IndentingNewLine]", 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.933272351004263*^9, 3.933272490975588*^9}, {
   3.933272605996567*^9, 3.9332726071852036`*^9}, {3.9332726724624004`*^9, 
   3.933272672625517*^9}, {3.9332727742726707`*^9, 3.9332728302807484`*^9}, 
   3.938015630884418*^9},ExpressionUUID->"2affa689-3a25-41fc-a32d-\
85331da7ea4e"],

Cell[CellGroupData[{

Cell["wolframscript -script ./example.wls", "ExternalLanguage",
 CellEvaluationLanguage->"Shell",
 CellChangeTimes->{{3.933272320984705*^9, 3.933272335807489*^9}, {
   3.9332725590924478`*^9, 3.933272600013529*^9}, {3.933272675356077*^9, 
   3.9332726803187666`*^9}, {3.933272756811598*^9, 3.9332727918442535`*^9}, 
   3.9379796392657833`*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"153569fe-34ac-4e1f-b9c8-e52ee7e57a9a"],

Cell[BoxData["\<\"Hello from WolframScript!\"\>"], "Print",
 CellChangeTimes->{{3.9332725469698086`*^9, 3.9332725874401836`*^9}, {
   3.9332727707055435`*^9, 3.9332727846772766`*^9}, 3.9332728436123943`*^9},
 CellLabel->
  "During evaluation of \
In[63]:=",ExpressionUUID->"73bd3451-38f4-49c5-9071-512d13e44289"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {17.981953125, {0., 17.981953125}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[Checkmark]\"", StripOnInput -> False, LineColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FrontFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              BackFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              GraphicsColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FontSize -> 25, FontColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451]], 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Command\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"wolframscript -script ./example.wls\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ExitCode\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                10.869015724668278`, {0., 10.869015724668278`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox[
             "\"\[Checkmark]\"", StripOnInput -> False, LineColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FrontFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              BackFaceColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              GraphicsColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
              FontSize -> 25, FontColor -> 
              RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451]], 
             ContentPadding -> False, FrameMargins -> {{0, 0}, {0, 0}}, 
             FrameStyle -> None, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Command\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"wolframscript -script ./example.wls\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ExitCode\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"StandardError\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"StandardOutput\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Hello from WolframScript!\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"ExecutionCompleted\"", "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "ExecutionCompleted", <|
   "Command" -> "wolframscript -script ./example.wls", "ExitCode" -> 0, 
    "StandardError" -> "", "StandardOutput" -> "Hello from WolframScript!"|>],
  
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.93327254704278*^9, 3.933272587727814*^9}, {
   3.933272770763092*^9, 3.933272784746469*^9}, 3.933272843681085*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"582abea0-a93a-4bdd-9605-9f05d21a07bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["EchoTemporaryCLI", "Subsubsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, {
  3.9380164112033854`*^9, 
  3.938016414327408*^9}},ExpressionUUID->"15278911-aae3-47f9-a163-\
b8692e5e5919"],

Cell["\<\
EchoTemporaryCLI is a function written to emulate the behaviour of \
PrintTemporary within the command line interface.\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938016416287964*^9, 3.9380164736186113`*^9}, {3.938017863816267*^9, 
   3.93801787825773*^9}},ExpressionUUID->"6b03b4c5-fa42-430a-a194-\
59c640238ef3"],

Cell["\<\
It uses ANSI escape characters to move the cursor back and delete the printed \
lines:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938016476555394*^9, 
   3.9380165155575314`*^9}},ExpressionUUID->"1ad3fb7b-b294-4952-928b-\
e41de6e8a302"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"script", "=", 
    RowBox[{"Export", "[", "\[IndentingNewLine]", "\t", 
     RowBox[{"\"\<example.wls\>\"", ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"StringRiffle", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
         "\"\<Print[$Version];\>\"", ",", "\n", "\t\t\t", 
          "\"\<Print[\\\"Start\\\"];\>\"", ",", "\n", "\t\t\t", 
          "\"\<Pause[2];\>\"", ",", "\n", "\t\t\t", 
          "\"\<WriteLine[First@Streams[\\\"stdout\\\"], \
\\\"\\033[F\\033[K\\033[F\\\"];\>\"", ",", "\n", "\t\t\t", 
          "\"\<Print[\\\"End\\\"]\>\""}], "\n", "\t\t", "}"}], ",", "\n", 
        "\t\t ", "\"\<\\n\>\""}], "\n", "\t", "]"}], ",", 
      "\[IndentingNewLine]", "\t", "\"\<Text\>\""}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"$OperatingSystem", " ", "===", " ", "\"\<Unix\>\""}], ",", "\n", 
   "\t", 
   RowBox[{
    RowBox[{"Run", "[", 
     RowBox[{"\"\<konsole -e math -script \>\"", "<>", "script"}], "]"}], ";",
     "\n", "\t", 
    RowBox[{"Run", "[", 
     RowBox[{"\"\<wolframscript -script \>\"", "<>", "script"}], "]"}], 
    ";"}]}], "\n", "]"}]}], "Input",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
   3.920894388867655*^9, 3.9208944515770645`*^9}, 3.938016572641224*^9, {
   3.9380172171045523`*^9, 3.938017244276528*^9}, {3.9380173116346416`*^9, 
   3.938017319300042*^9}, {3.938017607452956*^9, 3.938017725874899*^9}, {
   3.9380178049072123`*^9, 3.938017848608962*^9}, {3.938152364737576*^9, 
   3.938152395098967*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"3dc38e5e-ca9f-4a97-b2e8-336dd4d5ebfe"]
}, Closed]],

Cell[CellGroupData[{

Cell["CommandLineParse", "Subsubsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, {
  3.9380180912451763`*^9, 
  3.9380180944447317`*^9}},ExpressionUUID->"49213a2c-0f13-4b54-94da-\
126180f78144"],

Cell["\<\
CommandLineParse was written to make parsing command line arguments easier.\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.93801809934569*^9, 
   3.938018113580991*^9}},ExpressionUUID->"dca86c69-4932-4de5-9e6b-\
2aeafe7e03ce"],

Cell["\<\
CommandLineParse will return a dataset of all command like flags and \
corresponding arguments:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938018128267591*^9, 
   3.938018163406959*^9}},ExpressionUUID->"33b731d1-288b-4325-84ff-\
cae9ced15e9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<CommandLineParse\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.9380181222640142`*^9, 
  3.9380181262123833`*^9}, {3.938018165232328*^9, 3.938018177419381*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"5ce63f16-aacb-4294-9642-e8882fb18c6f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/Linux-\
x86-64/WolframKernel" -> <|"Flag" -> "-wstp", "Parameter" -> Missing[]|>|>, <|
       "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/Linux-\
x86-64/WolframKernel" -> <|
         "Flag" -> "-linkprotocol", "Parameter" -> "SharedMemory"|>|>, <|
       "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/Linux-\
x86-64/WolframKernel" -> <|
         "Flag" -> "-linkconnect", "Parameter" -> Missing[]|>|>, <|
       "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/Linux-\
x86-64/WolframKernel" -> <|
         "Flag" -> "-linkname", "Parameter" -> "7q2d3_shm"|>|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{
         All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"} -> <|{
           All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel", "Flag"} -> 
          1, {All, 
            "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/\
Linux-x86-64/WolframKernel", "Parameter"} -> 1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/\
Linux-x86-64/WolframKernel" -> TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Flag" -> TypeSystem`PackageScope`AtomShape[
                 145.60000000000002`], "Parameter" -> 
                TypeSystem`PackageScope`AtomShape[134.4]|>], 
              DirectedInfinity[1], 2, {
              All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"}]|>], 
          DirectedInfinity[1], 1, {All}]], 30, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/\
Linux-x86-64/WolframKernel"}, {
         TypeSystem`Struct[{"Flag", "Parameter"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}]}], 4], "Meta" -> <||>, "RowTarget" -> 20,
      "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{
         All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"} -> <|{
           All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel", "Flag"} -> 
          1, {All, 
            "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/\
Linux-x86-64/WolframKernel", "Parameter"} -> 1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/\
Linux-x86-64/WolframKernel" -> TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "Flag" -> TypeSystem`PackageScope`AtomShape[
                 145.60000000000002`], "Parameter" -> 
                TypeSystem`PackageScope`AtomShape[134.4]|>], 
              DirectedInfinity[1], 2, {
              All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"}]|>], 
          DirectedInfinity[1], 1, {All}]], 30, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/Binaries/\
Linux-x86-64/WolframKernel"}, {
         TypeSystem`Struct[{"Flag", "Parameter"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}]}], 4], "Path" -> {}, "DisplayedRowCount" -> 
     30, "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                  "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel", FontWeight -> "DemiBold"], 
                  Style[
                   Style[
                   "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel", FontWeight -> "DemiBold"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/\
Kernel/Binaries/Linux-x86-64/WolframKernel"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
             Hue[0., 0., 0.7], Background -> Hue[0., 0., 0.15], 
             Frame -> {{Automatic, Automatic}, {
                Hue[0, 0, 0.2], Automatic}}, Background -> GrayLevel[0.95], 
             Alignment -> {Center, Baseline}], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["Flag", FontWeight -> "DemiBold"], 
                  Style[
                   Style["Flag", FontWeight -> "DemiBold"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/\
Kernel/Binaries/Linux-x86-64/WolframKernel", "Flag"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel", "Flag"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
             Hue[0., 0., 0.7], Background -> Hue[0., 0., 0.15], 
             Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], Automatic}}, Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["Parameter", FontWeight -> "DemiBold"], 
                  Style[
                   Style["Parameter", FontWeight -> "DemiBold"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/\
Kernel/Binaries/Linux-x86-64/WolframKernel", "Parameter"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel", "Parameter"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
             Hue[0., 0., 0.7], Background -> Hue[0., 0., 0.15], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], Automatic}}, Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["-wstp", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"], 
                 Key["Flag"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], Automatic}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key[
                 "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"], 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], Automatic}}, ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["-linkprotocol", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"], 
                 Key["Flag"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SharedMemory", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key[
                 "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"], 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["-linkconnect", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"], 
                 Key["Flag"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key[
                 "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"], 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["-linkname", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"], 
                 Key["Flag"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["7q2d3_shm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key[
                 "/usr/local/Wolfram/Mathematica/14.2/SystemFiles/Kernel/\
Binaries/Linux-x86-64/WolframKernel"], 
                 Key["Parameter"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{805.8484375, {105.54453125, 117.77890625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{805.8484375, {105.54453125, 117.77890625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9208939629004135`*^9, 3.938018178836432*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"aacb919e-264f-4c5a-ae1e-c0301a883a6b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parallelization", "Subsubsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938015496760868*^9, 
   3.938015500700745*^9}},ExpressionUUID->"147249ba-8aaa-4436-b633-\
f21d9766e0ae"],

Cell["\<\
The script also deploys each LocalDeployment on a different subkernel working \
meaning that they can be reached concurrently:\
\>", "Text",
 CellChangeTimes->{{3.9332588387806015`*^9, 3.9332589852744236`*^9}, {
   3.933259036666687*^9, 3.933259091238619*^9}, {3.93326939127614*^9, 
   3.9332693916861515`*^9}, {3.933275544195055*^9, 3.9332755513491497`*^9}, {
   3.933275828705559*^9, 3.933275954523428*^9}, 3.933306510742735*^9, 
   3.933314413392275*^9, {3.938016107262994*^9, 
   3.938016153784226*^9}},ExpressionUUID->"e37b7334-6dff-4bc4-8f22-\
d2d091873052"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LaunchKernels", "[", 
    RowBox[{"$ProcessorCount", "//", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", " ", "*", "2"}], ")"}], "-", "$KernelCount"}]}], 
         "}"}], "]"}], "&"}], ")"}]}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"WaitAll", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"port", ",", "expr"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"ParallelSubmit", "[", "\n", "\t\t\t", 
      RowBox[{"LocalDeploy", "[", 
       RowBox[{"expr", ",", "port"}], "]"}], "\n", "\t\t", "]"}]}], "\n", 
    "\t", "]"}], "@@@", "expressions"}], "\n", "]"}]}], "Input",
 CellChangeTimes->{{3.9332694354116974`*^9, 3.9332694426009293`*^9}, {
  3.9332759254179764`*^9, 3.9332759514533405`*^9}, {3.938016028464446*^9, 
  3.938016087145946*^9}, {3.9380161595298967`*^9, 
  3.938016260146538*^9}},ExpressionUUID->"d3a331d2-dc28-4e43-8c2c-\
e212640174c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Blocking IO", "Subsubsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938015484344594*^9, 
   3.938015488948254*^9}},ExpressionUUID->"8beb48b2-fb02-434f-ac9f-\
83ca1bda4a2b"],

Cell["\<\
WolframScript will run through each line in a script until it finishes, then \
closes the kernel after the last line. \
\>", "Text",
 CellChangeTimes->{{3.9333066037278423`*^9, 3.933306664954563*^9}, 
   3.9333067867901497`*^9, 3.9333142690587177`*^9, 
   3.938015950688793*^9},ExpressionUUID->"122a7b71-158a-4de8-8ac7-\
acb80b27312d"],

Cell["Keep the Kernel alive by checking for a specific user input:", "Text",
 CellChangeTimes->{{3.9333066665273457`*^9, 3.933306738152935*^9}, 
   3.933306791552183*^9, 3.9333142731017838`*^9, 3.933314388709366*^9, {
   3.938015954766776*^9, 
   3.9380159764030933`*^9}},ExpressionUUID->"b3399212-5fc5-419b-aa36-\
5c31f12225d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"Input", "[", "]"}], "]"}], "=!=", "\"\<exit\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9333066888952103`*^9, 3.9333066889002705`*^9}, {
  3.9379797681602087`*^9, 3.937979768264905*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"cda3f81a-4194-48e4-a6f1-34ad09a98875"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Final deploy script", "Subsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938015582558778*^9, 3.938015586051506*^9}, 
   3.9381802425381308`*^9},ExpressionUUID->"4d6b20f7-55e7-47d2-9f79-\
b3ed530e2bcd"],

Cell["\<\
All WL files and components are stored within the @wrb/wl package.\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938019829390813*^9, 3.9380198698707733`*^9}, {3.93818025860653*^9, 
   3.938180290492751*^9}, {3.938180338294812*^9, 
   3.938180347273511*^9}},ExpressionUUID->"17aa38cb-f237-4bf2-9066-\
3643dfb3f1be"],

Cell[TextData[{
 "The location of the ",
 StyleBox[ButtonBox["deploy.wls",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/wl/\
deploy.wls"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/wl/\
deploy.wls"],
  FontSlant->"Italic"],
 " file is returned using:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938019829390813*^9, 3.9380198698707733`*^9}, {3.93818025860653*^9, 
   3.938180310027092*^9}, {3.938235055048469*^9, 
   3.938235055050449*^9}},ExpressionUUID->"d88680cb-a379-4ff0-9e68-\
d1ac200b2c43"],

Cell["require.resolve('@wrb/wl')", "ExternalLanguage",
 TaggingRules-><|
  "ExternalEvaluateData" -> <|
    "System" -> "NodeJS", "ID" -> "DefaultNodeJSSession"|>|>,
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938180293424984*^9, 
   3.938180326659965*^9}},ExpressionUUID->"295867f3-7927-4c64-9879-\
9cca2f4fedad"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4ce73afd-33ce-430c-9f7d-970c4c53b881"],

Cell["4 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938148054688715*^9, 3.9381480557602577`*^9}, 3.938152886295895*^9, {
   3.9381540805263453`*^9, 3.938154081171117*^9}, {3.938180553139017*^9, 
   3.938180553221188*^9}},ExpressionUUID->"12c58e02-67cc-407a-b2f3-\
29b6178118b9"],

Cell[CellGroupData[{

Cell["Subprocess management", "Section",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938018378217387*^9, 
   3.938018381022828*^9}},ExpressionUUID->"f24b35b8-4ab5-4b68-8737-\
813f12aaa677"],

Cell[TextData[{
 "Node.js provides methods to start and control subprocess with the ",
 StyleBox["child_process",
  FontSlant->"Italic"],
 " module."
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938018391419375*^9, 3.938018391579088*^9}, {3.9380193708844023`*^9, 
   3.938019395993537*^9}},ExpressionUUID->"5ab33e11-1049-4f33-9328-\
6e31e3250cfc"],

Cell["\<\
Spawn a new child process of the wolframscript from the previous section:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938019902011757*^9, 
   3.93801993205438*^9}},ExpressionUUID->"2c585e90-81b8-4538-8917-\
9e9779796576"],

Cell["\<\
import nodeChildProcess from 'child_process';

const wlProc = nodeChildProcess.spawn('wolframscript', [
\t'-noinit',
\t'-noprompt',
\t'-rawterm',
\t'-script',
\trequire.resolve('@wrb/wl'),
]);\
\>", "ExternalLanguage",
 TaggingRules-><|
  "ExternalEvaluateData" -> <|
    "System" -> "NodeJS", "ID" -> "DefaultNodeJSSession"|>|>,
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, 
   3.938019723289687*^9, {3.938019938915887*^9, 3.938019945156934*^9}, {
   3.938180400708089*^9, 
   3.938180408108204*^9}},ExpressionUUID->"ce7ed61c-b00c-48eb-91b3-\
fdf709556e56"],

Cell[TextData[{
 "wlProc can now be used to manage the subprocess.\n\nSet up an \
event-listener on the ",
 StyleBox["stdout",
  FontSlant->"Italic"],
 " and ",
 StyleBox["stderr",
  FontSlant->"Italic"],
 " channel:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938020032302916*^9, 
   3.9380201115933647`*^9}},ExpressionUUID->"a12f3568-17a6-48fe-897a-\
d5a7a1e2ab97"],

Cell["\<\
wlProc.stdout.on('data', (data) => {
\tconst dataStr = data.toString().trim();
\tconsole.log(`WL[stdout]: ${dataStr}`);
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.933310979418476*^9, 3.9333109928737125`*^9}, {
   3.933311032779745*^9, 3.933311033672554*^9}, {3.933311607356991*^9, 
   3.9333116077174883`*^9}, {3.933311706938936*^9, 3.933311724726237*^9}, {
   3.9333117812150583`*^9, 3.933311784877405*^9}, {3.933314611915098*^9, 
   3.933314614837021*^9}, 3.9333258337187023`*^9, {3.9366936451678143`*^9, 
   3.936693648033482*^9}, {3.938020130288909*^9, 3.938020132921867*^9}, {
   3.938020212081829*^9, 3.9380202156076527`*^9}, {3.938180093953933*^9, 
   3.938180100433715*^9}},ExpressionUUID->"548f95a0-130b-4a01-b4d8-\
63899ab19aea"],

Cell["\<\
wlProc.stderr.on('data', (err) => {
\tconst errStr = err.toString().trim();
\tconsole.log(`WL[stderr]: ${errStr}`);
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.933310979418476*^9, 3.9333109928737125`*^9}, {
   3.933311032779745*^9, 3.933311033672554*^9}, {3.933311607356991*^9, 
   3.9333116077174883`*^9}, {3.933311706938936*^9, 3.933311724726237*^9}, {
   3.9333117812150583`*^9, 3.933311784877405*^9}, {3.933314611915098*^9, 
   3.933314614837021*^9}, 3.9333258337187023`*^9, {3.9366936451678143`*^9, 
   3.936693648033482*^9}, {3.938020130288909*^9, 3.938020132921867*^9}, 
   3.938020212081829*^9},ExpressionUUID->"e19bce81-23da-4415-991e-\
eccb47b81b83"],

Cell[TextData[{
 "Set up listener on the ",
 StyleBox["exit",
  FontSlant->"Italic"],
 " channel:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938020233893955*^9, 
   3.938020243792815*^9}},ExpressionUUID->"cee5c676-35d8-4460-bcf5-\
128c98617679"],

Cell["\<\
wlProc.on('exit', (code) => {
\t\tconsole.log(`WL[exit]: ${code}`);
\t\tdialog.showErrorBox(
\t\t\t'The Wolfram kernel has quit unexpectedly',
\t\t\t'Will attempt to restart.',
\t\t);
\t\tstartWL();
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.933310979418476*^9, 3.9333109928737125`*^9}, {
   3.933311032779745*^9, 3.933311033672554*^9}, {3.933311376063273*^9, 
   3.9333113973176827`*^9}, {3.933311529718424*^9, 3.9333115354206486`*^9}, {
   3.933311597054674*^9, 3.9333116012346787`*^9}, {3.933311668873392*^9, 
   3.9333117285274725`*^9}, {3.933311767811081*^9, 3.9333118230609818`*^9}, {
   3.933314619366059*^9, 3.9333146201483116`*^9}, 3.9333258371157475`*^9, {
   3.936693657349063*^9, 3.936693664707168*^9}, {3.937980190374596*^9, 
   3.937980190847472*^9}, {3.9381799732494593`*^9, 3.938179983989708*^9}, {
   3.938180105740198*^9, 3.9381801090234127`*^9}, {3.938235546035348*^9, 
   3.9382355527840014`*^9}, 
   3.9382391148469477`*^9},ExpressionUUID->"5d288cc6-6005-4a1b-b388-\
f7faf5032ee0"],

Cell["\<\
The main process should send a message to the renderer process when the WL \
sockets are ready.\
\>", "Text",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.9380232295187674`*^9, 
  3.938023272624188*^9}, {3.938028161351969*^9, 3.9380282160923758`*^9}, {
  3.938180064944965*^9, 
  3.938180074162315*^9}},ExpressionUUID->"668569c8-fa33-4b87-8da2-\
41a4d194b94f"],

Cell["\<\
This can be done using the send method of the appropriate IPC mechanism, in \
the case of electron, using the mainWindow\[CloseCurlyQuote]s webContents \
object:\
\>", "Text",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.9380232295187674`*^9, 
  3.938023272624188*^9}, {3.938028161351969*^9, 3.9380282160923758`*^9}, {
  3.938180064944965*^9, 
  3.938180069990694*^9}},ExpressionUUID->"efaa6291-0c8f-4067-bd80-\
29c0bc5874d6"],

Cell["\<\
wlProc.stdout.on('data', (data) => {
\tconst dataStr = data.toString().trim();
\tconsole.log(`WL stdout: ${dataStr}`);
\tif (dataStr === `\"Type 'exit' to end process:\"` && mainWindow) {
\t\tmainWindow.webContents.send('wl-status', 0);
\t}
});
wlProc.on('exit', (code) => {
\t\tconsole.log(`WL[exit]: ${code}`);
\t\tdialog.showErrorBox(
\t\t\t'The Wolfram kernel has quit unexpectedly',
\t\t\t'Will attempt to restart.',
\t\t);
\t\tmainWindow?.webContents.send('wl-status', code);
\t\tstartWL();
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.9333128399910583`*^9, 3.93331286671278*^9}, {
   3.933313002958172*^9, 3.933313006746313*^9}, {3.933323984780077*^9, 
   3.9333239848713284`*^9}, {3.9333249490148487`*^9, 3.933324951691271*^9}, {
   3.933325804950432*^9, 3.9333258066870937`*^9}, {3.9340139295755444`*^9, 
   3.9340139296275234`*^9}, {3.936687333720639*^9, 3.9366873440243807`*^9}, 
   3.936693898797471*^9, {3.938023898544979*^9, 3.938023905500799*^9}, 
   3.938025537151651*^9, {3.938026285593543*^9, 3.938026304811417*^9}, {
   3.938085657686315*^9, 3.938085707516802*^9}, {3.9381805143762407`*^9, 
   3.938180518143736*^9}, {3.938235526171439*^9, 
   3.938235543216195*^9}},ExpressionUUID->"c5455ff9-7b4c-43d9-b0e3-\
2e0a7de0a739"],

Cell["\<\
Which can be picked up by an event-listener set up on the renderer side by \
the IPC API:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938023287141488*^9, 3.93802330188575*^9}, {3.9380282297957993`*^9, 
   3.938028241494359*^9}},ExpressionUUID->"eda66611-33ed-4049-b401-\
fb6608f54f79"],

Cell["\<\
api.ipc.on('wl-status', (code) => {
\tif (code === 0) {
\t\tconsole.log('WL Ready');
\t\tsetIsLoading(false);
\t} else {
\t\tsetIsLoading(true);
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.933312948095812*^9, 3.933312972797306*^9}, {
   3.933313008516678*^9, 3.933313024347046*^9}, {3.9333258182790813`*^9, 
   3.933325823017725*^9}, 3.9340139296943054`*^9, {3.93668734531726*^9, 
   3.936687362949833*^9}, 3.936693726468701*^9, {3.9379803482720613`*^9, 
   3.9379803488595953`*^9}, 
   3.93802740431273*^9},ExpressionUUID->"10a575dd-4491-49be-9e97-\
e8c7e7e72996"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d8ee5f5f-2dad-4b3b-9676-92a1e259181e"],

Cell["8 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.93818379081983*^9, 
   3.938183791566634*^9}},ExpressionUUID->"5d67e08f-31a8-4f7d-a3de-\
4b68f82a9fd8"],

Cell[CellGroupData[{

Cell["The IPC API", "Section",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938032074059279*^9, 
   3.938032076147352*^9}},ExpressionUUID->"e7667274-ed87-4691-8db9-\
b41b6a786eb9"],

Cell["\<\
The IPC API aims to abstract the interface between renderer and backend such \
that the front-end developer can call on the IPC API the same way regardless \
of deployment environment.\
\>", "Text",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.938032102647434*^9, 
  3.938032164649994*^9}, {3.938075592959779*^9, 3.938075601172502*^9}, {
  3.9380857583470783`*^9, 
  3.9380857607932663`*^9}},ExpressionUUID->"f36b0a0c-38b6-43b6-a1ac-\
224b7d5afe66"],

Cell[CellGroupData[{

Cell["API Handler", "Subsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, {
  3.93807571567177*^9, 
  3.938075717210944*^9}},ExpressionUUID->"15a06f4d-1b3c-479d-b9f9-\
bbf008a3f70f"],

Cell["\<\
This is done by parametrizing the handler within the front end, and passing \
in it within the different distribution sub packages.\
\>", "Text",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.938032102647434*^9, 
  3.938032164649994*^9}, {3.938075592959779*^9, 3.9380756406920443`*^9}, {
  3.938075721371497*^9, 3.938075785732827*^9}, {3.938076077953528*^9, 
  3.938076090227158*^9}, {3.938076185678652*^9, 3.9380761880536337`*^9}, {
  3.9381553197151327`*^9, 
  3.938155323799061*^9}},ExpressionUUID->"60628758-e2a1-4aee-8154-\
b93e243a1bc3"],

Cell["In the case of the electron handler:", "Text",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.938032102647434*^9, 
  3.938032164649994*^9}, {3.938075592959779*^9, 3.9380756406920443`*^9}, {
  3.938075721371497*^9, 3.938075785732827*^9}, {3.938076077953528*^9, 
  3.938076090227158*^9}, {3.938076185678652*^9, 3.9380761880536337`*^9}, {
  3.9381553197151327`*^9, 3.9381553199641848`*^9}, {3.938182168693119*^9, 
  3.93818216948709*^9}},ExpressionUUID->"1a68aca8-5468-4694-9865-\
e8e9e7220d01"],

Cell["\<\
// @wrb/web/src/renderer/index.tsx

const container = document.getElementById('root') as HTMLElement;

const root = createRoot(container);

root.render(
\t<React.StrictMode>
\t\t<Frontend api={window.api} />
\t</React.StrictMode>,
);\
\>", "ExternalLanguage",
 TaggingRules-><|
  "ExternalEvaluateData" -> <|
    "System" -> "NodeJS", "ID" -> "DefaultNodeJSSession"|>|>,
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938076059119588*^9, 3.938076140157394*^9}, {3.93818216607869*^9, 
   3.9381821778155193`*^9}},ExpressionUUID->"d0f30779-efd1-4f1a-9b1a-\
c0a6bccdc9ca"],

Cell[TextData[{
 "The ",
 ButtonBox["interface for the API",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
frontend/src/api.d.ts"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
frontend/src/api.d.ts"],
 " is defined as follows:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938032354695841*^9, 3.9380323886627617`*^9}, {3.938032667341598*^9, 
   3.938032688286586*^9}, {3.93803276568762*^9, 3.9380327656888437`*^9}, {
   3.938236285990486*^9, 
   3.93823628599244*^9}},ExpressionUUID->"a888845e-6568-4a9c-a795-\
1df076d1a22c"],

Cell["\<\
export interface Handler {
\tenv: 'web' | 'electron' | 'jest';
\tipc: {
\t\tsend(channel: string, ...args: unknown[]);
\t\ton(channel: string, func: (...args: unknown[]) => void);
\t\tonce(channel: string, func: (...args: unknown[]) => void);
\t};
}\
\>", "ExternalLanguage",
 TaggingRules-><|
  "ExternalEvaluateData" -> <|
    "System" -> "NodeJS", "ID" -> "DefaultNodeJSSession"|>|>,
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938032676071603*^9, 3.938032676506188*^9}, {3.938181665848036*^9, 
   3.938181671336755*^9}},ExpressionUUID->"60b3aa67-0705-4959-a06b-\
db7c0919ecf2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Electron IPC", "Subsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, {
  3.938035970242867*^9, 3.938035971756868*^9}, {3.938182068450644*^9, 
  3.9381820689691057`*^9}},ExpressionUUID->"873ca2bb-f120-4637-b081-\
0cd019cffcf9"],

Cell[TextData[{
 "Electron\[CloseCurlyQuote]s backend is the electron\[CloseCurlyQuote]s \
node.JS main process ",
 ButtonBox["exposed through the window object",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
electron/src/main/preload.ts"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
electron/src/main/preload.ts"],
 " before being passed to the frontend."
}], "Text",
 CellChangeTimes->{
  3.936686987246285*^9, {3.9366893556589727`*^9, 3.936689418582759*^9}, {
   3.937989566558893*^9, 3.937989583746419*^9}, {3.938074445681571*^9, 
   3.9380744561330023`*^9}, {3.9381820938180027`*^9, 
   3.93818210709302*^9}},ExpressionUUID->"bd44439b-c5d4-4186-ab22-\
9e4275f383b3"],

Cell[TextData[{
 "It uses ",
 StyleBox["ipcMain", "Code"],
 " when inside the main process and ",
 StyleBox["ipcRenderer", "Code"],
 " when inside the renderer. These can send messages and set up event \
listeners on either side."
}], "Text",
 CellChangeTimes->{
  3.936686987246285*^9, {3.9366893556589727`*^9, 3.936689418582759*^9}, {
   3.937989566558893*^9, 3.937989583746419*^9}, {3.938074445681571*^9, 
   3.9380744551935673`*^9}},ExpressionUUID->"012ab46e-6d32-40e2-9472-\
0186a8a683fb"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
covev+YX6TLGh3SZHh1/AACtsP6IxflI7hhvuUXvX/OLdBnjQ7pMj44/AIBW
WH/E4nwkd4y33KL3r/lFuozxIV2mR8cfAEArrD9icT6SO8ZbbtH71/wiXcb4
kC7To+MPAKAV1h+xOB/JHeMtt+j9G3V+ed/73lf99re/rb7xjW9UO+20U+ft
aSvHHHNMtXXr1upXv/pVddVVV1WveMUrduh9yj4rry/78L3vfW/nf9ekGB/S
ZXp0/AEAtML6IxbnI7ljvOUWvX8jzi+HHXZY9fTTT1d33nlntccee3Tenjaz
du3a6l//9V+rX//613Ut79JLL93h9yr77u6776735aGHHtr53zYuxod0mR4d
fwAArbD+iMX5SO4Yb7lF799o88tLXvKS6p577ql+85vfhK1htZFjjz22rgc+
8MADy3qfUlt99tlnq5/+9Kf1vu3675of40O6TI+OPwCAVlh/xOJ8JHeMt9yi
92+0+eWzn/1sXQe7+OKLO29Ll1mzZk29H5588sllv9fXv/71+r0+85nPdP53
zY/xIV2mR8cfAEArrD9icT6SO8ZbbtH7N9L8sueee1aPP/54fT3ba1/72s7b
02XK319qeOW7BJf7Xq9//evrffroo4+G+/y18SFdpkfHHwBAK6w/YnE+kjvG
W27R+zfS/HLSSSfVNbAbbrhhwWP77LNP/VjJuM+9jj5e6oqjj5V7axx33HHV
9ddfXz322GPVM888Uz300EP1/TbK9/WNa0upm5111lnVz372s7om98gjj9T3
NinX7b3tbW+rf8/3v//9Ba8r9/84++yzqzvuuKO+tu+JJ56ov8Pvn/7pn8bW
OPfee+9hu9/ylrcMt0+qB+68887VKaecUt14443VL3/5y/pz1eX3lN/35S9/
uVq9evXYv6c8v7zfCSec0Hk/j8b4kC7To+MPAKAV1h+xOB/JHeMtt+j9G2l+
ufrqq+ua1cc+9rEFjy2nHlg+ezz47O2VV15ZbdiwofrOd75T19LK9tNOO23O
80v98LrrrqsfK/fiKP+9cePGujZY7vPxyU9+sn7su9/97pzXlVrhL37xi+H3
/l122WV1Sq2ubCuvLbXE0ddsTz2wtOuKK64Ybi/tKvcbKX/TvffeW28v1wCW
6wHn759TTz11eL/mrvt5NMaHdJkeHX8AAK2w/ojF+UjuGG+5Re/fSPNLud6t
1KzG3UdkR+uBxx9/fL2tXN/3ute9bs5rjjjiiLquVj5Le/jhhw+3r1+/flg/
HG1LuTavXPu3ZcuW+vFSjxt97NZbbx3eE3i33Xab87ve//7314/df//9c9q/
++671/XJkte85jXD7ePqgUceeWS9rdQX518HWGqF5T3K46U+OH//lL+jPPbw
ww933s+jMT6ky/To+AMAaIX1RyzOR3LHeMstev9GmV9e9apXDet5477jbkfr
gTfddFO9rVwfN+73nn/++fXjl19++XDbv/zLv9TbLrroogXPL3W/wbV4o/XA
t7/97cNrAF/2speN/V2lzliuIVzK/hhXDzzggAOqD33oQ3Nql6Mp28tryr2E
5z9W9ulg/7z85S/vvL8HMT6ky/To+AMAaIX1RyzOR3LHeMstev9GmV/e9KY3
1bWqco3guMd3pB641157DT8T/Fd/9Vdj3/ed73xn/Xj5nO9g21133VVvO/HE
E8e+ZnAd3mg9sFw3WLaVzxU3sT925H4igzbM/xzzIOW7E8vjBx98cOf9PYjx
IV2mR8cfAEArrD9icT6SO8ZbbtH7N8r88jd/8zd1req+++4b+/iO1ANL3Wuw
bddddx37vgcddNDwOYPP+P7qV7+qf37rW9869jUf/ehHF9QDy2d0y7YvfOEL
jeyPpdYDDzzwwLo9P/zhD4d/xzve8Y6xzy3faVgef/Ob39x5fw9ifEiX6dHx
BwDQCuuPWJyP5I7xllv0/o0yvwzqgeX79cY9viP1wL/+678e3hNk0u8tn8Ed
vK68R9lWanDbqpsNvgtwtB547bXXDt9nsZx55pmL7o9t1QPLY+UaxcG9Swa5
5557qmOPPXbie5Z9qx64faKMD5n64w8AoBXWH7E4H8kd4y236P0bZX455JBD
lvx54cW+X3Dc9YG77LLL2PcdvT6w3NujbHv88ce3eX1g+Q6/+fXAq666qt52
++23V1/72tfGplz7WJ5T7k+82P6YVA8s9xQp9zkpjz3zzDPVpk2bqjPOOKOu
fZZ7imzrPX1eePtFGR8y9ccfAEArrD9icT6SO8ZbbtH7N8r88spXvnLJ9b75
9wkuGXc/kr333ru+d3DZVupr437v0UcfXT/+6KOPDreVml7ZdsIJJ4x9zeB7
+kbrgV/60pfqbVdcccXEv/FHP/pR/Zxjjjlm0f0xqR44+MzvBRdcsF33BRm9
n8ik+510EeNDukyPjj8AgFZYf8TifCR3jLfcovdvpPml1ORKvarcW2T+Y6P1
wPJ53fmPD64FnP/Z4M2bN9fbP/axj439neecc079+NVXXz3cVq7lK9suvPDC
sa8ZvOdoPfCoo46qtz300ENj65mlXlmu5ysptc/F9sW4emC5P0rZVmqcg+86
nP87jjjiiLHvf+ihhw7b13U/j8b4kC7To+MPAKAV1h+xOB/JHeMtt+j9G2l+
+eY3vzmxdjeoB5b7Bf/sZz9bcG3cpz/96frxW265Zc72k046qd7+yCOPLLjH
8Bvf+MbqiSeeWHAPjre//e31ti1btiz4bO2HP/zhuqY3vx648847V7fddtuw
jlh+HjxW6njXXHNN/dhll122pH0xrh5YPg88qJmuW7duzvNLfbDUNMtjp5xy
yoL3O/XUUxu9/3FTMT6ky/To+AMAaIX1RyzOR3LHeMstev9Gml/e97731TWr
G264YcFjg88DP/zww/X35ZXPzX7+85+vv8vvK1/5yrBGV95j9HWlhlZqcOWx
p556qvrWt75VP7/U5wb3DSk/z/99pW5WHivf1Vf++/zzz68/71vqh+M+L1yy
Zs2a4T0+7r777rouWD4/PNh2xx13VK94xSuWtC8mfV548N2FpS56/fXXV5dc
ckndvnLdX9lerl186UtfuuD9yvcMlsePO+64zvt5NMaHdJkeHX8AAK2w/ojF
+UjuGG+5Re/fSPNL+ZxtuZ9I+Tzs/O8I3G+//ep61r333lv/XL7br9Tnfv3r
X9d1vlIHK9cCjnvfUhM8/vjj6/pdef/ymeJyvWC5J/D69evHvqZcb3f66afX
db1SkyvPv/LKK6sDDzxwWLecXw8sKZ/V/cIXvlDdeeeddS2x1A9vvfXW6nOf
+1x9neBS98W27i9cPptc6pmlBljqoOVvKn//Zz/72fo7E+c/v9Qpyz4tf8Pg
nilRYnxIl+nR8QcA0Arrj1icj+SO8ZZb9P6NNr+UGlypg5Xr3rpuy6Rsqx4Y
MYPrI0877bTO2zI/xod0mR4dfwAArbD+iMX5SO40Md5mXr5mJptnsn4570Pz
Vmo+ne3z55bb59Hml5e85CXVT3/60/rzsOUeGF23Z1zaqAeWaxrLvhh335Dt
yV//9V/X1waW6xyX+14rkejrjWjjQ6b2+AMAaIX1RyzOR3JnOeNttia0dfYt
Nu/Ie7CyVnI+na0BV8upC0acX0odsHym96677hp7r96u00Y9cFufF15qyr4b
fN75kEMO6Xy/jUv09UbE8SFTefwBALTC+iOWvp6PlPtylvPZkh/84AcTn7d6
9erh88r5/6TnHXnkkcPnLZbRe4VGz46Mt3l1wGXVg1hZK1wPXFPNtd3HQdT5
5b3vfW89lq+66qr6Wrmu2zOaPtQDyz4r+668R/muxa732aREX29EHR8ydccf
AEArrD9i6ev5SPmuqkF9rnzn/bh7XpaceOKJc2p5+++//9jnDeqB5bNvpW64
raxdu7bzv3+p2Z7xNqYOOLB5Ka+nfSs9n1Z/vkZwh+qCfZ1fJEeirzeMj9zp
0fEHANAK649Y+no+csMNN9T1u3IP0PL/73znO8c+79JLL60f/+EPf1j//ymn
nDL2eYN6YLlfZ9d/W5NZyngbUwf8/0b++/dLrf3QvhbqgfOvEdyuumBf5xfJ
kejrDeMjd3p0/AEAtML6I5Y+no/stdde9fd/lXsCHHfccXUd77zzzhv73Acf
fLD+TNzxxx9fP++aa64Z+7xprAcuUgcc2DzutcTQxnxajb9GcEl1wT7OL5In
0dcbxkfu9Oj4AwBohfVHLH08H3nXu95V1+5uvvnmap999qn/+4477ljwvDVr
1tSPbdq0qfqLv/iL+r+3bNlS31dz/nOnqR64xDpg4drA4FqqB27rGsFRz80/
Xvo4v0ieRF9vGB+506PjDwCgFdYfsfTxfOSrX/1qXbs799xz659LLbD8XGp+
o8/7yEc+Um8/88wz65/vueee+udS+5v/ntNQD6yWXgcc2DzxwCGEtubTavFr
BEc9V83WBfs4v0ieRF9vGB+506PjDwCgFdYfsfTxfOSBBx6oa3fvfve76583
bNhQ/1zuHTL6vG9961v19nXr1tU/X3DBBXPqiKPJXg+stq8OCE14bvAfXY8D
mc6MHH8hGR+506PjDwCgFdYfsfTtfOTggw+u63bluwP33nvvetsxxxxTbyv3
Dhk8b+edd64ef/zx6qmnnhp+PvjYY4+tn3f33XcveN8pqwfCjtqeWvJzg//o
ehzIdGbk+AvJ+MidHh1/AACtsP6IpW/nI6eddlpdt/vBD34w3FbqgqU++Itf
/GK47fDDD6+f92//9m/DbS9/+cvr55XtBxxwwJz3zV4PnO3r+Z8XXszmyUcO
EbQ1n1Y+Lyw9TPT1hvGROz06/gAAWmH9EUvfzkduuOGGum53xhlnzNle6oNl
e7mHSPn59NNPr3/+xCc+Med5N910U729fLfg6PZpqAeO9Pn21AXXzD9miKON
+bT68/1EFrs28LnK/UQkUKKvN4yP3OnR8QcA0Arrj1j6dD6y1157VU8//XRd
tyvX/40+VuqDZfuHP/zh+udB3fANb3jDnOedddZZ9fZvf/vbc7ZPUz1wpO+X
UhfcPO61xNBSPXDz9tYBx7RPpPVEX28YH7nTo+MPAKAV1h+x9Ol8pNw/pNTs
yvcClu8HHH3szW9+c/3YVVddVX9f4NatW6uHHnqo2mmnneY8761vfWv9vCef
fLLafffdh9unsR44cgwsVhdcs63X052Vnk+rP18buF11wDHtE2k90dcbxkfu
9Oj4AwBohfVHLH06H/nqV79a1+yuvPLKBY8N7h/y6KOPVm95y1vq51122WUL
nrfbbrtVW7ZsqR8/6qijhtunuR44sI264OalvJ72tVAP3LwjdcAx7RNpPdHX
G8ZH7vTo+AMAaIX1Ryx9Oh954IEH6prdySefPPbxcm1gefz888+v///EE08c
+7xrr722fvy8884bblMP/LMJdcE12/MetGMl59Nq4bWBS64DjmmfSOuJvt4w
PnKnR8cfAEArrD9i6cv5yMEHH1zX60r222+/sc/54Ac/WD8+uP5v9erVY5/3
8Y9/vH78nnvuGW5TD1xoXl1w8468BytrheuBm3e0DjjyHr2YX3Yk5XsJypxR
vptg/mO77rpr9cgjj9TzyR577LHg8cF9zst7jG4/4YQTqltvvbV+z3K9c/ke
1He+8531Y+Xa5o0bN9bvWb4LYe3atdVrX/vasW3YsGFDvf3ss88e2/bB41/6
0pc6348rmejrjczjQ3p1/AEAtML6I5a+nI+cdtpp9fnr3XffPfE5+++//7Bm
eNttt0183kEHHTR8XjmfLtvUAycbqQuuWc770LyVmk9n+3yH64Aj79OL+WVH
sq164DHHHDOcY0qNb/7j4+qBRx999PA15RrmUrP77ne/Wz/31FNPrY4//vj6
saeeeqq68MILq0MPPVQ9cJFEX29kHh/Sq+MPAKAV1h+x9OV85Hvf+96Cz/iO
S7nmrzzvy1/+8jaf94tf/KJ+3kc+8pH6Z/VA+mgl64ENvU8v5pcdybbqgd/8
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
6w+A6aAeKF3GegMmMz4AgLZZfwBMB/VA6TLWGzCZ8QEAtM36A2A6qAdKl7He
gMmMDwCgbdYfANNBPVC6jPUGTGZ8AABts/4AmA7qgdJlrDdgMuMDAGib9QfA
dNjReuCRRx5Z/fa3v92uXHfddcPXf+1rX6u3nX766Qve+6CDDqq+/vWvV/ff
f3+1devW6rHHHqtuueWW+rl777332Pbst99+1YUXXljdd9999Wsef/zx6t/+
7d+qt7/97Queu//++1ff+973qqeeeqp+3gUXXFBvP/bYY+s2/ehHP9rm337Y
YYdVGzdurB566KHq6aefrt+jvN9JJ51U7bzzznOeu88++wz//pe85CUL3mv0
8T333HNJ+/7ss8+un3/NNdfM2V7ef/Beb3rTm5Zdq3vzm99cffWrX63uvPPO
6sknn6yeeeaZ6uGHH66uvfba6gMf+EC12267qQfCCjI+AIC2WX8ATIfl1gOf
ffbZ6q677lpSLr744kXrge95z3vqGlt57Cc/+Ul1ySWXDGtvZVt5n1e/+tVz
XnPIIYfUNbny+AMPPFDXyUr9cFAbO/XUU+c8v7xf2V5eU2pb559//pLrgaXm
95vf/Kb+u0t9c8OGDfX7/frXv65fe/XVV1e77LJLr+uB5X1KX43Wch999NG6
1jrom5Kf/exndW10R3/PyOFnvQFjGB8AQNusPwCmw3LrgU888cQO1YHG1QPL
NX5btmypt3/oQx+a8/xdd921uuiii+rHSv1tsL3U3u6+++56e7mWbbQW9453
vKO+pq3kr/7qr4bb77333vr57373u+f8jsXqgQcccEB97WGpBc5/7b777lv9
9Kc/rV9/2mmn9bYeWK5vvPHGG+v3KPvtnHPOqV7zmtfMefyoo46q91F5Tumv
ww8/XD0QVoDxAQC0zfoDYDpEqgeeddZZ9bZNmzaNfU35fOoJJ5xQvepVr5pT
8xtcv7b77rsveM1VV11VP37GGWcMt5Xnlm1vfOMbt6se+IUvfGF4DeC4x//u
7/6ufvzBBx+sdtppp17WAz/72c/Wry/XQB5zzDETn1f6YrBvyzWZe+yxh3og
NMz4AADaZv0BMB0i1QMH15zNvzZwW/nSl75Uv+aKK66YWLcqdbbR77ob1AP/
w3/4D9tVD/zxj39cP/7BD35w7OMvfelLh/W4173udb2rB5aaXunP8vpSm13K
88u1lrfeemv1+te/Xj0QGmZ8AABts/4AmA6R6oGDOt3RRx+95Pf5xje+Ub/m
zDPPXPJrdrQe+Mtf/rJ+fN26dYu+d9k/q3pWDyzf3VheW+6z8vKXv3xJrymf
kx5cC7kjsd6AyYwPAKBt1h8A0yFSPbB8N99S71U8qMmV+4GUnz/zmc+seD1w
0L5y391J710+O1ues379+k7rgbfddlv9d4ym3AP50ksvrY4//vj6+xjnv2+5
N0p57Xe/+90dru9tb6w3YDLjAwBom/UHwHSIVA987LHH6m3lvr3l8XEZ1OQO
PfTQ+jWD77D7/Oc/31g98M477xz7ukH73va2ty363uWeG6vm1fvGfcfeStUD
F0upF+6///5zXj/Yl+edd556IARgfAAAbbP+AJgOy60HLjXle/5GXz+uHnjz
zTdv8/sDSz2t3OeiPOdlL3tZvW3w/YEXX3xxY/XAxx9/fOxnYG+55Zb68ZNP
Pnli+wZ/70EHHbSg3jf4TsHRlHujbKteOC478nnh8vesXr26vm5xcB/k22+/
fc51goP7Cm/PZ6+XG+sNmMz4AADaZv0BMB2WWw8s9bmf/OQni+bjH//4ovXA
SXWuQUotqzxe7l8x2Da4v3C5r8XOO++84DXf/OY3qzvuuKN697vfveR6YMkR
Rxyx4L3OOeec+rHynuPaV+7HWx4v1xHusssuC+qB73//+xe85uCDD64fe/rp
p5e875f7/YH77bdftWXLlvp55X7Ng+2Dz16Xv3N7j4cdjfUGTGZ8AABts/4A
mA6RPi9cPr86rk5VcsABB1T33HNP/dgHPvCB4fZSd7v77rsXvFfJu971rurZ
Z5+tnnnmmfrauMH2SfXAwf00yncA3nDDDdXuu+8+5/FyD91StyvvOfh+wEHK
/TfKZ3DL67/4xS8Otw/qgaVu+rOf/WzBfTo+/elP14+Xaw+Xuu+auJ/IlVde
WT/v61//+nBbucZyW/XYlYj1BkxmfAAAbbP+AJgOkeqBq2ZrcqXmVh7btGlT
df7559f1qUGd8IorrljwWd5DDjmk/oxvefyuu+6qvwfvpptuGtbGTjrppPp5
5TsHSy3tySefHH7GuPw8uBfw3//939fbL7/88ur73/9+9dBDD1Xf+c53qk9+
8pPD3/XBD35w+Jnlcn+O0r7y/MG9h8vvHf0ewMHngR9++OHqjDPOqGuN5bsO
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
PgAgH/VAAFicf99yUw/Mnejjt4JAuh4PALSj6XnfvyMAZOTft9xG+lcSJvr4
baHEA0vW9XgAoB1Nz/v+HQEgI/++5TbSv5Iw0cfvmHqMSOuJPk4AaNZi8/7M
Q3vO5IiZfGgm583k2pncNZMtM/lvM3luJv97Jv/vTP44spT54+y2/z37nP82
+5q7Zt/jvNn3LO+9Z5t/MwBsL+dJuanD5E708aseKBESfZwA0KzReX/m//af
yckzuXwmD87kf8xfn6yg/zH7Oy+fbcP+Xe8bABhwnpTbSP9KwkQfv/MXxasC
7DOZvkQfJwA0Z2a6f+3I0uP/Hlek++Mf/1j99//+36uHHnqouv7666sLLrig
Ou2006rjjjuuWrt2bXXggQdWq1evrvbaa69ql112Gf57Uv67bCuPleeU55bX
lNeW9yjvVd6zvHf5HROUNt08k8+Utna9vwCYXs6TclOHyZ3o41c9UCIk+jgB
YHlmpvijZrJxJr+bv/Z4/vnnqy1btlTf+ta3qlNPPbU67LDDWvv3p/yu8jvL
7y5tKG0Z43ezbT+qrf0FAIXzpNzUYXIn+vhVD5QIiT5OANh+M9P6387kmmre
53//8Ic/vFiu0duwYUO1bt26zv8Nmp/SptK20sbS1nlLpf8x+zf97cruPQBY
pR6YnDpM7kQfv+qBEiHRxwndGHeRDvl0fZzRrJku3bf60z075lwH+Nxzz9Wf
1T3xxBM7/zdne1PaXNpe/oZ5fjf7t+67MnsTgGlnvZTbSP9KwkQfv2POy0Ra
T/RxQjeWU2OiP7o+zmhG9afPA9882rf/63/9rxdLHe1d73pX5//ONJXyt5S/
qfxt8w7l8rf7PDEAjbJeym2kfyVhoo/fMedlIq0n+jihG+al3DHuc6j+dE/e
X42uJcrnbD/60Y92foytdMrfWP7Wecq+OLm5PQzANLNeys35Tu5EH7/qgRIh
0ccJ3TAv5Y5x328zXfeRmfyXQT8+//zzL37729+uDjnkkM6PrbZT/ubyt5d9
MLKkKvvmI83sbQCmlfVSbs53cif6+FUPlAiJPk7ohnkpd4z7fprpspNm8ptB
//3+979/8YILLqj22muvzo+prlP2QdkXZZ+MLK3Kvjpp+XsegGlkvZSb853c
iT5+1QMlQqKPE7phXsod475fZrrqrTN5cLQOeO6553Z+HEVN2Tfz6oJl3711
OX0AwPSxXsrN+U7uRB+/6oESIdHHCd0wL+WOcd8PM12050yuHfRX+UzsRRdd
1Pnx05eUfTXvc8RlX+65o/0BwHSxXsrN+U7uRB+/6oESIdHHCd0wL+WOcR/f
TPec9sILL/zPQV+V++quXr2682Onbyn7rOy7gdl9etqO9QoA08R6KTfnO7kT
ffyqB0qERB8ndMO8lDvGfVwz3bL/TO4a9NGWLVuqI488svNjpu8p+7DsyxFl
H++//T0EwLSwXsrN+U7uRB+/6oESIdHHCd0wL+WOcR9T9adrAv9P6Zs//OEP
L37xi1/s/FjJlrJPy74t+3h2X7tWEICxrJdyc76TO9HHr3qgREj0cUI3zEu5
Y9zHM9Mdmwb98vOf/7w68MADOz9Osqbs27KPR2zanr4CYDpYL+XmfCd3oo9f
9UCJkOjjhG6Yl3LHuI9jphve+uKLL/7XQZ+4b3B7Kft6YLYP3IMYgCHrpdyc
7+RO9PGrHigREn2c0A3zUu4Y9zHMdMFnZvLH0he/+93vqnXr1nV+bExbyj4v
+35W6YvPLK33AMjOeik35zu5E338qgdKhEQfJ3Qj8rz0F3/xF9UZZ5xR3Xzz
zdWjjz5abd26tXrggQeqa6+9tjrppJOq3XbbbeJrjzrqqOrqq6+uHnzwweqZ
Z56pX3vfffdVl112WXXooYeOfc1BBx1Uff3rX6/uv//++vmPPfZYdcstt1Sn
n356tffee8957j777FP99re/rfOSl7yk8301KcZ992Z2/8ZBP/z4xz/u/JiY
9pQ+GLFx8R4EIDvrpdwin+/I8hN9/KoHSoREHyd0I+q89J73vKf61a9+Nay5
le8Au+uuu6rHH398uO22226r1qxZs+C1p5xySvXss8/Wzynn/pdffnmdUlcs
237zm99Uf/d3f7fg9z399NP14z/5yU+qSy65pNq4cWP10EMP1dvK7371q189
fL56IEsxs+tvH/TBhg0bOj8e5E8pfTHi9sX6EYDcrJdyi3q+I80k+vhVD5QI
iT5O6EbEeelv/uZv6mv6Sq3t4osvrv7yL/9y+NjOO+9cP15qduXxcs1fqc0N
Hn/Zy15WbdmypXriiSeqt7zlLQveu9T9yusefvjh+r3Ktv32269+Tdn+oQ99
aM7zd9111+qiiy6qHyv1wcF29UC2ZWaX7zuTLWXfP//88y+efPLJnR8LMjel
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
N9QD80Y9cHlm9tueL7zwwv8sO/CLX/xi5/0psVKOiWL2GNlzFQC9VM29RnB9
1+2heeowuRO9zqEeKBESfZzQjZlDov5Q6ebNmzs/RqXZqAcuz8x+u7bsvC1b
tnTelxIz5diYde0qAHpr9hrBrV23g5WhDpM70esc6oESIdHHCd1QD8yb0qez
PruK7TKzz9462HlHHnlk530pMVOOjRFvXcWKmr+eJqeujzP+pOvjgHZ0fZy1
ZeTvlYSJfjyPGXcirSf6OKEblXpg2mzdunUw7NevYrvM7LMHy467/vrrO+9H
iZ1yjMx6cBUrqtGTYMLq+jjjT7o+DmhH18dZW0b+XkmY6MfzmHEn0nqijxO6
Uc1+Z0qpHa0KcJxKc1EP3DEz++ukstOef/75F1evXt15P0rslGOkHCuzY+2k
VawY6+jcsU6NxXjLnWkbb47n3Il+PKsHSoREHyd0Y+aQWFOOi+eee67zY1Sa
TenTWWtWsWQz++s3ZadddNFFnfeh9CPlWJn1m1WsGOvo3LFOjcV4y51pG2+O
59yJfjyrB0qERB8ndMfclDPqgdtvZl99pOyw3//+9y+uCtCH0p+UY2Z2vH1k
FSvCv1W5Y50ai/GWO9M23hzPuRP9eFYPlAiJPk7ojrkpZ4z57Tezu/5L2Wfn
nntu5/0n/Uo5Zmb9l1WsCP9W5Y5/s2Ix3nJn2sab4zl3oh/P6oESIdHHCd0Z
HBtr1qzp/DiVZlL6ctb/z957BstR3Wu/AwiDREYiiCgQwSIHgQQYvAGRQTaY
ZEQQmAxCIggk4jYZgQgCBNiSNlEiiAwmCUQ6p94PvOX7xbfquFx31ymfL751
6v1CvdStekHrztOaNfT07kl790z/Z/XvV/WUtDuu6fVfs1Y/s8JgMr8hnfKz
mq4HRt9ANFzF+ghOL0Hm0I4OW7RTbUF5C1tFK2/Ec9iyHs/4gciCrJcTyA95
RviBYQk/sH3Kz+oTPbC5c+fmnn+oN6XYqfBJCTKHdnTYop1qC8pb2CpaeSOe
w5b1eMYPRBZkvZxAfpTDYrVio6+vL/c4RdlIeVlhdTK/YSjl5zRVD0vrxI4Z
Myb3/EO9KcVObK3hqSXIFNrRYYt2qi0ob2GraOWNeA5b1uMZPxBZkPVyAvlR
DosBxcbMmTNzj1OUjZSXFQaS+Q1DKT+npXpYjzzySO55h3pbiqEKS0uQKbSj
wxbtVFtQ3sJW0cob8Ry2rMczfiCyIOvlBPKjHBb9io277ror9zhF2Uh5WaG/
BA0pP6Ox/mHtueeeuecd6m0phmKMLUFm0I4OW7RTbUF5C1tFK2/Ec9iyHs/4
gciCrJcTyI9yWESdyQYGBnKPU5SNVq9e7Yv8zBI0pPyM5uhBvffee7nnGwpD
iqUKc0qQGbSjwxbtVFtQ3sJW0cob8Ry2rMczfiCyIOvlBPKjHBbRZHPykEoG
YhWNXDE/sK8EDSk/o+/0oM4666zc8w2FIcVShe9KkBm0o8MW7VRbUN7CVtHK
G/EctqzHM34gsiDr5QTyhe+nsDQ4OOizdEIJ6lJ+PofoIf3rX/9aUzKQbygc
KaYqZfCQEmQC9VTYop1qC8pb2CpaeSOew5b1eO4VP/BPf/qT+/bbb93vf//7
mu033HBDtP2qq65KPc/vv/baa2u2T5061T300EPunXfecV999VXUX2XlypXu
zjvvdJMmTRpyncmTJ7vly5e7L7/8Mhprc8opp0TbR40a5S677LLoXF1H++65
5x43ceLEaP/48eOjtOv6K1ascBtvvLE7+eSTozQ9/vjj1evrOG37+uuvUz/H
4Ycf7h5++GH3wQcfVNPw5JNPRulYd911a449+uijo2vpvnnnW6uyXk4gX6x/
P6HWNWHCBJ+dg0MyGmooP6MFelCLFi3KPd9QWFJMVVhQgkygngpbtFNtQXkL
W0Urb8Rz2LIez0X0A8844wz3zTffRNuXLFni+vv7Iy1durTqyR177LHV4+W3
yX/TvjfeeMMtXLjQ/fa3v432XX311dF2+X2aI//mm292L774ovvss8/c/vvv
72655ZZo/5tvvhmlZaONNmrbD5w9e3Z1n86ZP3++W7Bggfv888+j7Q888ECN
J4gfCKEh70jxIS+pZCBe0fCFH9g65Wf0Dz2oo446Kvd8Q2FJMVXhHyXIBOvt
aDQy0U61BeUtbBWtvBHPYct6PBfND9xkk03cqlWrIr9uv/32G3L8McccEx3/
/vvvVz22bbfdNtomD3GzzTarHvuLX/wi8gG1T/334tc57bTTIu9QfQK1Xx6d
39eOH+i9vU8//dTttddeNfu22GKLyM/U/tNPP33IOfiBEArl0BhQfMycOTP3
WEUjU19fny/uq4fmNHjKz2dqZJoODuaeZyhMxcbtTy3BiLHejkYjE+1UW1De
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
tE5wcr8fm6z5AfX36aefXq13Fy1aFM0/orXElEY/v7DGCcevEep8voq5Cvs3
j1RIg3opbNFOtQXlLWwVrbwRz2HLejzjB3Zf+IFDZb2cgC1cZcxwsj8Rsifl
UYXB+jkKovyMTteDSuv7lpda9QMvu+yy6BiN1Y1vb3U+23322Sfy4vz8v/r9
TfW+5rZTGvxx8tV0PXl5yTTEx+b6NcHiuvbaa6N9WjPEb9MaJfIy9cy1pog8
SPmAM2fOjPoUpn3WEOfz1WeocHqjGIX6WG9Ho5GJdqotKG9hq2jljXgOW9bj
uVf8QBS2rJcT6CzlrJ/Q5vFRH0H10SkZiF9UX7G+gTPrZihElJ/RHD0o9VUr
Gcg7qVU/0Pt0ST8wTdbns+20LH5+xVyFOSUYFrSjwxbtVFtQ3sJW0cob8Ry2
rMczfiCyIOvlBDqP7L2y+ts4flAxQx9BuxpO30B5w27tHJF9rZ6TN5U0D440
zeXzF+phWeo71swP1Fx76qvnx+laGweLWpNirsLC0ggoePmlHR2wsmin9mL5
yBrKG2pFRXsvJJ7DlvV4xg9EFmS9nEDncT/PCzjYii/o6CNoXu30Day8I/gT
Bpodb43KO56P375hXmO5LjBjxozc884r7ge+/PLLbunSpVWtWLHCrVq1qrpf
8+PFx/ai3pFirsLy0jCg/JZ4nwtcI2mn9nr5yBrKG2qmor0XEs9hy3o8uwQl
A88MFU/Wywl0h0rb0KP/97dyPH0E7anVvoGJ96QRvR/kSeVzuJF8jvLxq3Ti
tGnTcs8/r7gfmJT83nfffTdaH0Pz5K233nq5pxcNT4q5CqtKbUD5rblGx9rR
mg9T81xqXk2VuzfeeMPNmjXLjRkzxl1++eVReTz//PNrztHcmFonW3Nyam5M
nbdy5Up35513ukmTJqXeR+tm33777e7NN9+Mjtd63FqH56KLLkqdT/Oqq66K
7q20xbe3Os9Aq9p3333dLbfc4l555ZVo/k19nvfffz+an0DfPeqn3InnHtdw
2qmhlI+ssVje6s1Tr7Xjtf2zzz4b8T20tr3WnL/vvvuqZcyXZ825oTLbynX+
8Ic/RGl6/vnnW7735MmTo3NUfnxZHunc/PXKfxYaTnnrZTpZf6D8ZT2eE9/H
uT8vVExZLyfQHVxs7eBEO7G/0fH0EbSnZn0DU96TPANpx/cC7uc+D8N6zykf
91edcOCBB+aef6hYUsxV+GupBSi/qef7dkym2nLLLSMfUO/dTz75ZPTuLmld
a3l1WuNa+84555zqOVrnWutda/uSJUsir0FSv16/dt2xxx5bcx/5FFofx/sM
yfW2ly9f7rbeeuuaczrtB+o68+fPr/kdQuv4yNf0aZVef/11t9dee3W0jMTy
t5VYCK58ZI218tZpP1Blx9/Dl0F59W+//Xa1rPq1JlXmG11rm222qc7Rsfvu
u7d0/7vuuis6Xn5/s8/cqvADs6NT9QeyIevxnPwiLhl4Zqh4sl5OoHu42j6C
yXZif73j6SNoR1qb1edZSn4l35P+T+z//2z1XcAibmifh2T89jU5P4rlXXbZ
Jfc8RMWSYq5emY1D+W14fkQp47yRz6d3bnl/6l8U3ycv0PtiZ599drRtk002
icbxy7/Yb7/9hlxPvp+OV/86f71tt922OvY/uXb3qFGjovWxtU/+YHxfJ/1A
pe3pp5+OrqH+gNddd53bbrvtavarP5X3NJR+rVOe9fP3iuVvsxgKsnxkjbXy
1kk/UF6gypuuozXszzzzTLfppptW92+44YZu+vTpkT+oYzQXx2abbdbwmuob
q2Nnz57d9P4bbbRR1C9Qx++///5NP3Orwg/Mjk7VH8iGrMdz8gu4ZOCZoeLJ
ejmB7uHS+wgm24n9seOrA1PxBPPXhAk1TfyZsXxq9J7kGUiLiV7Cpfd5SMZv
X51z/1sHjBs3Lvd8RMWSYq7Cf5dSoPy2VH4jShnnzW233Ra9c1955ZVD9skz
8D5e3A884YQT6s47oPWt1X9b52y11VbRtiuuuCL6e/HixannaDyurpnst9RJ
P1C/K/l+VEceeWTd45S2+++/Pzr2rbfeiryVrPMglr2uTt4XonxkjaXy1ik/
UOVNff50Dfl9O+ywQ91j5RuqH66O1ZjiRtc96qijqv1lm42Xl9fo+/i28plb
FX5gdnSq/kA2ZD2ek1+8JQPPDBVP1ssJdJcm7cN4O3Fm5fioTTk4OJh7LBdZ
8gKVBxUGKnnTynuSCKLvhGvc5yEZv32Jc/+3dmhOsJKB/ETFkWKuwv8uxaD8
tlV+I0oZ5433us4999zU/X4MsPcDm8n7G/IE/Zyf3hdI9g1spk75gfL05L/o
fHmVrRyvOdheeOEFt/POO3ekjMTyNxkvhSkfWWOpvHXKDzzggAOqZeHQQw9t
erzmClWfX8392Wh9LpVdP5a/2W/hWutLx5133nktfeZWhR+YHZ2qP5ANWY/n
5BduycAzQ+3L/36sOZ/zTstw1IhSHQp6/GBSDY5fnaYGxw+kqcHx/QmpX9/M
Bsdrf19SDa7dKoOVa+nzMZdgjhoYGIjnSavvSZ66sdZruOZ9HobEb+W8H7WB
dTlQt6WYq/BjSRsov8MpvxGljPPmgQceaOj3eb+wkR+ofoDq36c+R37esWuv
vba6X32MtO2www5rK22d8gP9mOYvvviiZlxlI40dOzbqi5X18/eK5W+hy0fW
WClvnfIDb7zxxuh8Xb/Vc1odI+D79bYieYxbbLFFS5+5VeEHZken6g9kQ9bj
OflFWzLwzFD7wg/k+KIc3wqMG+6+YnMGisHY/5u9J8FaBv1/8s5LVEzFWB37
P+W3NQb9f7LOl2Z+4L333pu6X2uIqk344osv1vgCWpvk4osvrpmL0I8fbkVa
p9Sf14ofqPvLd4hLa6Hccccd7vjjj4/mJ0x+phtuuCE694knnsi9XFA+TDLo
/5NV/jbzA+WjJ+P4ueeei8YCK14POuig1Ou+9NJL0flqI2Udk5pP069FojWA
VK6S8l5/2vhj/5m11nHys2nuAJ2j+Us1B0Ha/fEDsyPreEa2ZD2ek1+wJQPP
DLWvUPzAEjTErf1NukYNjh3SF881GK/iKv37kmpwfLJ/4IBr3J9Q+1cn1eBz
tsugi809iCfYPSXmDOx36esqFpF23hUH/X/yzk9UTMVYnVH89zomyu9w/ECt
P6o1eL0nJ09C6w6o/1/aGMSPPvqourap2pNp8p7hpEmTque14gc2k/zC8ePH
15zv+zzOmTMn93JB+egauZa3Zn5gK9J6O8ny5cvWr3/9647EpZ+bMM1vlOf/
7rvvRvu19k69z9xM+gyHHHLIkPPxA7Mj63hGtmQ9npNfsCUDzwy1L/xACAnX
Xnt7wMV8Thcbe4In2Hkl+gX2x/IhOZ6qaT42iolewjFeGPWYWhgvTPltXn4j
ShnnzXD8QPW90zbNG7bjjjs2vYefg7De/IGan8+PM473FRrOeGGN6dV4SNXP
r776atWvjPcT9OsKX3bZZbmXDa9Y/ha6fGSNlfI2nPHC+t7cfvvtoz50n3zy
SXSc1vz2++XHpfWrzVJ+bL3mz0yOl//Vr34V7dM6O8m1yRt9ZknlXOuTe79R
nz+5Fgp+YHZ0qv5ANmQ9npNftCUDzwy1L/xACAUXWy+4CQOu/vyDA/6gTozR
QGt11113xfOjv05etPPeNCHtGr2E+7lva7O+DoPJ+HWsJ4JyUhvriVB+65ff
iFLGeTMcP3DZsmV1PQh5GNqusYZ+W7P3enl32q/1OuLbRzp/4LbbbltdH1nz
G/rtCxcujLZdd911uZcNr1j+JuOlMOUjayyVt5HOH3j00UdXxxUrrv12zYGp
7Y3WyB6JtLbwBx98EN3j4IMPrtn34IMPRtv/8Ic/tPWZ49L3hcYi67h58+a1
VP6zUFp5C5lO1R/IhqzHc/ILt2TgmXk1Gm/w1VdfReu267tO848060+x+eab
R99bL7/8svv888+j7/UVK1a466+/PnXtd/2OcsYZZ0S/Uf7lL3+Jvt91ns6f
NWvWkLleG/lxWj/e9xeP//aqteK0NpTGYLz++uvRmlLxc5S21157Ldqv9Or7
+JJLLonmhEneI35/tfH0nq5ra/5Y/Wakz67fd/PO03qyXk6gezRpW6tNOJBs
F9a5TnVNEq1zUTIQ56FI44Nb8QIT+dHKe9NAs+tYxzXv6zBYL37L2/9bB7Q6
lzhCWUkxV+G/SylQflsqvxGljPNmOH6g5v2q17/u/PPPr45t9Ns0XjfNl5PU
/0ltUe077bTTavZlsZ6IT//tt99e3TZ//vyO+QzDVSx/0/K+EOUjayyVtyzW
E/Fz9Z1yyinVbXoH07Z664NnoWuuuSa6h9plftuWW24ZvSsn/clWPnNSv/vd
76rzDMa34wdmR6fqD2RD1uM5+cVbMvDMvOLtCflwGs/gpe9XeV1+v34LTc4/
4qV3Vz9/gvpM33nnnZF0TW379NNPa35TUX/ru+++O9onL059pTX2Qm0W/72u
7/ydd965ek49P1C+oh/3oPlQ/PZdd921Oges0q57+DlZ9thjj8iD9POqzJ07
N7q+0q5t8jG1Vlz8Pv7+mtNW5+o3XJ2nz+n7sCsdaf3FLch6OYHu4Or3DRys
tBsnDPd6Ksv6LigZiPdelp5hYh3h/jbzpNl704R2rmcJ13jeSz2rvibn6xi3
yy675J7PqFhSzPk4LTWA8tvw/IhSxnkzHD9QHpz39/R9nWz36jfq+G/QksYd
+na11hK46aabovd8fx21i5PjEbPwA72X8eijj1a3TZ8+PdqmtU/S5jvMQ7H8
bRQDwZaPrLFW3rLwA5csWRIde8EFF1S3yaPTNvV5zSqtSWlOAN1DfRH9eP4Z
M2YMKVetfuakDj/88Oo7cXw7fmB2dKr+QDZkPZ6TX8AlA8/Mq1l7YoMNNoh+
g/E+mXywZF8/+V/yxrRfnp76Vcf3n3rqqdXfPHybw3/3q92U7KehtpBf90xt
ML+9nh+oNdy8Dxmfc+Wkk05KHXuh9L7yyivVcRLxtpfS7udYTtYr/v5qy2n9
+fg++aT+N6uTTz4593xNk/VyAt0hpR2tNmH/SNrQLuExxn8/Ra0rpU9g0/Z6
I1z996aB4V4zb1x6X4eWn1P5uL/qhAMPPDD3/EbFkmKuwl9LLUD5TT0/opRx
3gx3fWF9Z6ttqN+x/TgT/Z6sNmy9OQUnTpwYtZXVZtU58g21Rqnajmm/J2fh
B/q5DuO/matvk1+/RH2Tmj0jHa/noL6NejfIOg9i2etajIXgykfWWCtvWfiB
/n30zDPPrG7TOGFtUx8Qla9m19D91D9W/7aTfpXT+Dg0/y6pccztfuak9K7t
f0eIb8cPzI5O1R/IhqzHc/KLuGTgmXm12p5QO8DPbaDvtnib5dBDD632Aay3
XrrmRYn3G9LYCH2f7rPPPqnHa7uuqXmQ/bY0P3DfffeN+mlL+++/f801fN9r
jXeOb9fab77/YdK7lMaOHVud03mnnXYacn+NEY7Pyewlj1D7H3vssdzzNU3W
ywl0Hlfr26lNOCIfMHHtCS42fnhwcJC1RtqQnpWeWYys8yb53pTJtbuJG9rX
oeX3mtg1VunEadOm5Z7nqFhSzFVYVWoDym/NNcy1ozutkfqBo0ePrnooyd/T
tbaw92HiaxonFf+tXHPvdKo/4XDaqaGUj6yxWN5G6gdqbJcf96X3P79d/Tr8
O6rWzdH8VfWuoT4ofo2d/v7+ttKvubN0ntYQ2nPPPRu+Szb7zEn53yQ0li2+
HT8wO4pYfxRJ1uM58X2c+/OKq53fF+Xn+d8SNebBb/ffVfF5UkYqf80nnnii
us37cbNnz47+1hx/fmyx+ggmr+H9QH3Hxrf7cRON6gE/T7TGUyTvX+88X58l
f9uxIuvlBDpPpc2sNmF/B+8xoXKPCMYQN1bWfQIbkXhvGujEPTqJ+7mvw7Cf
Ufm85bqAxvmUupTH+v1MdabmG1M/eZUJSfWX6pOpU6emnufnTtf7RKP9mt/D
b9tss82qdXqjd/Z258/1ffbT5kpTvzftW758eeq9fN/5+PwfGlepbZpnLX6s
0n/LLbdE849oXqb333/f/fGPf4zGJRxyyCFD+u7HP2/aHMe+P0ea/+vbCLp+
N+JAMVdhedNATYHyWyrk+9xI/EDNde3XDdGY5OR4HPXz8+1d7ZdfqN/E/X59
d6lt++yzz0bHqEy226eqHY2kndrr5SNrLJa3kfiBBxxwQNT31s8BlRxXr/pF
Y9/9eDT1Y5UX7vdrfneNV3v77bejY7Q+SLvzCKvMaZycPEnV3brOtddeO6zP
7LXRRhtV30ul5Joo+IHZUcT6o0iyHs8uQcnAM/Nqxw+U/Pdf3GPz4yiuvvrq
EaVFc+ucddZZ7rnnnqumSfMp+P3ej/PvJD4tau+njbGo5wc2mgM6+ZmuvPLK
IfdPjhX20nyFPn0W1xWxXk6gs1Tayv1dvF9//HtPfd8YR7xW8gC1JrN8mPgj
6lb+xN6bJnTjflngfvaZ+0Z4nYV62Jr7tdSFvJbv5t8HJPU91zpdeifx/Rx8
nwD1w4+f2yk/cDjz53bLD/S+g/pvqIxoTJiOVXr9XE3xPv+95AfqOVdY2Fq0
plPw8muuHd1pteIHJuf/ll8iL93v11p99dZelR/h+yZ5yStZuXJlzRzi+q07
bS3lLJVFO7UXy0fWWC1vzfxA1Y/xOJY055Ofo917fWlrVEpqW/n5O71/rbpW
vy/F61tds958+M2kPinxstLs927/mVW/Jj+bPosfj1bv/RI/MDuKWH8USdbj
OSQ/0L9/6HdEv83/9tiKku8S+k7Xe4Zfi8RLfRaS8zF4P87Pu+z7aSffW7zq
+YE+vRdeeGHdz+nnWlH/ieT90/oiSvod1qdL7yh5521S1ssJhIdLjCGO+4JF
7DOY0hfQ+4ADRX53aYWsnk/5OnP00BctWtTx/JYX6N/J5WfJ29p0002r+/W7
kfqgyx/0Ply87uiEHzjc+XO74QfKp9Q2zdee9EaPO+64qjcRr9N7yQ9UzFWY
00KoBkWG5ddcO7rTasUPTJPayiqTKrv1/JO4NOfOzTffHPkp6mclL0VlV+vk
qZx2o11LOzUbrJa3Zn5gPckP/POf/xz9RpTWfz0u1XGqLzRmTX3wVQ7026v8
OJUhzS2fNudTq1LfFZ8ujRtu9TOnyadLaa03pzF+YHYUsf4okqzHc0h+oOZp
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
ybzifd7eeustN3r06CHX0Nob9dbPSJMfXzJcP1Dnx7dPnDhxyLlXX311qh8Y
7zfYTFoX2Z8X9wMXLVo05H56Lu08A81/qPOSfqC81Xp5lSb8QGRZWfuBeIEQ
Cq6ypojmkSgZKKudEGuJhE05X8euWbPm/1IGf/LJJ7nHG8pGyktRyduxyXwH
6HVcet9AtSn7Y3/3pxwj+vJOPwBAO7TrBzaSPDu178ePH19zjaQ/10y77bZb
dF7cD5SSvy8n0+b9wOT8gPF5/rxuueWWVD9QHl+r6dSch/68uB/4yiuvDLmf
5geM9w9sprPOOis6L+kHHnvssW212/ADkWVl6QfiBUJIuMocgiF/LzJ3YPiU
83bXn3766f9RJmve5JKBuEPDl/JQVPJ016E5DtD7uNq+gd4HnFDZV32v0rYU
X3B1rokHAGiTLP1Ar7fffjtaI8RfY6uttqrZP3nyZPeLX/yiKvl8X375ZbTv
q6++irbpvKQfqDV+42k7+OCDa/Yrrdq+xRZb1GxPmz9w8eLFqX5g3CeUNxhP
p3TZZZdV9+v//ry4HyjfT30Xk/d89dVXq8dceumlQ64d9yL1jHRO0g/U/Ib1
8ipN+IHIsrLyA/ECIUQqsRytc1UyUF6zlD6TL6/ZPjWwRjmP9/npp5/+C0+w
txXzApWX+6TlNUCv437uG1jjA8b2D3mvSvEF+7qZZgCAkdCuH5i2nsiWW27p
fvOb37hVq1ZVj7vvvvtqjomvL6w1euP7pkyZkurNJf1A+WV+7WFJ6/zGPbj4
WOW49xa/pqQ5i7755pvU/fH1hT/++GO30UYb1Zz77LPPVvfvt99+1e1xP1DS
WOr111+/5tz4+sLJMcXy/T777LNon8ZiaM1mvz1+3c8//3yIL9pI+IHIsrLw
A/ECIVRcpY/gwMBA7mU1a8X6BvZn+tDAJOV83t97gmrjMJ9g70h55ccIl/n/
yjqpXj4D9Dpu7VwdQ3zA2P6671UxX3B1RxMJAJAhWfiBXhdddFH1OPltelf3
+4455pjqPvlep5xySjSu+LDDDnNvvvlmdZ+8QX9O3A9855133BtvvBHN73f5
5ZdHa3bE0/Xcc8/VpOW8886r2X/HHXdE91JfQV0nvgZK3A+U3xj3LnWfPfbY
w+20005uzpw51e3yBeP3i/uB8i31+dV+WrZsmfvjH/8YHaP12LznJ1111VVu
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
Az+wPfADkSXhBwIAZAP1Zdiy3j61nj4AAAAID/zA9sAPRJaEHwgAkA3Ul2HL
evvUevoAAAAgPPAD2wM/EFkSfiAAQDZQX4Yt6+1T6+kDAACA8MAPbA/8QGRJ
+IEAANlAfRm2rLdPracPAAAAwgM/sD3wA5El4QcCAGQD9WXYst4+tZ4+AAAA
CA/8wPbAD0SWhB8IAJAN1Jdhy3r71Hr6AAAAIDzwA9ujW35gxXMZLKtvhNfh
/SZgZVHeKrE20Gqs4QcCQIhQX4Yt6+1T6+kDAACA8MAPbI9u9g+seDRuJL4g
7zdhayTlreLrrW43nvEDASBEqC/DlvX2qfX0AQAAQHjgB7aHfLnKR1zdhXtN
cLW07Qt24/1mt912cwsWLHAff/yxW716tXvjjTfcrFmz3JgxY9zll1/uvv32
W3f++efXnDN16lT30EMPuXfeecd99dVX0XkrV650d955p5s0aVLqfXbddVd3
++23uzfffDM6/qOPPnLLli1zF110kdt4443rpm/dddd1H3zwQZSOL7/80m24
4YZ1j12xYkV0nDR27NjUY37xi19Uj2mma6+91tz7TcIHbDuu8AMBIETwA8OW
9fap9fQBAABAeOAHtkc3/cDK/QbcUFr2bzr9frPllltGPqC8ryeffNL9/ve/
j/TUU09FXt3NN98c7TvnnHOq55xxxhnum2++ibYvWbLE9ff3R1q6dGm07euv
v3bHHntszX2OOeaYyMvT/ueff97deuut7p577nHvvfdetG358uVu6623Tk2j
/MW4R3fYYYelHrfNNtvUHHfKKaekHhf3A+Vh6t71NGPGDDPvNyk+oGeglfMT
18EPBICgwA8MW9bbp9bTBwAAAOGBH9geOfiByT6CbfmCnX6/kc8nX0zen/rh
xffJC/Qe3tlnnx1t22STTdyqVavcZ5995vbbb78h15Pvp+Pff//96vW23Xbb
6BxtP/3002uOHzVqlJs3b160T/5gWhovueSSaP+f/vSn6F/1XUw7Tv6f9j/3
3HMNrxf3A3/5y1+af79J8QH/T+z//2wWQ3Wuhx8IAEGBHxi2rLdPracPAAAA
wgM/sD267QdW7jnQwBNs6At2+v3mtttui3yxK6+8csi+zTbbrOrjxf3AE044
wU2bNi31euuss040FljnbLXVVtG2K664Ivp78eLFqeesv/760TXVVzFtv/cB
1edQfQ9feOGF1OPUR1HHHX300dG/6ve43nrrDTmuV/zAJj6gZyDt3EbgBwJA
iOAHhi3r7VPr6QMAAIDwwA9sj5z8wEZ9BBv6gp1+v7n//vsjX+zcc89N3e/H
AHs/sJmmTJkSHS9P0Htx3s9L9g1sRfIk5QFKmmPwpZdeiq6V5h1q7LHuu8EG
G7hXX301Ou6AAw4Ycpx1P7BFH1C03Tcwdv0o3to9FwDAKp2uL1G+st4+tZ4+
AAAACI+s2x+ht2dcDn5g5b4DrRiC3qfxPk+n328eeOCBhn6f9wsb+YHqB6j+
fffdd1/k2yXX4fjwww8bzvvXSMcff3x0ru8TeOONN0Z/H3fccTXHTZw4Mdr+
zDPPRH/7Mchp/R6t+oGudR/QM9Ba9NXi8AMBIEA6XV+ifGW9fWo9fQAAABAe
Wbc/Qm/PuJ/9wF5g0P+n1KH2dTM/8N57703dr756Whf4xRdfrFnDQ2N0L774
4pq5CP344VY0efLkmvtovWJtnzNnTvS3Hws8f/78muP8PIiXXXZZ9LfGM/u1
S5KfyaIf6NrzATOLr2EWIwAAc3S6vkT5Kpa/JrGePgAAAAiPrNsfobdnXP5+
YDtez6D/T6lD7evh+IFax1fr8npPTWN4Z8+eHfX/k9eWvMZHH30UHff4449H
8xWmyXuGWkvYnydP0fctPPzww6Ntm266adQH8a233qq5x8MPP1wzPnjzzTev
roHs5zH06gE/sFsMDrccAQBYw3+xlQx4V6hz9WXJKNbTBwAAAOGRdfuD9kxn
cD06XjjND7zjjjuqY3N33HHHpvfwcxDWmz9www03rI4z1nolfru8QT8X4ejR
o6vblyxZEm3399YaxVrvWNLaJP64gYGB6LhTTz215n4W/cBKXifHCzdjoPUI
BAAIm07XlyhfWW+fWk8fAAAAhEfW7Q/aM9njfp6vrVnfwKoPGDvXnB+4bNmy
1LG9ktYQ0fbtttuuuu2qq66Kjl+wYEHqPfr6+mrmCPS65JJLou1PPvlkzXa/
XrH3F/fbb7/U61999dXRds1rGN9u1Q9MxEurvuCEenEHAFAk8APDlvX2qfX0
AQAAQHjgB9rHNe8bOMQHjJ1rzg+Uvxafqy+u888/P9p3zz33VLeNHz/erVq1
KtqudUfix2+//fbutddei/addtppNfv8usQXXHBBzfYDDzww2q606W/vG551
1lk1xx166KHR9k8++STqQ+i3W/cDY3nfii84kHYuAEDRwA8MW9bbp9bTBwAA
AOGBH2gb93PfwLZ8wNj55vxAeWje39OYXK35Ib388svRNs0XuNtuu9Vc55hj
jnFffvlltH/x4sXupptuivrz+evcfffdbp111qkev9lmm1XHEO+xxx4119KY
YI0N1tyCOuepp56KjpswYULNcRtssIH74osvauYVlHrFD0zEUCNfcEKj8wEA
igB+YNiy3j61nj4AAAAID/xA27j0voFNfcDY+eb8QEnem9YBeeONN6L5/eTP
rVixwt1www115xScOHFiNPeg1gLROfIN5eWdfPLJNesRS8cff3x03w8++KDG
J/SSl6j9u+++u/v888+HrC/ipTVMdJzGLPttveYHxmKhni840Mr5AAAhgx8Y
tqy3T62nDwAAAMIDP9AubmjfwJZ9wNg1Cvl+o/6G8uv6+/tT95955pnRfvUz
1L/z589PPW7GjBlD5ibsVT/QU8cXnNDONQAAQqOo9WVRZL19aj19AAAAEB74
gXZxP/cNbNsHjF2jcO836iuoscDy60466aTUY3baaadovx9vPG3atNTjNNbY
e39bb711tK3X/UBPwhccGM41AABCoYj1ZZFkvX1qPX0AAAAQHviBNql4NcP2
AWPXKdz7zaRJk6p+3dixY+se9+abb0bHfPPNN27zzTdPPUZjjTXmWMdNnz49
2haKH+iJ+YITRnIdAIBepoj1ZZFkvX1qPX0AAAAQHviBNsnKmyni+41fLzg+
xjdN8+bNi45btmxZw+M05ljH3X///dHfofmBAABQzPqySLJeX1pPHwAAAIQH
fmDY8H4TtihvAADZQH0ZtqzXl9bTBwAAAOGBHxg2vN+ELcobAEA2UF+GLev1
pfX0AQAAQHjgB4YN7zdhi/IGAJAN1Jdhy3p9aT19AAAAEB74gWHD+03YorwB
AGQD9WXYsl5fWk8fAAAAhAd+YNjwfhO2KG8AANlAfRm2rNeX1tMHAAAA4YEf
GDa834QtyhsAQDZQX4Yt6/Wl9fQBAABAeOAHhg3vN2GL8gYAkA3Ul2HLen1p
PX0AAAAQHviBYcP7TdiivAEAZAP1ZdiyXl9aTx8AAACEB35g2PB+E7YobwAA
2UB9Gbas15fW0wcAAADhgR8YNrzfhC3KGwBANlBfhi3r9aX19AEAAEB44AeG
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
F26jjTYaki5t17aTTz7ZLVu2zK1atSp6Vg899JDbY489hlwz7gfOmDEj+gy3
3367e++996LPuHz58uj5rr/++jXnbbbZZjWfde+99245VpSvJ554YvT5P/zw
w+jZv/vuu1GsHHzwwUOO170vvfTSKJ50rPLr5ptvdmPHjo32T548OUrnV199
5d566y137LHHVs+bNWtWdG19Fn+PZun32njjjd1FF13klixZ4j755JPo3nou
DzzwgDvyyCNT86iZvzpv3rzqfp8WhFDxhB8IAAAA3QY/EKFiqpN+4OjRoyMf
sNG15Ock06Rtjc5ZvHixGzNmTM05jzzyyJDjFixYEO1r1Q9cZ5113Jw5cxre
Wx5a0pvK2g+UZ+ePlZclj6rR8Y8++miqlxRP12effeYuueSS1M8kr3Dfffet
uWbcv7rmmmsivyvt3AcffDB6bv684fqBG2ywQbSt0bOfPXt2zTm33XZb6nHy
Bbfddlv3zjvv1GzX59d58jeT5+j5NEu/tNtuu0XXb5RO+dhJnxQ/ECHUivAD
AQAAoNvgByJUTMX9QPV1Uh+nZor7Mo08nltuuaW6T32oZs6cGXlpv/3tbyNf
ze/71a9+VT2nr6+vxlu544473BFHHOHOOOOMGk+qv7+/eo76len6fp88SHlh
U6ZMifa36gf+/ve/r7n3jTfe6A4//PCoz9rSpUur29VfcIcddqiel7UfqP59
8uj88er/V+9Y+VfyDP2xRx11VGq69Hyk6667zh122GHu3HPPjT6H379ixYqa
fpdx/0r9LV955RV3wgknRNdP+nbHH398TXqG4wdef/31Nc9Q3p2e/WWXXVaT
t9OnT4+OHzdunPvmm2+q29XPUc9VsaS+oUpvPL+Uji222CI6d9GiRTXeofJX
n61Z+jfZZJOon6Hf9+qrr7pTTjklSudVV10VpTseO/HPhx+IEGpF+IEAAADQ
bfADESqm4n6gxsS2e349j0fjauM+1TnnnFNznnwljclVf7zjjjuuul1p8Ock
x8pqDHHcqxk/fnz1XvHt++23X815rfiB8uDkh/rj5JvF92+44Ybutddeq/Ep
W71+u36gpD5m9byzuE477bTqcfJY4/3S4umSlFfxc6dNm1azPz5+O+5f6TNp
PLbfpzHg8f0ax+33DccPlE8X99IuvPDCmnTG+zWuXLky2qaxwPH7TJo0qXq8
vNr49Z555pma68W9Qo37je9rlP54OtSfMP5MJI2L9/u//vprt+OOO6Y+T/xA
hFA94QcCAABAt8EPRKiY6pQfKI8v7quob1Wza2net3r9zrzkpcjDkXbeeedo
W9IP9Nu9WvED5U/Gr7Hddtul3jve52y99dZr6frD8QM1D128b5/8ojSpX58/
bv78+XU/tzRx4sSa/fL15Gv5/eq/6ffF/av77ruv4bPQZ/bPYjh+YDJWkj6b
np/Pc0lji5Pe8O67715zTnz8uOYjjO/TnIJ+n/qqxvc1Sv8LL7yQ6gd7yYuN
97nUuOS054kfiBCqJ/xAAACA/7+983nV4Q3j8I6NbCklCyUbsqCzQiyIJJGi
KAtCZMFSYUUWCim/lWz8yoLY8LcdXVPPdM9zZt4z73TemXPeua66kpl55ufb
t69P9/Pc0jfmgarjdFZ5YKylom6tzbno4xGzmLo+F3WuRB5IFhZrv+qOWVhY
qFxny5Ytrc7fJQ8kW/rz509l3HJOWteQubXkf/l1Pnz4UJsnxvyKObv5uJhX
Is/I9i55YPytkKe1+easTUlPlDTu3r17ZSaJcf7xSuSBrJEY612Zb113X69f
v67NDM0DVbWN5oEiIiLSN+aBquN0VnngjRs3WudYZFWsXcc6bHF7nG85yWny
QOZx1vUnpmdGOoZ+s3XXoedGXV45izwQ6ZXb9h3SOyN/rnhfTTkbvVnSMQ8e
PCi3x/yqLvsie6x7513ywDbvvs7Tp09XrsV8b7I+7p3+xCuZBzJfPG5P6xjm
xt7QrGlY9z7NA1W1SfNAERER6RvzQNVxOm1/YXq6xvFtar6WM9UP7t69u7I9
nwPa5DR5IHJ8fo429YH79u2rnCf1FMnPn/c+5rgueWCcE5uvDYixv+7NmzeX
jM/vKx+P79+/L/c31QdeuXJlyTj6dsRzb9q0qdjeJQ+M775tLWn8JuRu9Joh
6637fa1UfWA8f1N94MuXL8tjqFmse59k5fk4jjUPVFXzQBEREekb80DVcTqr
PJC1/9J21r+jvmrdunWle/fuLfenfg95FnPo0KHKtZgPSs/g5MaNG4vt0+aB
9NHI38OBAwcqx6ReJVEyoLSf/r8pX8vPH/tyYF5LF3sTT5IMKvazpc9y2se1
Y4/mHTt2LBmf31d+DO8zrndHhpv2xfzq8ePHS87N2njx+6a5yF3ywPw+Ux/g
JH+P3533sty7o09NOt+TJ08q+1Zi/cC7d+8uuSb1mXGO96VLl2rfZ+y/kox1
mjFHVNVxaR4oIiIifWMeqDpOYx7IfMuHDx9O9MyZM5Xxk/oLkxOlfdS6xXFX
r14t98Uer3H9tTyHivOJqdVKudG0eSA9ONJ6d8nl+guTYX78+LH23vLzk/fE
ubvxHXPfrH3X9vtcu3atHMt50va4fh/PUzc2vy/mpMb9eX9hsra0L+ZXrJsX
81Gyv/gu+GZpX5c8kF4z//79a6y9i3PPyeTSdnpW8x3w1q1blTGPHj0qx+S9
P7rmgXl/4fw3dOTIkcb8Nb5PpD9y2rd169ZK7eH169cH/++Cqg6jeaCIiIj0
jXmg6jid1fqBeOfOnXLf58+fi5pAciUyGNbZYzs1bnH+LplUzE2Yw0pdHDnk
r1+/Kts5ftu2bUvmrtKvdteuXWWGFXOxr1+/Ln7//r3IKnneL1++lNc+f/78
kvyMc584cWLx7du3lXxs586d5bh4ftbx4xrv3r0r5tnyTuI5X716NdX7pSdw
GkstH7kk21nrr66uL5qva4isSXjw4MHFCxcuVHoL805iP45Pnz5VcmKe6eTJ
k0WGGNfIw7iWXpc8EGM+zH2SEfPd2R77eBw9erT2+cjTuD/e1/HjxytZ9OHD
h4vj6VvM74JnTftYu5BtaW76pPsnt4z1mumdkM2S28b7JDuPzxfzQOphqS/l
W5Bj/vz5szGXVdVxaR4oIiIifWMeqDpOZ5kHMkc4z46i5D5xDmzy3LlzRY+R
pnHkKdTzcSy1YU3HpZox8sH4jNSVxRwpXZd5qIxpOl+6Z+rA4v3GOjvq11jT
LuWdUa6V9wBuY6zF279/f/FeY5bXNP84PvePHz8q852j5Fh5BkXNYdrP3OCY
oUWfP39eqYXsmgdSc8i6eZPePXOA82ek9m/SGOoE0/3xu2o6Lv32J90/bt++
vZIJNv0+yQ6b3ic55rNnz2rHPn36tNV8aFWdT80DRUREpG/MA1XH6SzzQCSL
oV6L/OP3799F3RbZFGukTeqrQf0dx5C9kK1Ro0avhlOnTlXq2NrkgdSvpW0v
Xrwo7un27dtFvV3MA5PMbb5//36RgXFtsjfq5XjWup7H8fysA8c2eqOQhVL/
+Pfv3+K6XbJApJYvnZ93Etc6fPPmTeO4eF/cP9tYk5G8ivfJc/Fd8rncSJ/f
NJYxzM2m3jN9j2/fvhW1e2STcVzXPBDJwbgW+6gF5bfCn3zjhYWF2mdkDPV/
jKHOjmyT78ocZn4rMatciTwQN2zYsHjx4sXiGnxf7pNrs04hv/X4+6x7n/wO
1q9fX9SPUp/K++S90hNmmrnkqjp/mgeKiIhI35gHqo7TWeeBfUnGle4jXz9w
rbt58+ayXpL8iawyPevZs2cHv79omzxtaC9fvlzeX75+oKrqkJoHioiISN+Y
B6qO02n7iSDrraXxqyUPZH3Bec0DMfafTb0n+DOuvbgaXAt5IHWp5oGquho1
DxQREZG+MQ9UHacxD2wr6+Wl8aslDyQXSznZPOaB5Fb5d2A+8tD3lTspD9yz
Z09Rz4j04BjyPlN/jzwPpF9LukdcbXmrqs635oEiIiLSN+aBquN0XvLAeZec
LfbMxWPHjg1+X3X32XX9wNXgWqhvVNX51TxQRERE+sY8UFW7uBYyHu1P80BV
1e6aB4qIiEjfmAeqqqqqqg6neaCIiIj0jXmgqqqqqupwmgeKiIhI35gHqqqq
qqoOp3mgiIiI9I15oKqqqqrqcJoHioiISN+YB6qqqqqqDqd5oIiIiPSNeaCq
qqqq6nCaB4qIiEjfmAeqqqqqqg6neaCIiIj0jXmgqqqqqupwmgeKiIhI35gH
qqqqqqoOp3mgiIiI9I15oKqqqqrqcJoHioiISN+YB6qqqqqqDqd5oIiIiPSN
eaCqqqqq6nCaB4qIiEjfLIqIiIiIyOAM/e8CERERGQ9D/3+PiIiIiIgsLv4H
c7hRwA==
   "], {{0, 0}, {1284, 824}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{551.2360988526038, 353.7527612574343},
  ImageSizeRaw->{1284., 824.},
  PlotRange->{{0, 1284}, {0, 824}}]], "Text",
 CellChangeTimes->{
  3.9208939629004135`*^9, {3.9379760272344627`*^9, 3.9379761347466383`*^9}, {
   3.93797616580934*^9, 3.9379761678787527`*^9}, {3.937976212814764*^9, 
   3.937976242104084*^9}},
 TextAlignment->Center,ExpressionUUID->"0771a8b1-266b-4649-a2e9-8eb994c94693"],

Cell[CellGroupData[{

Cell["WL handling", "Subsubsection",
 CellChangeTimes->{{3.936692878538519*^9, 3.936692902815874*^9}, 
   3.9367039146745043`*^9, 3.936722902733577*^9, 3.93672651510527*^9, 
   3.938075312003141*^9},ExpressionUUID->"ca2f5913-0e98-45ea-9282-\
ca0fd5895920"],

Cell[TextData[{
 "The ",
 ButtonBox["main process in Electron",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
electron/src/main/main.ts"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
electron/src/main/main.ts"],
 " sets up event-listeners used to manage IPC and the lifecycle of WL \
process. "
}], "Text",
 CellChangeTimes->{{3.936692906447617*^9, 3.9366929578156223`*^9}, {
   3.9366929978531933`*^9, 3.936693002507874*^9}, {3.936693037532193*^9, 
   3.936693051716517*^9}, {3.9366931131298943`*^9, 3.9366931132594976`*^9}, {
   3.938075348137267*^9, 3.938075352181212*^9}, {3.938075383936442*^9, 
   3.9380754304457407`*^9}, {3.9381555705559053`*^9, 3.938155570557775*^9}, 
   3.938183510987336*^9},ExpressionUUID->"5c4b2f27-7a99-424e-ae15-\
58baed277817"],

Cell["For WRB, there are 2 important IPC listeners set up:", "Text",
 CellChangeTimes->{{3.936693122443027*^9, 3.936693182656946*^9}, {
  3.936693221548853*^9, 3.936693225162641*^9}, {3.9381835452409687`*^9, 
  3.938183545319734*^9}},ExpressionUUID->"92c414fc-5e96-469b-8604-\
e4d72e5b8830"],

Cell["\<\
// Starts the WL process

ipcMain.on('start-wl', startWL);\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.9366931449496527`*^9, 3.9366931742741537`*^9}, {
  3.936693232990098*^9, 3.9366933200251703`*^9}, {3.936705607256534*^9, 
  3.936705620100965*^9}, {3.9380754390222197`*^9, 
  3.9380755092158403`*^9}},ExpressionUUID->"bb634a1e-5afd-4fc8-bfce-\
e8e85e9f8d94"],

Cell["\<\
// Recieves requests to WL Socket and returns result

ipcMain.on('req', (event, args) => {
\treq(event, args).then((res) => {
\t\tconsole.log('Request:', {
\t\t\targs,
\t\t\tres,
\t\t});
\t});
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.9366931449496527`*^9, 3.9366931742741537`*^9}, {
  3.936693232990098*^9, 3.9366933200251703`*^9}, {3.936705607256534*^9, 
  3.936705620100965*^9}, {3.9380754390222197`*^9, 
  3.9380755103880444`*^9}},ExpressionUUID->"35560935-8e12-4d45-be85-\
47a9b9fab9eb"],

Cell["\<\
Finally, the WL process is cleaned up upon an application \
\[OpenCurlyQuote]window-all-closed\[CloseCurlyQuote] event:\
\>", "Text",
 CellChangeTimes->{{3.936693330648419*^9, 
  3.93669337030925*^9}},ExpressionUUID->"522d8bd1-e489-4320-8c16-\
a213563b2f27"],

Cell["\<\
app.on('window-all-closed', () => {
\t/*...*/
\t
\tcleanupWL();
\t
\t/*...*/
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.936693372074493*^9, 3.936693411123307*^9}, {
  3.936705629734427*^9, 3.9367056428089523`*^9}, {3.938075544054809*^9, 
  3.938075563631549*^9}},ExpressionUUID->"b1bc8947-9014-4e3d-9558-\
e8e124b06751"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rendering Frontend component", "Subsubsection",
 CellChangeTimes->{{3.936695721729354*^9, 3.936695747846478*^9}, 
   3.936703916507634*^9, 3.93672290435261*^9, 3.936726516457004*^9, 
   3.9380753090463257`*^9},ExpressionUUID->"495c1c42-b749-41ec-9460-\
4cecee180adb"],

Cell["\<\
The electron renderer then sets up all event listeners and passes the \
ElectronHandler to the Frontend component:\
\>", "Text",
 CellChangeTimes->{{3.936695838785645*^9, 3.93669584668535*^9}, {
  3.936695912126327*^9, 3.936695943781516*^9}, {3.9366960525191317`*^9, 
  3.936696066438249*^9}, {3.9366962710899677`*^9, 
  3.936696271549967*^9}},ExpressionUUID->"8fb33562-48c4-4a51-a0d4-\
42477db11395"],

Cell["\<\
/// <reference types=\"./electron\" />

import { createRoot } from 'react-dom/client';
import React from 'react';
import { Frontend } from '@wrb/frontend';

const container = document.getElementById('root') as HTMLElement;
const root = createRoot(container);
root.render(
\t<React.StrictMode>
\t\t<Frontend api={window.api} />
\t</React.StrictMode>,
);

/* ... */

// start WL Socket
window.api.ipc.send('start-wl', []);\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.9366959459567013`*^9, 3.9366959507746477`*^9}, {
   3.936695997999242*^9, 3.936696014200798*^9}, 3.938076380889483*^9, {
   3.938183567811192*^9, 
   3.9381835714655046`*^9}},ExpressionUUID->"c3f3269c-8310-4a4c-a952-\
a85e2f4c8573"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Web IPC", "Subsection",
 CellChangeTimes->{{3.9366869771650753`*^9, 3.9366869812795563`*^9}, 
   3.936703918007422*^9, 3.936722909374468*^9, 3.93672651720511*^9, 
   3.938076407358749*^9, {3.938182072163004*^9, 
   3.938182072833168*^9}},ExpressionUUID->"75c03db2-2ef0-46da-b1de-\
4abdd488df6f"],

Cell[TextData[{
 "The web deployment\[CloseCurlyQuote]s backend is an express server (WRB IPC \
Server) making use of ",
 ButtonBox["Socket.io websockets",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://socket.io/docs/v4/"], None},
  ButtonNote->"https://socket.io/docs/v4/"],
 " for communication with the frontend and is exposed as ",
 ButtonBox["WebHandler",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
web/src/renderer/WebHandler.ts"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/web/src/\
renderer/WebHandler.ts"],
 " class passed to the frontend."
}], "Text",
 CellChangeTimes->{
  3.936686994251288*^9, {3.936688064127913*^9, 3.936688075395588*^9}, 
   3.9366881139437428`*^9, {3.9366881654526663`*^9, 3.936688220274238*^9}, {
   3.9380781253177834`*^9, 
   3.938078127699238*^9}},ExpressionUUID->"732a5980-6a66-42d1-8f57-\
a223b49a1edc"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qn8VXP+x/GfSislshuTJYSZLEX2H5NRIs2fMCRtGNtEGFmGHjS2iRkh
W2TNSEayRiZLlhSKpJJ+slZUaKPl9/3fz7d7jnO33+/+7j3nns+55/V8/N//
4Z7l973nnvu953yc8z079B3wf2fWq6iouKhx4v/9X59LDx84sM9lx2+S+Jce
f73o7LP+ekb/Ln+9+IyzzhjYsW/9xIubJP7foAYVFYn/qzAAAAAAUGIVAABf
hd2vAwAAAIifsM+DAKDcePpXQgghhBBCCAk01HcAIBjUdwghhBBCCCGlCvUd
AAgG9R1CCCGEEEJIqUJ9BwCCQX2HEEIIIYQQUqpQ3wGAYFDfIYQQQgghhJQq
1HcAIBjUdwghhBBCCCGlCvUdAAgG9R1CCCGEEEJIqUJ9BwCCQX2HEEIIIYQQ
UqpQ3wGAYFDfIYQQQgghhJQq1HcAIBjUdwghhBBCCCGlCvUdAAgG9R1CCCGE
EEJIqUJ9BwCCQX2HEEIIIYQQUqpQ3wGAYFDfIYQQ/9OqVSvj1bFjx9DbpHFb
nHDCCe7rP//8c+ht5bMkhJDgQ30HAIJBfYcQEvVsvfXWKeff/fr1yzrf999/
nzJf27ZtM+Y56KCDUuY57LDDCmpTqWoC77//fsrfeeCBB0L/POqyLajvEEJI
/EJ9BwCCQX2HEFIOmT17tnu8eO+992ZM32233Uy6/v37Z8x34YUXutNXrVpl
GjVqVFB7SlETyPaefvrpJ9O4cePQP498t8XOO+9sLrjgApvzzjsv1HbOmDHD
tu8vf/lLyuuyPZ02SrbaaqvQtykhhEQ51HcAIBjUdwgh5ZC7777bPV786KOP
Mqb37ds3oxYycuTIjPlGjRrlTp84cWLB7SlFfefaa691179u3Tr3n3v06BH6
51HqbVFs9txzT7d96fUdQggh/ob6DgAEg/oOIaQc8uc//zml1rHxxhunTB8x
YoQ7fcWKFfZ/58yZk7GeuXPnuvNdffXVBbenFDWNzz77zF3/nXfe6f7z2LFj
Q/88Sr0tis2QIUOo7xBCSIlCfQcAgkF9hxBSDkkfg+eII45Imf7JJ5/Y17/5
5hszYcIEd74tttjCnWfTTTdNWcehhx6asg65l0jqKJ9++qm9d0vuhXr33XfN
gAEDzIYbbpgyb3pNY7/99jO/+93vzJgxY8yCBQvs8nKdkdQSNthggzq/3wMO
OMBd91dffWXfx9q1a+2///LLL2aTTTbJutyZZ57pLjdz5kz72oknnmjefPNN
8+OPP5ply5aZ//3vfxnvXeK9tmn48OH2PV9++eXm448/NitXrrTjG8k8v/3t
b2vcFnUdf6dDhw7m0UcfNV988YV9b9LOt956y5xzzjmmQYMGGfPL9jzppJPM
iy++aBYuXGjWrFljP6t33nnHnH322aZevXruvBdffLHJZdq0abW230mLFi3s
tpC/sXTpUrN69Wr7t8ePH2/69OmTtZ3e7SnXYslrcp2ZjKkkNcjFixeb0aNH
m5122in07xchhPgZRwUAwFee/pUQQiId7xg8cq7tvN6yZUtTXV1tX3/uuefM
P//5T3e+7t27u/MdddRR7uvpY+8cd9xxtoaRi9REvOPepNcE5LxdaifZ3HDD
DXV+r7fffru7/K233mpfk/vJHNnGFpKccsop7jxSF7rooouytklqIp07d05Z
9p577nGnS71l3LhxWZeVGtpvfvObnNuiLvUdqb84n102kyZNMs2bN09Z5uGH
H845v3j66afdGo8f9Z127dqZL7/8ssa/Ke2U/dC7nPeewmHDhpnBgwdnXVbq
gd46JCGERD2OCgCArzz9KyGERDre82WpPTivd+nSxX1dzqG993INHTrUne/v
f/+7+7rUa5zXd9xxR7N8+XJ32o033mh22WUX0759e/Pqq6+6r1933XXuMuk1
gUWLFplXXnnF1lfk+V7O9URC7ifbY4898n6fci2IrM8hz/yS1+VaIEeusYNk
bB6H1FMkUrc5/vjjzWWXXZZSg5o/f37KdSd33HGHO02uoZFtcsUVV9hlvfeH
Can/5NoW+dZ3vPU2cf/995tjjz3WnH/++SnvX17Ptj7ZrmeddZa9bkrqa3JN
jUOu75H5t912W3PwwQfb9+qQ+p+8ttdee9XafqnZeGs78+bNs39T6oFSt5M6
mSP9vjlvjW7y5Ml2XplH9q8PP/ww5W9ef/31oX+/CCHErzgqAAC+8vSvhBAS
6XjrNnJvjPP6Nddc477+xz/+0d7v4nj77bfd+Z555hn39auuusp9/bbbbnNf
99Z9JHLu79REpObRtGlT93UveTaT9x6u7bbbzl4j5Ljpppvyfp/eepXUFpz7
u+RvOvUEqW1I7SJ9WW/9Q8i4RLm2ofBew+OtR4iePXumLOutr8l9VM51NYXW
d+ReJ4d8Nt5pxxxzjDtN7ktzrm+R5589++yzNv/+979TlpHrdhwPPfRQyrRZ
s2a509LH36mp/d5rbmQ/kM/Vu6xsI69999035/Z07tGSNGnSxN4H6JD7AMP+
fhFCiF9xVAAAfOXpXwkhJNJJH4Nnhx12sK874+1IzUPGSZHXpP7j1CGc+6rk
PhjHIYcc4q7Xe54ttSKZ35vXXnvNnd6pUye7THpNQJ6rnd5eqUE4ZB35vs9H
HnnEXe7mm29OmSZjzjjk3qv0ZdPrO956g0Su15GxahxSv3CmeesRMjZMw4YN
U5bdf//9U9ZdWVmZdVvkU99JX0bGCEpvp9SenMjYSbVtN7kHyiHj4ninFVrf
8V5n8+CDD2b8zfr165slS5a483jrht7tKddCpY8J7n0+2tdffx3694sQQvyK
owIA4CtP/0oIIZGPdwweuRZFxlmR62qE97npch+MQ+5v2n777d1/l3F2nNqF
LO999nhtZKxlWS69JnDkkUdmtFVqMw65ryef9yfXB3nvFZOaind679693Wky
Tm/68un1nfQajUSWc3jvffLWI2Q85vTl5Hodr169emXdFvnUd6S+5uXcK5VP
5BotuT9P6nXOmNPppObnXaaQ+o5cN+Vdf7Z6mkTGgnZ471vzbs/33nsvY7kz
zjjDnS5jV4f93SKEEL/iqAAA+MrTvxJCSOTjvUdI7s/Zfffd3X+Xac58f/vb
39zX//rXv5qTTz7Z/XcZJ8eZb6ONNspaH8jFud4lvSaw9957Z7TVe32G1CLy
eX/e8ZHzsdtuu6Us762nyHU62f7GG2+84c7zn//8x33dW4/wjm/kRK5V8XLq
JIXUd7p27ZqyjIx3lM/2Oe+881KWk9qe1G7k/jipkTj8qO80a9Ys5XV5Nlm2
Nr388stZt5t3e8p1V+nLee/tor5DCCmnOCoAAL7y9K+EEBL5eMePkWtM5BoS
x+mnn+7OJ+PnOu699177DCqHjLPszCfXaHiv38l2n1W2pNcE/vCHP2TM869/
/cudPnfu3LzWK8//qgu5n8y7vLeeIs+lSn+uu+SDDz5w57nvvvvc1731CKkB
pS8n9755nXbaaVm3RT71Hbm3y2ufffapddtILU6eK+6Qa2W840N7x1Hy6/od
7/jJua7fkbGTHfJsr2zbk/oOISROcVQAAHzl6V8JISTy8Y7BI+f63mc+tWnT
xp1Pxs2RsXeEjLHsPQeX2o93nXPmzHGnOc8iry3pNQF55lP6PN6xcuQaj3zW
6a0nPPXUU3Z85PR4xwNKrxul358lz5byTpd6j/cZWt5al7ceIeMXyfU63mWl
7uHljGFUSH0nfSylU089NWN7DBo0yFx55ZU2cp3SoYcemrJM+j1dzz//vDvN
j/qOZPr06e7r6WM2S+T+N+94RpdeemnW7Ul9hxASpzgqAAC+8vSvhBBSFvGO
wfPdd9/Z/5XnaafP5zyfSc6/nVqPd+wdJ97rPuQ+Knm2kTNNahxynYiMUyPP
sN5mm23s6+k1AakDeOshv/3tb92/Ka6++upa39c555zjzi/3HTVq1CjrfDvv
vHPK3/aO0ZNe35Eag3fZ9OdnHX744e609Oc9ybq8y3rvjZPtKPcvZdsW+T4/
a9q0ae60l156KWXaYYcdlrJOGUtbxrb22m+//VK2iXd7T5o0KWV93ufVS73I
O62m9svn5pC6WPozy+RZ6Q65Dsx7nxn1HUJIXOOoAAD4ytO/EkJIWcRbZ3DI
s7HT57vlllsy5ku/rkMitQGpVzjkeh+pSxx11FEp4zTLGLnOs8o333zzlPXK
s9Dl3qru3bvb+5a814tIXaN169a1vi+538zhvc8nW7xjJHuvOfLWU1avXm0j
94kdffTR9v4i77UmUieT8aWdZb31CNkeP/zwg30euYyV472/Tcg9b85yhdZ3
jj/++JTl5D0fe+yx5txzzzXffvut+/qoUaPs/FJbk3vOHDLWzZ577mm6detm
Pvvss5QajrxPaYfzXHV57r3jq6++svf1Oc9/r6n9LVu2tM+od8iz1vr27Wu3
yQ033JBSUxo+fHjK+6O+QwiJaxwVAABfefpXQggpi6RfgyK898U4Sb+WRaRf
u+GkR48eKefq6aR+IHUgZ36pNXjJc7WklpKN1Ehqe09yfYqX1Cxqmv+yyy5z
55Vrjpxrh7zvWa438V5/4iX1KHmumHed3nqE1KpkHOpc20LqW85yhdZ3JDJ+
UE1kHCDvc8UfeOCBrPNJzUaumZLnjHs542F7x9t2yHPKamu/pF27dnb9NXni
iScyrreivkMIiWscFQAAX3n6V0IIKYukj90inLFgapsvfewdb9q2bWvHt5Fn
mUstYsmSJfY6mcsvv9xsuummKfPKWD9eW221lV233Gck173I2EDOdUD5vKcr
rrjCXZdce5Lr3iwnO+20U8rfl2eGy+veeorUcOQ1eaa6XHskbVq6dKm97iXb
87689YgXXnjBjmE0ZMgQW8+R2pfUTu666y73mhgnxdR3JDKuzujRo20NRWpk
ixcvNq+++qrp169fyvVFErm3TmpCVVVVdl5ZRq7nks9apss9XHLtlIxjJNfd
nHTSSe5ycj3XN998Y9+L/O+YMWNqbb+TTTbZxNYGp0yZYu+dk78t1xjJ9V3H
HXdc1vdFfYcQEtd4zj8AAD7y9K+EEELKPPnUU3KltnoEIYQQkk+o7wBAMKjv
EEJIfEJ9hxBCSNihvgMAwaC+Qwgh8Qn1HUIIIWGH+g4ABIP6DiGExCfUdwgh
hIQd6jsAEAzqO4QQEp9Q3yGEEBJ2qO8AQDCo7xBCCCGEEEJKFeo7ABAM6juE
EEIIIYSQUoX6DgAEg/oOIYQQQgghpFShvgMAwaC+QwghhBBCCClVqO8AQDCo
7xBCCCGEEEJKFeo7ABAM6juEEEIIIYSQUoX6DgAEg/oOIYQQQgghpFShvgMA
waC+QwghhBBCCClVqO8AQDCo7xBCCCGEEEJKFeo7ABAMAwAAAAAlFvZ5EACU
m7D7dQAAAADxE/Z5EACUG/pXAAAAAKXC+QcABIP+FQAAAECpcP4BAMGgfwUA
AABQKpx/AEAw6F8BAAAAlArnHwAQDPpXAAAAAKXC+QcABIP+FQAAAECpcP4B
AMGgfwUAAABQKpx/AEAw6F8BAAAAlArnHwAQDPpXAAAAAKXC+QcABIP+FQAA
AECpcP4BAMGgfwUAAABQKpx/AEAw6F8BAAAAlArnHwAQDPpXAAAAAKXC+QcA
BIP+FQAAAECpcP4BAMGgfwUAAABQKpx/AEAw6F8BAAAAlArnHwAQDPpXAAAA
AKXC+QcABIP+FQAAAECpcP4BAMGgfwUAAABQKpx/AEAw6F8BAAAAlArnHwAQ
DPpXAAAAAKXC+QcABIP+FQAAAECpcP4BAMGgfwUAAABQKpx/AEAw6F8BAAAA
lArnHwAQDPpXAAAAAKXC+QcABIP+FQAAAECpcP4BAMGgfwUAAABQKpx/AEAw
6F8BAAAAlArnHwAQDPpXAAAAAKXC+QcABIP+FQAAAECpcP4BAMGgfwUAAABQ
Kpx/AEAw6F8BAAAAlArnHwAQDO39qwEA+Crsfj2XsLcLAKBmfvf3fq0PALCe
9v41nF8vAChfYffruYS9XQAANfO7v/drfQCA9bT3r572EUIIKSL094QQQgoJ
9R0AiAbt/SvH+4QQ4k/o7wkhhBQS6jsAEA3a+1eO9wkhxJ/Q3xNCCCkk1HcA
IBq0968c7xNCiD+hvyeEEFJIqO8AQDRo71853ieEEH9Cf08IIaSQUN8BgGjQ
3r9yvE8IIf6E/p4QQkghob4DANGgvX/leJ8QQvwJ/T0hhJBCQn0HAKJBe//K
8T4hhPgT+ntCCCGFhPoOAESD9v6V431CCPEn9PeEEEIKCfUdAIgG7f0rx/uE
EOJP6O8JIYQUEuo7ABAN2vtXjvcJIcSf0N8TQggpJNR3ACAatPevHO8TQog/
ob8nhBBSSKjvAEA0aO9fOd4nhBB/Qn9PSN1ywgknuN+bn3/+OWXa7bff7k57
8cUXQ28rIUGG+g4ARIP2/pXjfVJT2rZta26++Wbz7rvvmiVLlpg1a9aYVatW
ma+//tq8/PLL5oILLjAbbbRR6O0kREPo70lc07JlS3PxxReb8ePH298H+Z2Q
fPHFF+aZZ54xffv2NQ0bNsxYjvoOIetDfQcAokF7/8rxPskVOVZfu3atqc28
efPMjjvuGHp7CQk79PckjunZs6f56aefav2t+Oyzz8y+++6bsmxN9Z3Kykr7
3xAk3bt3D/19zpgxw7bzL3/5S+htIeUX6jsAEA3a+1eO90m2HH744SnH5fLf
Y++66y5z9dVX2+t53n///ZTpb731VuhtJiTs0N+TuOWss87KqOMsXrzY/ia8
9957GXWfpUuXml133dVdvqb6jqbsueeebjup75AgQn0HAKJBe//K8T7Jloce
esg91pgzZ47ZeOONM+b597//nXLcnv7fZQmJW+jvSZyy884725qMt3bTo0cP
U69ePXeeJk2amAEDBphffvnFnW/ChAnu9KjUd4YMGUJ9hwQa6jsAEA3a+1eO
90m2vPrqq+6xxv333591nhYtWph//vOf5pxzzjFHHXWUHX8hfR65DmjMmDH2
+h85vv/+++/t+AzHHntsxrxnnnmm+zdff/11U79+fTN8+HD733/lPrErr7zS
nb5s2TLTqFGjjHVsv/32KTWnP/3pT4G1J+zPiOgL/T2JU6Q/dKxbt84cdNBB
Oec9+eST7XzV1dX2+s9NNtnEvl7M+DuyjquuusquT/plGe9n9uzZZujQoaZV
q1YZ848aNcpd37XXXmtfk3GBZPkVK1bY645Gjx5tdtppJ3cZuU85l2nTpoX+
GZDyid+/H9p/jwAgqrT3rxzvk2x5/PHH3WMNGR9zm222qfM6rrvuupzHxeL6
669Pmf+UU05JOW6+8MIL3X+XeoqM8ePVpUuXjL8p/53YIeNBe8fz9Ls9YX9G
RF/o70mcInVyx7hx42qdX+rtm2++ecprhdZ3dtllF/P555/n7M+//PLLlDqN
5O6773anDxs2zAwePDjrsgsWLDBbbLGFXYb6DilV/P790P57BABRpb1/5Xif
ZEufPn1SjmPlv42OGDHCnHjiiWbbbbetdXmZz7F8+XL730hbt25tjj76aDN/
/nx3mlz34ywj1/U7qqqq7HyrV6+2x9AyLqfMM3nyZHeeO++8M+Pvvvbaa+50
OZYPuj2EeEN/T+KS3/zmNym/EWeffXZB6ymkviPXUn700Ucp0/bZZx87ro/U
bRzp48J51ye/JfI8yLFjx5obb7zRfPjhhynvx6n3y+/dwQcfnPI7Idetymt7
7bVX6J8DKZ/4/fuh/fcIAKJKe//K8T7JFjl+fvbZZ00ucqz74IMPmuOPP95s
uOGGGct7j73l+nnvNKmhOHKNwyBk3J/tttsuZVl5jorjq6++MhtssIE7Tf67
sPd5X3L8HXR7CPGG/p7EJe3bt0/pH4888siC1lNIfUd+dxwy5k/z5s1TlpO6
TrbfAe/6hHOPlkTGCfr000/dae+++27KOmfNmuVOY/wdEkT8/v3Q/nsEAFGl
vX/leJ/kitR4ZGwdqWvURJ6Pfuihh7rLyX/v9OrUqZNp3LixGxmrWa6DEfLf
T+U1WS69nvLnP/85o01bb721HefBIecYzrR+/fq5r8v1Nk7tJ8j2EOIN/T2J
Sw477LCU/rGmsXdqSiH1nXvvvdd9XcaK8/bnEqnbOGRc5Gzrk+s4058b4F1O
7j3zTqO+Q4KO378f2n+PACCqtPevHO+TfNK2bVtb63n00UezjnkgY1PKeAgy
b2VlZcb0mrRr184ul15P2XLLLbO25ZVXXnHnueaaa9zXvdcbeY/pg24PIU4c
FUp52kdIUZH7obw6d+5c0HoKqe94x/+vzVNPPZV1ffLs9vS2nHHGGe50GXvf
O436Dgk6fv9+aP89AoCo0t6/crxPConUe7zPUBfyLBWZdswxx+R97C2k/iLL
eY/z5T4r7zN2venfv7873/Tp0+1rG220UcpzenfbbTd3/qDbQ4gTR4VSnvYR
UlRk/GEvuXe2kPUUUt+ZOnVq3v251IJqW5+Tnj17utOp75BSx+/fD+2/RwAQ
Vdr7V473SU3J9gxyb1566SX3mOSdd96xr6Vft5/vGJQ1Hed7I89hl2ebO2Sc
T+/4yVOmTEmZP+j2EOKE/p7EKd7xaiZOnFjr/I888oj529/+Zu+zdV4rpL4j
f8sh4yPn217qO0Rz/P790P57BABRpb1/5XifpEeeOy7HvvJcdLnvqlWrVjnn
feCBB9xjkrffftu+JsfuXvJM3Hz+bl3qKfIsXoeMuyP3jTnkGeneeUvRHkIk
9PckTvGOVyO6du2ac95evXq588n1kPvtt599vZD6zj333OO+7lzDmU+o7xDN
8fv3Q/vvEQBElfb+leN9kp4OHTqkHLPLeDfybKps88mzSxx33XWXO837vKqn
n346ZbmddtrJjokg819xxRXufU91qaecfPLJ7rxPPPGE+e677+w/y/jIct9A
+vxBt4cQCf09iVOkr12yZIm738t/D+jbt69p0KCBO49cA3r++ee7Y9gLudbT
Gf++2OdnCRkLyLucPCNRrhUaOnSoOeCAA2pdn5Oa6juffPKJO+3KK68MfduT
8ovfvx/af48AIKq0968c75Nseeyxx1KOn+V+KLkmXo6ZR48enTH+gUzffffd
3eVPPfXUlOnyLHW5LqhHjx4ptZZbbrnFXaYu9ZSmTZva558Iqek4nn/++azz
B90eQiT09yRuOfroo1P6YPHDDz/Y6znlXln5Zy+pxbdp08ZdvpD6jtSPZs6c
6U779ttv7bhshx9+uLn++utNdXW1fV1+I7bZZpta1+ekpvrO//73P3faV199
Za9HkvnD3v6kfOL374f23yMAiCrt/SvH+yRbpH4yZswYkw+5hkfGME5fh9RK
avLCCy+YZs2aufPXtZ4yatSojHWecsopOecPuj2EePpTlTztI8S3SF1Fnide
G6mly9j83mULqe9I5L8nSJ0lF7mWKP1+sWLqOzJuUDqpH4W97Un5xO/fD+2/
RwAQVdr7V473SU055JBD7H1L06ZNs/8dVsZNWLVqlT2ulrGVL7roIrPpppvm
XP6oo46y418uWLDAXp8v/51Vnmdy+umnp1zDL6lrPeXYY49NOdZetmyZrUvV
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
P7rt9SvKVBWy78J/zgcSdjty0d4+AIgrv/tn+nsACIb2/lV7+7TzbL+yyZNP
Pmnf05AhQzKmSV1FPPHEE+5re+65p30t2/1UZ511lp02b948s+mmm6ZMO++8
8+w0ud6mXr16ea0vW32nTZs2thb0yy+/mCOOOMJ9XdZ588032/mlNuXnNtIm
r50VgdP+eWhvHwDEld/9M/09AARDe/+qvX3aebZf2eS9996z7yn93ilJgwYN
7Os77rhjXvWY3Xff3Zx44onmkEMOyZgm4+ysXbvWLrvrrrsWXN8ZOnSofU3u
J0ufv2nTpra2NH369EDu0wo7fH910f55aG8fAMQV9R0AiAbt/av29mlXjvWd
hx56yL6nSZMmpYy1kys11WO8kWdebb755rbO0rp1a5vvv//eLrv//vvntb5s
9Z2pU6fa13r16hX6tit1+P7qov3z0N4+AIgr6jsAEA3a+1ft7dOuHOs722+/
vfn888/d2sGMGTPMrbfeao4++mj7bPL0+Wur73Tr1s28+uqrZtWqVSaXjh07
5rW+bPUdGQ9IHH744aFvu1KH768u2j8P7e0DgLiivgMA0aC9f9XePu3Ksb4j
adGihbniiivMRx99lFKHkTGSr7rqKnstjjNvPuPvrFu3zjz++OPmL3/5iznh
hBNM9+7dbWR9xdZ3ZOwdceCBB4a+3Uodvr+6aP88tLcPAOKK+g4ARIP2/lV7
+7Qr1/qON9tuu619xpWMuyx1GiFj3jjTc9VjGjZs6NZvzj///Kzrdq69Kaa+
s3jxYvtatvGCyj18f3XR/nlobx8AxBX1HQCIBu39q/b2aReH+o43nTt3tu9X
nlUlYy3La7nqMfJMciE1oUaNGmWsa+utt3brE8XUd5zxd84+++ysbW7SpInZ
aKON3PaWU/j+6qL989DePgCIK+o7ABAN2vtX7e3TrtzqOy1btjQ9e/Y0J598
ctbpG2ywgXs/lFzXU+Gpx/z4448p8zqvr169OuX5505uuukmtz5xwAEHZCyX
vj5JTc/Pev755zPml/vIvvvuOzu9srIy9O3rd/j+6qL989DePgCIK+o7ABAN
2vtX7e3TrhzrOytWrDDLly83Bx98cMZ0eda5WLhwoTsGjzwPS1RXV5vNNtvM
nVfGYpbrfETXrl1T1tO/f3/73PI5c+bY6T169HCn5VqfJFt9p02bNu7f6d27
t/u61JT+8Y9/2Nerqqq4fgeB0/55aG8fAMQV9R0AiAbt/av29mlXbvUdybnn
nmtrK2LKlClm1KhR5rHHHnPvg1q7dq056aST3PmlzvPtt9+6dZQXXnjBjqMs
05xrdOSan0cffdTcfffddsxmqR8dcsgh5t5777XT58+fb+644w7TvHnzGteX
rb5TkawXOW2ePn26eeaZZ2z9SEi9KlutqhzC97c4Br4I+3MEgKjzuz+lfwaA
YGjvX7W3TzvP9iurdOnSxYwbN858/fXXZs2aNfb6GHlmutRXOnTokDG/jG08
a9Ysey+W1Gb69u1rX99www3NkCFD7LKyngULFpjRo0eb3/3ud3b6DjvsYCZP
nmzrP3ItzyabbFLj+nLVdyRSw3nqqafMokWL7N+S5WT+XXfdNfTtGVT4/hYn
uIpHvIT9OQJA1Pndn9I/A0AwtPev2tunnWf7EVLy8P0tDt9f9j8A0ID6DgBE
g/b+VXv7tOP8kIQZvr/F4fvL/gcAGlDfAYBo0N6/am+fdpwfkjDD97c4fH/Z
/wBAA+o7ABAN2vtX7e3TjvNDEmb4/haH7y/7HwBoQH0HAKJBe/+qvX3acX5I
wgzf3+Lw/WX/AwANqO8AQDRo71+1t087zg9JmOH7Wxy+v+x/AKAB9R0AiAbt
/av29mnH+SEJM3x/i8P3l/0PADSgvgMA0aC9f9XePu04PyRhhu9vcfj+sv8B
gAbUdwAgGrT3r9rbpx3nhyTM8P0tDt9f9j8A0ID6DgBEg/b+VXv7tOP8kIQZ
vr/F4fvL/gcAGlDfAYBo0N6/am+fdpwfkjDD97c4fH/Z/wBAA+o7ABAN2vtX
7e3TLp/zw8aNG7vnQe3bt6/1nGnu3Ll23t69e9t/l2UK0bNnz4y/v3btWrPN
NtvU2oYWLVqYVatWucvJOgp9P3XNIYccYu6++24zc+ZM88MPP5g1a9aY7777
zrz++utm0KBBZrPNNqtx+SOOOMI8+OCDZtasWWbZsmX2Pf/0009mxowZ5p57
7qm1zcUuX1u6detm3njjDfP999+bJUuW2PfVtWtXzq9DkM/3l7D/AUDQ/O5P
6Z8BIBja+1ft7dMun/PDYus7e+yxh601pGfx4sV2PqlBZJt+7LHHZvx9ceml
l9bahjPOOCNlmVLUd5o3b27Gjh2b8ncXLVpkPv/8c7N69Wr3NamJdOrUKWP5
evXqmZEjR7rzSU1o8uTJ5qWXXjIffPCB+eWXX+zr69atMwMHDvR9+Xxy3nnn
2XV89tlnZvDgwebqq6+270/06dOH8+sSy+f7S9j/ACBofven9M8AEAzt/av2
9mmXz/lhsfWdXLnhhhvsfFITyefvS71ixYoV9rqY2tog15dI3cipIQVd32nS
pIl5//337TqljVdccYXZeuut3elSe+ncubN566237DxyTY/8u3cdTu1E6j/d
u3c39evXT5m+6aabmjvvvNPOU11dbfbbbz9fl88nX3/9tfnxxx9Nq1at3Nfk
eiq5VuqTTz7h/LrEqO8UF/Y/APAH9R0AiAbt/av29mkXpfqO3A/kXB9TU21i
hx12sPWLcePG2VpHKeo7w4YNs+uTmlJNbWvYsKF56qmn7LxyDYy3XW+//bZ9
vbZra6R2Je/v5ptvTnm92OVry8Ybb2zXP3HixIxpn376qb0Xra7bje9vcajv
FBf2PwDwB/UdAIgG7f2r9vZpF6X6jlw3cvrpp9t/Hj58eM75r7rqKjtPv379
7LU0Qdd3ttxyS/Pzzz/b9ck1NLXNv9VWW5kxY8aY0047zV7347w+b948u44e
PXrUuPzmm29umjVrlvF6scvXlg033NDe2yXXKXlf79Chg60Xvfrqq5xflxj1
neLC/gcA/qC+AwDRoL1/1d4+7aJU31m5cqVp2bKlHUdGrstp1KhR1vnnzJlj
55H7kZxxb4Ks7zhj/SxdujTl79Q1r7zyil2PXHeUfm9VKZbPJ9OmTbO1rE02
2cT++4knnmjvgZPX9t9/f86vS4z6TnFh/wMAf1DfAYBo0N6/am+fdlGq70gN
Qf79ySeftP8utYX0eQ844AA77b///a/9d3l2VND1nfvvv9+u65lnnilqPX/6
05/cdsm4yH/+859tjapUy+cTGU9ZPPLII3bMZlFVVWUOOuggzq9DQH2nuLD/
AYA/qO8AQDRo71+1t0+7utZ3vvnmG/u8pJoiYwcHWd+R52qJ5557LmNeZ/zg
4447zv57Keo7L7zwgl3Xv/71r6LXdf7556c8113ue/roo4/s+zrppJPc62aC
Wr6myNhB//jHP9x1f/HFF3asn2KuWeL7WxzqO8WF/Q8A/EF9BwCiQXv/qr19
2tW1vlMXQdV3GjRoYBYuXGhrN95nVEn9Qe4VkudsyVgx8lop6juvv/66XdeQ
IUN8OeeU51HJ87emTJnitt8h95uNGjXK7LzzzoEtny2/+93v7HjQzucgLr74
4oz5Lr/8cjN69Giz/fbbc35dAvl8fwn7HwAEze/+lP4ZAIKhvX/V3j7t8jk/
1HZ/luSWW26xr11yySXua8cff7x97bbbbnNfK0V9R+4FE/IMrWLXlZ7mzZub
Ll262Otm5J4rh4z1s++++wa+vGS33Xaz4x3JtrzooovMtttua+to8qyw3/zm
NynzyjPSpYbUokULzq9LgPpOcWH/AwB/UN8BgGjQ3r9qb592Ua3v/P73v7ev
zZgxw33NeXa6t42lqO/cfvvtdl0yvnGx66ot7dq1MzNnzrR/79133y3J8nIf
nDj77LPd1/r06WNf8445JHWg9NdqC9/f4lDfKS7sfwDgD+o7ABAN2vtX7e3T
Lqr1HYkzvq+0abPNNrPXjUjtwjtPKeo7Ms6zkHFv8h3PWO4r22CDDQr6ewce
eKD9ezK2TiHPOa/L8nLPm2xDeTZ9+jO5xo8fb9dz6aWX2n9/4IEH7L937dqV
8+sSob5TXNj/AMAf1HcAIBq096/a26ddlOs7AwYMsK/LuDdnnnmm/edBgwal
zFOK+k7Tpk3N8uXL7fquu+66WueXmoo8c2r69On2mhd5bY899rBjI/ft27fW
5bfaaiu3/c44N8UunyutW7e288lnmj6tVatWZv78+XYby9+W/33vvfc4vy4h
6jvFhf0PAPxBfQcAokF7/6q9fdpFub4j9QW5Zmfq1Kn2nqB169aZ7bbbLmWe
UtR3JH//+9/t+uTvOc/uypZGjRq54/XI86ec62ekPiKkTiTj29T0t0455RQ7
7w8//GDHmvZj+VyR9sl7kmy++eYZ0zt06OCOtywOOeQQzq9LiPpOcWH/AwB/
UN8BgGjQ3r9qb592Ua7vSGRZqetIXePll1/OmO5nfeeYY46xY+1ceOGFGdPk
3iXnOVryfHh5VvqOO+6YMl3GOXbGOF6xYoU54IAD3OlSR5Fnywv5X/lb6bUX
mad///62LiO8z+sqdvma8uyzz9r5X3rppYwaj/wdGWtZyP1pRx11FOfXJUR9
p7iw/wGAP6jvAEA0aO9ftbdPu6jXd7p37+627bTTTsuYXlt9R2ohs2bNypm/
/e1v7nJSDxGTJk3K2c777rvPeMmz2uVvyHVGDnnO+P7775+xvNyrNXv2bHe+
n376yXz88cfmzTffNHPmzLH1E8e9997rPgPer+VzRe7R+uqrr+xy8sys1157
zX5m8+bNs69JPev555931y01rDFjxpirrrqK8+uA5fP9Jex/ABA0v/tT+mcA
CIb2/lV7+7TL5/xQc31HahSLFi2ydYdsYwXXVt+pzdChQ93lnPqO1Ddqaq+M
Xyz1E3lW+MqVK239Y+HChebFF1+018/IPVq5lpXxjGW7yTaRMXqkJiPvQa65
mTZtmhk+fLjZb7/9Als+V2T8avm85Hllsk75LD799FNz1113md13393O061b
N3sNk1ybJO87n7GI4vr9TbzlykQG+7Ae6jtFJK77HwD4jfoOAESD9v5Ve/u0
4/ywbrnppptqrUeR/BPX72/iLcvA1VXJDJZ/L3A9fH/Z/wAgdNR3ACAatPev
2tunHeeHdcuUKVPMZZddFno7yiVx/v4m3nbvX68Us3WekXJdTx3XwfeX/Q8A
Qkd9BwCiQXv/qr192nF+mH9kfGS5L2mLLbYIvS3lkjh/f5PX8Ew0mSbmW+fh
+8v+BwAaUN8BgGjQ3r9qb592nB+SMBP3769ZPw5PLlWJ9K5leb6/7H8AEDrq
OwAQDdr7V+3t047zQxJm+P7ajTCxhhqPU+cZnGNZvr/sfwAQOuo7ABAN2vtX
7e3TjvNDEmb4/lY492nlw9Z5jGcsZr6/7H8AoAH1HQCIBu39q/b2acf5IQkz
fH/XM7Vfw5Ne5xlpPPd2VSj4LKMY9j8A8Af1HQCIBu39q/b2acf5IQkzUfn+
mvXX2HhT6UlvTwanZaQnE9NS5YljTa3VnSwqFHyWUUxU9j8A0M7v/pT+GQCC
ob1/1d4+7Tg/JGEGBasynuerh/05RjWe7QcAKILf/Sn9MwAEQ3v/qr192nF+
SMJMhFSlZaInIz1Jv37He21PZVq81wMNrkM7BlckOS+G/TlGNZ7tBwAogt/9
Kf0zAARDe/+qvX3acX5Iwgzf3/VM6j1auQzOshzfX/Y/AAgd9R0AiAbt/av2
9mnH+SEJM3x/7UZw77PKt67jWZbvL/sfAISO+g4ARIP2/lV7+7Tj/JCEGb6/
FTVduzPReJ6FnmNZvr/sfwAQOuo7ABAN2vtX7e3Tzs/zw7322ivrSWrHjh0z
5m3QoIHp1auXGTdunPniiy/MqlWrzJo1a8zixYvN5MmTzT/+8Q+z7bbbFtyW
jTfe2EyfPt2uN9vfDzu9e6+/ZGPChAmht6W2DBw40LZ1xIgRvq877t9fk/3a
Han3VOa5PPUd9j8ACB31HQCIBu39q/b2aefn+eFuu+1mZs2a5SZXfWfzzTc3
U6dO/fVktqrKvPHGG+aVV14xn3zyifv6jz/+aA477LCC2vLUU0/ZdfTt2zf0
c8hsiVJ9RzJq1Cjb3vPPP9/X9cb9+2vWX6Pjrev0ruPy1HfY/wAgdNR3ACAa
tPev2tunXZDnh7nqO2PGjLGvf/DBB2bffffNWG7nnXc2b775pp1nwYIFZqON
NqrT3+3Xr59d9plnngn9/DFXolbf2WSTTcy3335rfv75Z1vH83sfqYghs/4Z
Wk5dZ3CB66C+w/4HAKGjvgMA0aC9f9XePu1KXd9p1qyZWbt2rX19n332ybms
1BOWLVtmfvnlF/N///d/ef/NFi1amO+++86sXr3a1olqmneLLbYw06ZNM1dd
dVXJzyujVt+R9O/f37b5+eef930fqYghs/7ancFFroP6DvsfAISO+g4ARIP2
/lV7+7QrdX1n++23d1+X+7RqWl7G35FxeuryNy+77DK77kceeaTWebfbbjs7
bxDjykgaNmxorrjiCjN79mx73cuiRYvstUt77LFHjfUdqTvddNNN9l61lStX
muXLl9uxhKQOJeMKpc//xBNP2HWdfvrpZs899zRPPvmk/VtSG/v888/NLbfc
Yute6cu1bdvWPPDAA/b+OGmf1NPmzJlj7rjjDrPLLrtkzL/hhhuar776yv6t
bNddFbOP1LCLogbUd9j/AEAD6jsAEA3a+1ft7dOu1PWdRo0a2ZqFuOSSS3z/
m1KrEPmM2xN0fcepu8j7HT16tLnzzjvNO++8Y+s1N954Y9b6zu67726++eYb
O01qLffcc495/PHH3dc+/vjjjLrYww8/bKcNHz7cjlkk9Z2LL77YXHnllXYd
QsY7knqTs0z79u3NihUr7DS5T07qYZKZM2fa15YsWWLatWuX8Z6uvfZaO/3u
u+/m/FoB6jvsfwCgAfUdAIgG7f2r9vZpV+r6juTWW291p/3nP/8xRx55pGnc
uHHRf895fpc8g6t+/fq1zh9kfeePf/yjXbfUUH7/+9+nTDvvvPPss8LS6zv1
6tUzH330kVs/8b4HuW5HxhMS6dcmyTU4jgsuuCBlWvPmzd2al/xd53WpAYkh
Q4ZktH3QoEF2mtSn0qfJdTtCrg/ycx/JvneiNtR32P8AQAPqOwAQDdr7V+3t
0y6M+o5cRzJy5EjjJfcHTZo0yVx//fWmU6dO9l6guv49qV+IZ599Nq/5g6zv
ODUXuf4m23S5Zia9vtOlSxf7mowpLeMUpS+z1VZb2bqQRO7hSv9bcu9UtvvZ
Lr30UjtdnlHmvPbee+/Z12Rbp88v65DXd9xxx4xpUnOS+7jErrvuyvl1yKjv
sP8BgAbUdwAgGrT3r9rbp10Y9R0ncr2NXMszd+5ck27p0qX2Hqa6PDtL7k8S
MnZN+jS5juXFF19MycSJE+38X375Zca0c845p6j3PmPGDLvu0047Lev0bPdn
DR061L4m92PlWq/c3yW6d+/uvubUdx577LGsy1RWrn9Mk9RlnNceeugh+5rU
1LKNtVNTnGfb/+lPf+L8OmTUd9j/AEAD6jsAEA3a+1ft7dMuzPqONzKW8skn
n2zH9v3ss8/cZaVOIrWZfP6ec//S+eefnzGtVatWGTWkmtx+++1FvXepT4nD
Dz8863SpHwlvfee///2v+56lZpMtMl6y8I5d5NR3stW1JPI8c4dTL5Nxrp11
OX9Tam1HH310rffKOe3861//yvl1yIL8/sYh7H8A4A+/+1P6ZwAIhvb+VXv7
tAvy/NCRT33Hmw022MA+E925DyhX3SI9zvU4ffr0yWv+IO/PkmdXiQMPPDDr
9H79+mXUd+S6oXx5x81x6ju5nvMu91k5pM7lvC7P1JLnezlj/jikNiXryjWG
0YMPPmjnu/zyyzm/DlmQ3984hP0PAPzhd39K/wwAwdDev2pvn3ZBnh869t9/
/4KWl/qBePfdd/Oa36nvyLPH85k/yPqOPMdK5Lp+Z8CAAXa6t74jz04X+daz
nDj1neuuuy7rdHlmuqNp06ZZ55Hrp+ReMhl3ed26dXZeuV8s27zOvV3Ud8JH
fYf9DwA0oL4DANGgvX/V3j7tijk/POKII+z9VPIc7vRp8gxvhzzz23ld6h2X
XXZZXs8vl/u1xLx58/Jqj4yrLLLdn5UtQdZ3Zs2aZdfdq1evrNPl/q/0+s4N
N9xgX5Nnqdflb9U2/k7nzp3tdHnmeT7rc+aXa5CyjdfM/Vl6UN9h/wMADajv
AEA0aO9ftbdPu2LOD8866yy77HfffWef3+2d1q1bNztNnovVqFEj93Xnudxy
TU5tz8iSZ0+JfJ+Hddddd9n5873+Jcj6jjz3Pde65b4nqVml13ecZ6r/9NNP
pmXLllnXe/zxx5u2bdumvObUd+S5W9m2qVzXI1566SX777Lunj172vpZtr8h
98fJ5ybkup706VOmTLHT5B66YrcT39/iUN9h/wMADajvAEA0aO9ftbdPu2LO
D6VO4NyHJHUbp8Yj47188skn9vWHH344ZZm9997bHZvmlVdeMR06dMhY7zbb
bGOfk15dXW3nO/LII/Nqj1y3I5577rm85g+yviN1GLFy5cqU91ivXj17nc6K
FSsy6jsy7cMPP3S3mzxH3rtOZ8ye+fPnp4yB7NR3Vq9enXGPVuvWrc33339v
pzv3rcnnJn9/+fLl5uCDD85o+4knnmjnX7hwYcYYPPLvUn8S6XWmQsL3tzjU
d9j/AEAD6jsAEA3a+1ft7dOu2PPDU045xR2vReo28kwmpy4j/7zllltmLCPP
9nbqQk4d4YMPPrDP/pZl1q5da19ftWqVvUYo37bss88+drnFixfbWkmh78mP
yDUwUrtx6i7yz0888YR9NpjUR+T5V06Ny7uc3Mv2zTff2Gny3PZHHnnE5uOP
P7avybJyX5x3Gae+I/fKyXufPn26vZZJlnO28+uvv55Sqzn33HPdz0muxxk1
apS9v8t59rl8BieddFLObSw1I3mPxW4nvr/Fob7D/gcAGlDfAYBo0N6/am+f
dn6cHx566KHm+eeft+O7SC1DajTDhg2zY/DkWkae4zRo0CA7JrLcVyS1IVlW
7vWaNGmSueaaa+wzvOvaFueZ3/mM7xN0mjVrZq+nkZqOvL9FixbZ65ykhvOH
P/zBtlPea/pyst1uvPFGW9OR63/kOps5c+aY2267zbRp0yZjfqe+I8/Ckmun
Hn30UbtNZXtWVVXZ64WkLenLdenSxYwbN858/fXXZs2aNW59TupC2a6rksjn
Ivy65onvb3Go77D/AYAG1HcAIBq096/a26dduZ0fyljPQmoUYbelVHHqO9nG
ufYzMtbyF198Yf9Woc9ESw/f3+KU2/e31GH/AwB/UN8BgGjQ3r9qb5925XZ+
KGPLyL1Dcu3KTjvtFHp7SpFS1Xf69Olj/44zTrMf4ftbnHL7/pY67H8A4A/q
OwAQDdr7V+3t064czw/POOMM+57k3qOw21KKlKK+06JFCzsukDxXy/u8+2LD
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
V5tzzz03ZZ2nnHKKnfbYY4+ZSZMmmW+//dau85JLLinpb6d81kmz67qfAsUy
66/lGewWWJJ1HrlXqiKgfV7qqfI3PM+PM1Gs6zi0H/9qbx8ABIX6TnHh9wNA
OUh0Y1tLXyb3P1WUsA+tS31Hzo9WrVpl5+3evbv7er169cxHH31kX5f6Rv36
9d1pcl3MM888Y6fJ9TDe9cn1MELW2aFDh5Rpcj2PkOtlWrZs6b4utRWxYsUK
8/vf/z5lmfPOO8/On17fKbR9w4cPt69/8cUX5oYbbsjYHj169LDTly5davbc
c8+UaUcddZS9tkiu52nbtq37+oknnuiuU+4NadKkSWi/n869drLv5bGLAr5L
1nlSCi5+1npy1HRM8m9WlvwN+0j78a/29gFAUKjvFBd+PwCUg0Q31i29LlGK
5Fvf2Wuvvcz7779v55P7ojbccEN3WpcuXezrcl9Ss2bNMpbdaqutbN1FIvdI
Oa879Z2HH34469+Ue7XEQQcd5L4m1/MIubYm2zLyvK/07Vho+26//Xa7nDwz
rGnTphnLTZ482U6/+OKLs7bltttus9NvvfVW97UTTjjB3d7Z7t8qZWQbJXWr
YdcEApWs8cggxyMzijBVVWbkyJE2cu+lROo+zrg98r8SeU2mSS1HIvPnqOkM
jnpdx6H9+Fd7+wAgKNR3igu/HwDKQfK8I+t1IkHGW9+Ra1zkPidv3n33XXsP
kUNqO23atElZx9ChQ+00ud8p19+RdQnvdT9OfefMM8/MusysWbPs9KOPPjpj
mdNOOy3rMtnuzyq0fU59R+67Sp+/efPmZt26dXa69/ocb5znkE+bNs19zanv
yP1oMq5yKT/r9Mi+ljS4hl0TCEyytiPpnewDR5q063l8UpVcd+9kKsN+78Vy
3ljY7chFe/sAICie/o8UEH4/AJSDRDc2Vvqy9LF7g463vlOTuXPnmrPOOsvW
NdLXIWMJC6m9yPU12fL555/bebzjzDi1mq5du2ZtmzP9mGOOcV+Te6HE4Ycf
nnUZGb9HeOs7hbbPqe/I+D7pf0fuDXPIfV3Z1jl2rP1I7b1kznJOfUfG8inl
55wtsq8lja3DrgrUifn1+pzByUxMRoOqZCaaX+s/lWFvs3w4byDsduSivX0A
EBRP/0cKCL8fAMpBohubK32ZjANcUcI+tLb7s5zxYpYsWWK23HLLrOt48cUX
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
9udp9vjYiVw/SWq5VH+5YL8f7PEJIUSrMZpfWfKkOuZXruTzjDJ1rsMtmoep
vkZ6lG53n0zRD+ru7vaef3kWxmnhHhTprHWvy2F/nmaPj53I9ZOklkv1lwv2
+8EenxBCtBqj9dElT2pgffQkn6cz6bWi7zF1ro9uJvXdsWhcln/1Zi4e9udp
9vjYkb8j+ZTqLxfs94M9PiGEaDXF72Bm4MCB3j/TpXwJOed8gLYq1PB51IfH
A6Z6353upHvi2hp5OzyKzsXT4yZXgf15mj0+duTvSD6l+ssF+/1gj08IIVpN
oUl8Hu3i8ssv7/0zXcqXkHNFnm9LQYLP4+hM83rRPExy351EX6d4vDUSNOcO
n3BPiuycdO+SYH+eZo+PHfk7kk+p/nLBfj/Y4xNCiFZTaBLvQ7u43nrrefss
v/TSS23bvN9++9m/p5122oSvjpP44YcfzJgxY8zdd99tdtttNzPllFN6fxbJ
kg488EB7HS+++GLvsSDnitzXVgcJPk9FX0E0H9Oz707N62/Ud4dWuCfuPla7
h1HYn6fZ42NH/o7kU3mrvxUfeEVQ+M4zFnzfByGA73rQ1xSKOAzlHDx4sJfP
8f33399e5yuuuKK0LervvPbaa+aZZ54paeTIkebbb78t7X/sscfs8T5iz6qG
DbO33Oyzzz5e40DOFRnW1gAm7vN0NnIOUT/ml7473SaFr2bUd4de9fbhYf98
ZI+Pncj1k6SWK2/1t+4vJiKT+M4zFnzfByGA73rQ1xSKeArKecghh7T8M3zJ
JZe0/XFGjx5tZpppptL2qL+z0kor9XjdNNNMY/baay/z888/G1+xZ1mzzDKL
+fDDD833339vFl98cW9x4L4VOaWtF5hJPk+nUR+ePqd4rbvrudZGfXfoVW8f
HvbPR/b42IlcP0lqufJWf1Xfwlbe8rkWynfJp/JSHwtFtB1ozjzzzJZf43vv
vdde45122im2vZa/43T11VfbY+68886a7zXZZJOZGWaYwXte+VJ5+TG2Ddxx
xx3eYkLOFdm/TQSJUd+dzKiePjzsn4/s8bGj52/Jp/JWf1Xfwlbe8rkWynfJ
p/JSHwtF3BzlvOWWW1p6fVdffXV7fd99910zxRRTxPal9XeOP/54e8xdd90V
2+68C8wxgzWA77//fjN+/Hhz/vnn94jh2muvtf2HJkyYYL744gvzv//9zxx0
0EGxMV9uPBP6DJXHsPXWW5diHTRoUI/9p5xiu0eZY445prRtww03NLfeeqsZ
O3as+fHHH82nn35qnn/+eXPUUUfZvjVJZf3jH/9ofayPP/7YxorX3njjjWat
tdbqcWya8k811VTmgw8+sMetuOKKXuoYcq7I5mlyVWQPo747mVE9fXjYPx/Z
42NHz9+ST+Wt/qq+ha285XMtlO+ST+WlPsKWQDlfffXVll7fyy67rIfv4ZTW
34FHAk444YTY9u23395uR/+eRx991I5FwnzM0XFce+yxR2l810MPPWTOO+88
6+PAawFPPfVUqb+LW0P4mmuu6REDXufO4+aHjurZZ5+1+1ZbbTX795577mn/
/umnn8wDDzxgOjs7rccEvwbA54mOVYNOP/10uw9j2W6++WZzwQUX2JjBxIkT
zdChQ+suP3TcccfZ43C+Vt57J+RckUFp81VkB1Psu6PP8ewo0oenvcJttbB/
PrLHx47qreRTeau/qm9hK2/5XAvlu+RTeamPhSL2c35DW4uu7eSTT24+++wz
e32XW265Hvtr+Tvoe+LmZf7oo4/MnHPOGdu/zTbb2H3vv/++/b7Sr1+/2H7M
OYM+MPBGttxyy9i+2Wabzbz88sv29SeddJLdNu+889q/4ZOUxzJixAjz+OOP
W19o+PDhsX3oiwPvB2VFHyWMkUL/G1C+XtnUU09d6s8S9Wtc/6DPP//cLL30
0rHXrL/++nYOHZRliSWWSF1+J/TbcdewVfc+KuRckX4pUlVkDFOchxkeZpvH
tlxKL/jtRTor3VfA/vnIHh87ev6WfCpv9Vf1LWzlLZ9roXyXfCpP9bFQzLdQ
Vsx33NaCawufAnz11VfW6ynfH/V30P/lwQcfLOm5556z46jgDcAPWWihhXq8
fquttiq9Pmn80mmnnWb33XTTTYnxbbrppnY/fBm3/vorr7xity266KKl45zv
c+qpp9oxYvB44OG4/Ztssond7/r9zDjjjPZv+Erwc8rfd+6557bxRv2qJ598
0r7m4IMPToz1rLPOsvvPOOOM1OV3guf09ddf2+MWW2yxltYv5FqRt9LkqMge
pjg2C2ME2zy351I64V4V6a50XwH75yN7fOzo+VvyqbzVX9W3sJW3fK6F8l3y
qTzVR1gdKOt2223Xkmvr+pdgDFTS/qi/Uwn0W8G8MrvvvnvMU4GcvwEfqHwf
BI8I4LVJ7z/99NOX3sf1mYGHU/4at7735ptvbo4++mj7/2WXXba03/lIu+66
a2kb+tQAzIWDvkLVrhPGabmxX9H+OVFtsMEGdv8LL7yQuvxRYc15V4ZW3Hsn
5FqRm2omqMgcRmOzMqs0Y7TYPx/Z42NHdVfyqbzVX9W3sJW3fK6F8l3yqTzV
x0IxO1DWf/3rXy25tpi/GNxwww2J+6uNz0J/nznmmMP2jXHeBOakic7R7PyN
119/PfH8bmzYuuuuWzHGTz75xB6DuZDxt/NRrrrqqtIxl1xyie2LM/vss5fm
Jt13331L++G5gPnmm6+0DefBXMcAcys/8sgjpqOjw87PU+7FwCty4H0xZ1G5
0AcJfPvtt6nLHxXmaC6PuxVCrhXpSJOjIlsYjc3KrNKM0WL/fGSPjx09f0s+
lbf6q/oWtvKWz7VQvks+laf6WCimHUh03333teTauu8Pl19+eeL+tPMro58N
1t8C0T4yzt/AWlhJr0PfH7DGGmtUPPeoUaPsMW5+Hsxhg9eh/4075p133rFz
9biYMf8x/BL8jb456Hvj9ke18MILm7PPPtuMGTPGRHnrrbfsfDvuOHg+9eDG
ktUqf1S4B+CII45oaf1CrhXZpHaGiqxhNDYrs0ozRov985E9Pnb0/C35VN7q
r+pb2MpbPtdC+S75VJ7qY6GY86CsmIulrQXX1vk76H+StD+tvwO5+Weuv/76
0rZa/oZbI6t8juOoXP8dzGHstmE8GBg4cKBZYIEF7P/x/m4/1qrC69APB+Od
wMknn1w1/qWWWsquu/XEE0+UyrzxxhvbfW6eIgAvK+31rcffueKKK7z4O27e
H+RehbQUGaVwT0sLbbe1MKek5qnWGC32z0f2+NhR/ZV8Km/1V/UtbOUtn2uh
fJd8Km/1sVDUN9L4Kc0Q5goGjYzPKhfmsQF33nlnaVstf+Ppp5+2+7FGetJ+
zHvjiM6nfOihh9ptWC99l112sf+Prr/1z3/+025bZpllzJlnnmn/X81DKpcb
swQfCX/D03FrTNUz93U9/o6P8Vm4p0XeqJCOIsOY4tw7GpuVXUX8nY6EW0zv
n7DHx46evyWfylv9VX0LW3nL51oo3yWfylt9LBT1EpT3wAMP7PNr6+bWTTO/
cjV/B+ORXnvtNXtc0vpRlfyNf//733Y/1t9K2r/tttva/aNHj47NibP88svb
7RdeeKG58sor7dw7mAvI7cdcPWCvvfYyL774op0TZ5pppintx1pfe+65p1l9
9dUT3xfbwZtvvlnahrXXwXHHHZf4GpwT/X2i/Xvq8Xec17XFFlu0rG4hx4pc
UjUpRSYxxbl34IO2tSinpOYqMgdPV4V7TP35yB4fO61+/sb4ZzcvXbXPIsxl
58AcfJWOw3qQDrfmAT4Pq/Hdd9/ZMdf4bMfY6KTzRuaNi4FnAawH+tJLL9mx
15XWQ6gmd+7bbrsttr3WehN4zhgxYoQ555xz7NjvWu+DNTUvuOAC++yENRgw
D+DHH39sHn74YXPYYYeZ/v37e29/8lZ/W13fJOWzT5Tvkk/lrT4WijoE5a3k
eTRT6N8C0qyPXsnfwZzG6B8A0Mclum5VLX8Dngjm0sEzWfmz5DzzzGP9FYD+
OtF98HrGjRtn19/CPDxYMz26H/1+EAvme8bcO3fccUdsP8Z6ATxXYW318nPj
+QwkjTXDtVp11VVjr8E66s6fgaeUtvxOmJMa5wWNPI82KuRYkSEpUlNkDKO5
dzIvN1+8qTAHD/vnI3t87Ph4/sbnJYD3UOkYzLPniI6NLtfee+9tj8FvNG6b
83cwtx7WZigXtrv1KvFsUP75DzkPBr5I9LXPP/98bD69CRMm1P2bSRp/B88O
0ffFswieSRzwyDbddNPE8+P5xK3H4Pjoo4/sHIaI14H1J+rpd9wXylv99VHf
JOWzL5Tvkk/lrT4Wijp/8flgYlsfX1t4Op9//rm9vsstt1yP/dWeZ5599lnr
v7jnMMxpjLFS0den8TfwGpwDz3GY6xfeyrXXXlvyO+BBuPmKo/rPf/5Tem/8
Tle+H/G5/eVjnuDhXHPNNaW48b6Y/wZ+Dn43BPgdbfHFF4+97vTTT7f74B3h
NVi3C8+A7vdOPLMlrR9Wy99ZYYUV7HFuzqC+vu9OyLHi7Z2/nhwV2UCf3dlX
ZI5lk3CL6f0T9vjY8VGH99lnH/ue3d3dFY+5+uqr7THos/LGG29UPA6/sYCL
L764tM35OxgfXul1c801l7n00ktLub/mmmvG9lfyYJzwO4mbSw/z/EX779ZS
Gn+n0u9dCy64oB2j7q5N+e9H6B8FL8jtP/LII+1vWW4/nsmwtqfrL4w+Pfi7
lfc/qrzVX31mhq285XMtlO+ST+WxPhaKaxccb8Xnulu3CeMAyvfV6o/8zTff
2L4z+P0O/bDLX5/W30B/GHg6H374of39Cp7TQw89ZL2fqF8S1U477VSKA+9T
vv+0004r7U+KDc9RQ4cOtX2h8fwHLwg+zauvvmpOPfXUHs9lThiDdfvtt9vf
2xArYsYcGYi1vA9U2vL//e9/7/EM3Ndy68wj11IlpcgURnPvBKNqcyyzfz6y
x8eOj+dvjC1yROe9c8LnHH7/QJ8c1wf0V7/6VY/j8LuM+50m2ocmjb/j3sd5
NPB6ovtq+TtQdGxYeZ/bauqNvwPNMMMMpXU/4d9E97n5ALGuwSqrrFLxHFNP
PbUZPny4Pfbtt9+2793KHHDKW/31Ud8k5bMvlO+ST+WxPhaKexzKjGeBtj6+
vvhdDKBvcCUvReo74RkYY8zqfQbtrdxzJnKtTQRH4b52yN8JQ5E5eDoS7jP1
5yN7fOz4ev52Y6Mxvqp8n5uX/7rrrrP+Bdhtt916HOeeLfA7CMYkue1p/R0I
890B9GeJbk/j70w11VS2XzCoNI9Pknrr70BuPUysm+C2oU8SxqNXuq7lmnvu
uW2f4h133NH2+2l1DkTSLzf1V993w1be8rkWynfJp/JYH/E4gjJX6x/dTLn1
xocMGeL9fudNbv2ve+65p6Xvi9wqslqbCA6juZWDUWQOnq6E+0z9+cgeHzu+
nr+d/580D6DzdDDu2eUmxjuXH3fsscdOStqurtj2evydk046yR6LfrbR7Wn8
nRVXXNEeg/maZ5555tRlb4a/4+K+++67S9t23313uw39k331x6lXeau/+r4b
tvKWz7VQvks+ldf6WCjyWyj3b37zmz6/xksttZSdh+aDDz6I/c4m9a3wzIm5
IPGbXj3rrvdWyKkib7WJIDGaWzkYRebg6U64z9Sfj+zxsePr+duN38U4IvSD
ie578MEH7b6ll17a+hTwTzB3XPn4ZDeHzF//+tfY9rT+Dt4X62ABzH0X3VfL
38HYLDfPTUdHR11lb4a/g343AOPf3TY3n9Ctt97qvU1Jq7zVX33fDVt5y+da
KN8ln8prfSwU2S4e3ooxWtABBxxgrzP6Fbfi/aRJc0SD/fbbr6XvGxmb9e82
EST63A5H8nfyi696DC/DrRuw9tprl7ZPP/30drzV2LFjS9uw1kC554HfiTA3
MMA6ndFzp51f2c3hjN8/yucBch4M5s6D3+T0yCOP2PlqMJ/ee++919Bna2/9
nQUWWMDOnQx22GGH0nY37zLmBmz1/WxUeau/+twMW3nL51oo3yWfymt9LBR5
ZZR73Lhxfb6OlpP7fanVfkMe5fy08nkjWyHkVLFardwmgkSf22EpMp5yQIX7
TAl7fOz4rMdunfQTTjihtG2jjTay24YNG1badvjhh9ttRxxxRGkb1gYHmGe4
/LzO34H/gv+XC2tYYo1KgPmZsaZB+TmcB1MNzCl40UUXmYEDB9ZV7kb8Hax7
iTUZttxyy9LcRVh7Itr3CWPMwPHHH++9PUmrvNVffW6Grbzlcy2U75JP5bk+
muI6WltvvbX3+yCFIeRSEa2bFSiFe2snxSif90LKriqtocX++cgeHzs+n7/d
OunPPPNMaRvGSYFdd921tG3lle1PUbH25uyzz7bbLrzwwh7ndf5ONbA251FH
HWX7wiTFVm18FuYixtgx+CjoawSP6Le//W3qcqfxd2rx8ssv9xgbi7mWQav6
ZDdDeau/PuubpHxuNcp3yafyXB8Lxd4fZU+a41CSGpFbzxa51SaCxGht9OAU
8Xd2LrvX1J+P7PGx4/P5262TjjWoZp99drsNfVJAdD10zLvz2Wef2Tn8pptu
OrttxIgR9rjNNtusx3mrjc+CJ+LGNv3+97+vGFua+ZUhrFMF0JenfH6ges8d
9Xfg35T3O8L4MIxvHzx4cI85iyDneWE9Cx/3sxHlrf7q+27Yyls+10L5LvlU
nutjodj9XfkxX2Abwf2QsivkUIT+bSJITHFtdKyr3UaQd1LvVWmNdPbPR/b4
2PH9/O3GGm2++eZ2ThwwcuTIHsfdcMMNdt96661n5p9/fvt/9J2ZccYZexxb
a/4dN94LYxIx30/SMWn9nf79S49Qtk9PmjI3Y37lJG2zzTb2tZiPerbZZkv1
mnnmmceO/fJ1//NWf33XN0n53EqU75JP5b0+Fop+Ccp/8skne78XUraFHCpy
SZsIFqO10YMT7mWRzrJ7Tf35yB4fO76fv8844wzjnj+22mor+/9zzz23x3F7
7rmn3XfcccfZ/ivggQceSDxnLX8HfV9ef/11e0z5ullOaf2dueeeu/QMueqq
q6Yqc1/5O+jbhHFnIDqnUSXB24LH9eKLL5rFF1/cy/3PW/31Xd8k5XMrUb5L
PpX3+lgo+moo/9dffz3R9X2WpHqF3EEOFavTam0iWAr3tws3ub293XveSc0R
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
as2dA88G4Hf96O/o1eTGaWA+PPc9z835sddee6WOMwvfy+Tv5I88PH/fc889
toz//ve/7d+YT9mBMVBpz5PG31l33XXtMZj72W175x37WNRjzZNQfeJ6FK2/
pud4llrfizvbPGE0PksKKJ9rYaqvG5eU7x3F1ynfJW+K1scQ6E15TO31s4yp
sh5eYd+Cbs5lrK8dwvjwUIV749ZAL94zzbcjamLI/B3o6aeftg1TtTWCsWaN
mwPjtNNOK23HvBZYu2a77bZLfB3GfLjf2dGvB9tOOOEE+zfWM056DfoN4JzR
9S6z8L1M/k7+yOLzN+oXvBbUw1prykLnn3++LSP61uBveDo//fST3YbxXGnf
N42/g/W7xowZY4/DmnurrLKK/T/GfZYfG6pPXI+S6q9J/70Y4z/a21qMSf9d
t7s8vizWNynsfE6DSednIt87yl6nfJe8Kak+ZplGy2Nq993pSHme/qa4dvrX
X389cZNNNvF+j6W4cE9wb4r3FfdK62SJVDB+Xv/mN78xP/446ZEJ3+EwX7Lb
h+9ba6+9tp3zFGAe5f79+5f2w9/BHBtYBzM657KTWxN53LhxpT4/CyywQGld
4/K5Uaeaaipz8cUX233XXnttaXtWvpeVf36wfz6yx8cOY32uJdRD1Edw+umn
Vz0Wfe6wjjiIrpX1+OOP223HHXdc4uuwPjnGfkb796Txd6BTTz3VHrfvvvuW
xmYdcsghPY4L1SeuR9Xqr0n3vbgz6bV9idH66FJA+VwLU9vPRL53VHit8l3y
pmr1MYs0Wh5Tue9OR4NxXOlOcOCBB3q/z9Ik4V5EuLLWfRQiCuvnNXyYL7/8
spTYH3zwgV1Ty813CvAbetLv9UOHDkUfNnsM+gJhLZ6rr766tL4Nfuvfdttt
e7zfhAkT7H54R52dnea6664zY8eOtdvw3vPPP3/p+Kx8Lyv//GD/fGSPjx3W
+lxLqLMOrGUOz7X8mEGDBpXmScaYzOh8xM6r+eqrr3rMtT7nnHOW+gRG+9ak
9XdWXHFFexzWaX/11VftHF6u719UIfvEaZWm/prq34tb2ufBVP+u210rlqzW
NynMfE6DqexnIt87arxW+S55U5r6mCUaKY9J7rvT0YRYjnMnw7NKG8H9zrPc
82KR42rfQSHiMH9e4zvUMcccY30ZzG2BOXPef/99c9ddd9l1tvB7eKXXbrjh
hnYNudGjR9u+QHgt+vpgfR23dk25MI/H5Zdfbt577z17PNbDwbwbWIdrlllm
iR2ble9l5Z8f7J+P7PGxw1yfawl9b9z85/BnUQ+ffPJJ8+yzz9q1qhwYL7X6
6qv3eD36/gD4t1jD6pJLLjG33XabGT9+vN0Obyg6T1dafweCv4s2Adx7770V
jwvVJ06reuqvqbzedGea1zcDk/xdt9uk/E6e5fomhZfPtTDJfibyvSPl65Xv
kjfVUx+zQCPlMfG+Ox1NjmdIQXawO753rbTSSt7ved6Ea+76IhTvxZB0d0+I
OPq8Dlvlnx/sn4/s8bGT9fqM/nhYlwr9beCvwqv57rvvbP89+Lp777131TmU
MQYL/Ww++ugj67PAF+rq6jK77LKLHdsZPbYef+eoo44q1aUhQ4ZUPTZEnzit
GnxeLf9ejOfX9nrO0Qim53fdut836/VNCief02Difibi6qjz9cp3yZtCez6s
tzzml747HX0Y0woTJ0581sW23377eb/veRGutaN4D1ZIe9+EKEef12Gr/POD
/fORPT52VJ8ln+pN/S37XtzZyDnqfD/3Xbfh79+qb2ErS/mcMp6GfJ3IOZTv
kjeF9nzYiL/Th+GUv9e5Lr7hw4ebgQMHer//oQrXFtc4wrn13CshktDnddiS
v5MvVJ8ln2pG/S1+D+1s1HOp4z0a9nUi51F9C1hZyeeUcXQ06utEzqF8l7wp
tOdD9vIgNjdmfvz48RMxT2IbQR6EJFxTXNvitf6s8M/g+u6SEMno8zpsyd/J
F6rPkk/lrf6qvoWtvOVzLZTvkk+FVh/Zy2N+YZj7D+Y2LF/DQqpfuIa4lmXX
eJ7675IQyejzOmzJ38kXqs+ST+Wt/qq+ha285XMtlO+ST4VWH9nLE42v8M/g
n3/++QO37cwzz7TzB7YR5EWWhGuGa+coXlP12RFNR5/XYUv+Tr5QfZZ8Km/1
V/UtbOUtn2uhfJd8KrT6yF6ehO8P/Qo6xW3/+uuvJx522GHe8yIrwrXCNTO/
gGvZr/47I0Rt9HkdtuTv5AvVZ8mn8lZ/Vd/CVt7yuRbKd8mnQquP7OWpFF9h
0woF3eT2jxo1aqLW2aosXBtco4ivg2untbFEn6LP67AlfydfqD5LPpW3+qv6
Frbyls+1UL5LPhVafWQvT634Crs2KujhqM9zyCGHmOmmm857rvgWrgGuRZmv
g2u1UT33QIhG0ed12JK/ky9UnyWfylv9VX0LW3nL51oo3yWfCq0+spcnbXyF
Q7Yq6HF3PMYgnXzyyWaxxRbznjOtFsqMspeNw8K12SrtdReiGejzOmzJ38kX
qs+ST+Wt/qq+ha285XMtlO+ST4VWH9nLU298hUM3KejuiK9hbrnlFrP11lt7
z52+FsqIspaBa7FJ2usnRDPR53XYkr+TL1SfJZ/KW/1VfQtbecvnWijfJZ8K
rT6yl6fR+AovWa2gS6JGx7hx4yZi3ajf/OY33vOoWUJZUCaUrczXQdlXq/e6
CdFMys1GESbl99tnzlWDPT52ItdPklquvNVf1bewlbd8roXyXfKp0Ooje3l6
G1/hpf0L2r+gZ6LfR7q7u60vssEGG3jPqXqFmBE7ylDGM8Wy9m/0egnRTFKZ
AyLzlN9vnzlXDfb42IlcP0lqufJWf1Xfwlbe8rkWynfJp0Krj+zlaWZ8hdOs
nPTdZPz48RMxrunAAw80K620kvccKxdiQmyIEbGWhf9WQf9G2ZpxjYQQolHy
9HmSR/T8LflU3uqv6lvYyls+10L5LvlUaPWRvTzNji/ii2D81nGmrF8P+Prr
r819991n/vWvf5ntttvOLLnkki3LL7wX3hPvjRgQSwLPFGPX+CshBA15+zzJ
G6zP3zvttJON68YbbzSTTTaZ93ii2nnnnW1s+Dzvq/dYeOGF7Xt8//33Db0e
12z48OH2HDvuuKP3a1ZJeau/rPVNUj73Bcp3yadCq4/s5ekrf6ds2/wFDTGT
5qx5I8lQ+emnn8yrr75q+9BgbBTWHR88eLBZb731zPLLL28GDhxoZp99drsm
+RRTTFHKF/wf27APx+BYvAavxTlwLpwT58Z7VOCNYmyIcf5mXQshhGgmefs8
yRuMz9+rrLKKmTBhghkxYoT9rPUdT7my4O9A008/vRk5cqT54YcfzIorruj9
uiUpb/WXsb5Jyue+Qvku+VRo9ZG9PK3wdxKOmcdMWoero6CbzKQxUK3ireJ7
dhRjmKdZZRdCiL6k2e11s2GPj53I9aPQtNNOa958803z888/m5VXXtl7PElq
hb+D/je4FtNMM02vzrPaaquZiRMnmjfeeKPX5+oL5a3+stW33qgV9aBRXXXV
VTa2ww47TPnskZDyXcqeQquP7OVpdnyNnq/wkn4FDSpoczNpDuNTChqGj6uC
ni+ou6BPCvq2oGhHnJ+K2z4pHvN88TXDiufYv3hOnLtfs8ophBCtJm+fJ3mD
7fn7yCOPtPF0dnZ6j6WSmL/XJsl91/3rX//qPZZy5a3+stW33qhV9WDLLbe0
77PccsvVnfPyd/wSUr5L2VNo9ZG9PCz+jhBCiOqwt6/s8bHD9PyN8USffvqp
7W+y6KKLxvYtsMACNs533nnH/o05ZZ588knz1Vdfme+++848//zzZpdddql4
3sMPP9w8++yz9niMV3rvvffMf/7zn4rjlqaeemrrNaHfC8ZIffTRR+b66683
Sy21VNXvtXPOOaf597//bV5//XWsnWC++eYb8+KLL5qjjz7azDjjjKmvRbXx
WRtuuKG59dZbzdixY82PP/5orxnKf9RRR5lZZpmlx/GYAxDXFGXo16+f9/sc
Vd7qL1N9661a5e9g7sp6/Z2ppprK9n+Lzq3QCuUtn2sRUr5L2VNo9ZG9PPJ3
hBAiG7C3r+zxscP0/O2+L3Z1dfXYN9dcc9l948aNM8ccc4x5//33zbHHHmv2
2msvc+6551qfA+Ac0df179/fvPTSS3Yf/A38rn/eeeeZxx57zG7D67bffvse
73fdddfZ/fBorr32Wvua//3vf9avOfHEExO/18JHGTNmjN2HeW8uvPBCc801
15S2YU6+OeaYI9W1qOTv7LnnnnY75vZ74IEHbD8nxAevB8DnmWmmmXqc75FH
HrH7//SnP3m/z1Hlrf4y1bfeqlX+zv3331+3v+NLecvnWoSU71L2FFp9ZC+P
/B0hhMgG7O0re3zsMD1/33TTTTaW/fffv8c+rGfgfI23337bzDbbbLH96J8D
0Ecnuv2KK66w2x999NEe/Wd23313uw+eDfwjt/33v/+93f7tt9+aZZddNvaa
vffeu+QlRb/XTj755Obll1+22y+44IJYvwG8L/rbAPhLaa5Fkr+DOXk+/vhj
ux1rOkSPR38jrOsAhg4d2uN8Bx10kN0H38r3fY4qb/W3N/Wt3n5byBes+4E8
xbGYsxwe51133WXHPFV6n1//+te2LsJLRf45rxJ96KLHVfN3sO4I1opFfd18
881j+5ZZZhlbL+HRoi/dZ599Zh588EF7PtQjd9xuu+1mkkB/nlrXqtr4rNVX
X916oqNHj7bX5IsvvrDeLeoI+vw0cm+c8pbPtWD6fJHyp9DqI3t5mh0fe3mF
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
JNjzmT0+ESdkf+eGG26w244//vgex2O9KXDdddeVtg0YMKDk4+ywww6x4xda
aCHz1ltv2X277bZbbF8z/B0X/+WXX17adumll9ptt956q/fr31eq1l6k8HVA
Z9JrfcHe/snfEUKIbMDevrLHJ8JG+SdCgj2f2eMTcUL2d5599lm7LWlNqSmn
nNJux/zGbtuJJ56Y6NM4bbnllnb/iy++GNveW39ngQUWSPSV3LzLp512mvfr
31dKai9S+jqOAW1EsLd/zY6PvbxCCJFV2NtX9vhE2Cj/REiw5zN7fCJO5H5R
qxF/x81p8+ijj1acaycqrFsO9txzz8T9008/vfn555/tMbPOOmtpeyP+DsZ4
Ya0seEZvvvmmPeaVV14xU001VemYhx9+2G5P6n8UiqLthanP1wGdbWSwt3/N
jo+9vEIIkVXY21f2+ETYKP9ESLDnM3t8Ik7kflGrEX/nV7/6lXn33XdLZgD8
kzPOOMP84Q9/SJzPBvPxgPvuu8/OyZwkN9/xyiuvXJe/U4uXX37Zjg+Lvh5z
LQOsoeX7+veVInSlvlgZoEdFI6HZ8bGXVwghsgp7+8oenwgb5Z8ICfZ8Zo9P
xIncL2o1un7WzDPPbNcch38SBXMWH3300WaKKaYoHeu8mzREx3yl8Xfw/v/7
3/9iwppc6GM0ePDgWL8dp7PPPtu+9v777/d+/ftKEboi//8x9Y0gpUdFI6HZ
8bGXVwghsgp7+8oenwgb5Z8ICfZ8Zo9PxIncL2rV8neGDx9edT8033zz2bXD
Me+yG2d18sknl/Z/8skndhv699QTWzPmV04S1vIC3333nZltttlSvWaeeebp
sb4Xs6Lthek5PquWz9PZRgZ7+yd/RwghsgF7+8oenwgb5Z8ICfZ8Zo9PxMmK
v+PGKh100EGJ+93cOdX8nag22GADe/wPP/xg51rGNvSpAXvttVddsfWVvzPd
dNOZb775xr7+hBNOqHk85gfq7u628z8vvvji3u9ZGiW1F3X4PKMKam8jgr39
k78jhBDZgL19ZY9PhI3yT4QEez6zxyfiZMXfwdw34J///GePfbPPPntp/Snn
72D+Y6xFtd122yWeD31c3Hgs9OvBNngo4JFHHkl8zTTTTGPPOffcc8e295W/
Ax111FH29T/99JPZdNNNKx6H2JwH9v7771uvx/c9S6Nq7UVKn6cz6bW+YG//
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
+jzHqKTnn/kOQBnS8zW9P4BSpOdpen+0lTbfefbZZ5t+L7/88qGPP/XUU0Mf
32+//apHHnmkWr58efXbb79VP/74Y/XBBx9U9957b7XPPvsMfa4DDjigeuyx
x6pPP/20+v3336tvv/22WrJkSXXOOec0n9mZvO4ZZ5zR/N36u1X1d6xWfq5F
ixY1jx900EHVL7/8Un322WdD/+YLL7zQrHf77beb76xkNXOd2tx1+f0upOef
+Q5AGdLzNb0/gFKk52l6f7RNh/lOPRMZfC/qjTfeaD5rU9d7773XLKvnNgce
eGDreebMmVP98ccfzeNLly5tPndTz2gGz/PEE0+05jizZs2q/v777+axQw45
pPVcm2++efXTTz9V33zzTfM79YyoVs+cJq+31VZbVb/++mvz2FFHHWW+839r
mOsMzF7T73cpPf/MdwDKkJ6v6f0BlCI9T9P7o206zHeefvrpZtnNN9+8yvrX
Xntt89iCBQsmls2ePXtijnPmmWe21t97772rjz76qHnsggsuaD328ssvN8uv
u+661vKjjz66WV73Vv984403Nj9fdtllrfWOPfbYZvkPP/xQbbbZZhPLp+t8
Zx3mOrW5w363L+n5Z74DUIb0fE3vD6AU6Xma3h9t02G+8/rrrzfLjjnmmFXW
33TTTZvle+2118Sy+rtRtfrzOsP+xkknndQ8/tZbb7WWD+Y2ixcvbi2/9dZb
m+UXXXRR8/MRRxwx9PnvuOOOZnk9j5q8fLrNd9ZxrjMwe6Mg6fk31f2lby9A
qdLzNb0/gFKk52l6f7RN2l9F1IbMd+pr6NRefPHF1V5rZ3K99tprrXnMyjVz
5syJ72Jtv/32E8sH90mvr9Wz9dZbTyx/9dVXm+WDv11/Nqe+/k/9na36u1uD
9ervjtXOP//81t+bLvOd9Zzr1OZuFCY9/6a6v/TtBShVer6m9wdQivQ8Te+P
tkn7q4jakPnOHnvsUX388ccTQ4F33323uvvuu6sTTjihmZ2s/Bz19Xhq9bWO
62syD6v6Gs21ww47bOL3Jt8n/cQTT2yW7bDDDs0sqL5G8+S/8fzzzzfrDa6z
s9NOO1UrVqxolu22227Tbr5Trd9cJ97Kx1mKqe4vfXsBSpWer+n9AZQiPU/T
+6Nt0v4qojb0/lnbbrttdf3111fvvPNO6zz8u+++q2644YZqk002mVh3MLtZ
Fyt/52twn/R77rmn+fnkk09ufl75fuhXXHFFs3xwTaBTTz21+fnNN99cZZum
4Xznz3XeAaE2CjXV/aVvL0Cp0vM1vT+AUqTnaXp/tE3aX0XU2uY7zzzzzBof
r6v+fMxZZ53VXOdm8D2rO++8c+Lx+j5XtfrzPevb3+A+6YNr89x3333Nz6ef
fnprvfre67X6O2P1zw899FDz82233bbKc06H+c5G//6w8vez1jbnmbsR68V8
B6AM6fma3h9AKdLzNL0/2kqb7yxcuLDp98orrxz6+ODaOWua70yu4447rlm/
vmZOfa3letngPlgXX3zxeve34447NjOjuurPDNXfBavtsssuq6z7xRdfNH+3
vi/6hx9+2Kx35JFHrrLedJnvDKzHnOezf+rojVhn5jsAZUjP1/T+AEqRnqfp
/dFW2nynvvZNbdjnXGbNmjVxX/PBfKe+/nF9j/P6+0/Dnm/GjBkT38caXPdm
cL+rpUuXDv2dLbbYonnOYTObugbzoVNOOaWZ87z99ttD15s3b16z3uA7XN9/
//3EjGlyTbf5zsA6znnmDvtdhjPfAShDer6m9wdQivQ8Te+PttLmO4Pr1tT3
PK+vZzz5sQcffLD6448/Vpnv1DOf+l5V9X3JV36+OXPmNOt/+eWXE9fg2XPP
PSfmRCvfQ6u+99Xgu1RPPvnk0B4H90l/5ZVXmn/vuuuuoeudd955zeMvvfRS
8++CBQuGrjdd5zsDa5nz+AzPejDfAShDer6m9wdQivQ8Te+PttLmOzvvvHNz
TeTa4sWLq6uuuqqpJUuWVMuWLaseeOCB5rF6DjT4nUsuuWTi3lT1vcrrz83M
nz9/4rtcf/31V/NZm8l/p577DGZF9TWP586d28xf6u9U1d5///1q9913H9rj
4D7pA6u7jk99X6/Jzj333LXOd+r7gNV/e3V19dVX976P1qfWJy+GzHkG5q7L
72O+A1CK9HxN7w+gFOl5mt4fbaXNd+o68MADq0WLFjVznvr6NcuXL28+I7PN
NttUt9xyS7M91157bet3jj/++Oq5556rPv/88+rPP/9sfq+eldT3u5p8j/PJ
tf/++1ePPvpo9cknnzTr1/dNr2dI9X24tttuu9X2V3+u6Kuvvmr6qGdEM2fO
XO26H3zwwcSQYtddd13rfGdtJl8nuoTakLwYMudZXvkMzzox3wEoQ3q+pvcH
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
0/d5EAAAAAAAAAAAAMBU+R8RkBqv
    "], {{0, 784.}, {1144., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 370.93356643356555`},
  ImageSizeRaw->{1144., 784.},
  PlotRange->{{0, 1144.}, {0, 784.}}]], "InputOnly",
 TextAlignment->Center,ExpressionUUID->"432e5d6c-7ef9-4da3-95f0-4bc46d7d4e76"],

Cell[CellGroupData[{

Cell["WLManager class", "Subsubsection",
 CellChangeTimes->{{3.9366909593264713`*^9, 3.9366909597799683`*^9}, {
   3.9366910072573843`*^9, 3.936691019314719*^9}, {3.936692220957213*^9, 
   3.936692222111455*^9}, 3.9366935543291473`*^9, 3.936703919326633*^9, 
   3.936722910840658*^9, 3.936726518079521*^9, 
   3.938076410369556*^9},ExpressionUUID->"2e854220-b7ba-4d18-8790-\
6bbd8e68c5dc"],

Cell[TextData[{
 "To manage the WL kernel for the Web sessions, a ",
 ButtonBox["WLManager class",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
web/src/main/wlManager.ts"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/web/src/\
main/wlManager.ts"],
 " was created. It contains methods for interfacing with- and managing the WL \
kernel which are then used by the WRB IPC Server.\n\nThe WLManager \
constructor takes as input a Socket-IO socket and server and the base URL of \
the server. It then uses these to set up the class\[CloseCurlyQuote]s \
variables:"
}], "Text",
 CellChangeTimes->{{3.93669117007663*^9, 3.9366913297141113`*^9}, {
  3.936691370239958*^9, 3.936691404047018*^9}, {3.936691507107724*^9, 
  3.936691515046897*^9}, {3.9366922467372093`*^9, 3.93669225290296*^9}, {
  3.93807673530669*^9, 
  3.938076735308158*^9}},ExpressionUUID->"7b07685b-3c89-4eb4-bfb6-\
cd244bdd2057"],

Cell["\<\
import { Socket, Server } from 'socket.io';

// ...

constructor(socket: Socket, server: Server, base: string) {
\tthis.socket = socket;
\tthis.server = server;
\tthis.base = base;
\tthis.startWL = this.startWL.bind(this);
\tthis.cleanupWL = this.cleanupWL.bind(this);
\tthis.req = this.req.bind(this);
}

// ...\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.936691405190041*^9, 3.936691416845182*^9}, {
  3.936691450360692*^9, 3.936691460028227*^9}, {3.93669151689005*^9, 
  3.936691541959687*^9}},ExpressionUUID->"8456c936-d801-4e09-80cb-\
7f76f5df2438"],

Cell["All the class variables and methods are then defined:", "Text",
 CellChangeTimes->{{3.936691550949423*^9, 3.936691587501297*^9}, {
  3.936691842958922*^9, 
  3.936691849571743*^9}},ExpressionUUID->"4c388f1d-815a-4389-90a0-\
2fb9cefa0fb6"],

Cell["\<\
// ...

isQuitting: boolean = false;
socket: Socket;
server: Server;
base: string;
wlCmd: string = process.platform === 'linux' ? 'math' : 'wolframscript';

checkWL() { /*...*/ } // Check the wolframscript installation

aliveQ() { /*...*/ } // make a request to the diagnostic endpoint \
localhost:8888/aliveQ

startWL() { /*...*/ } // Start the WL process

cleanupWL() { /*...*/ } // Quit and cleanup the WL process

async req(endpoint: string, dataIn: object = {}, port: number = 4848) { \
/*...*/ } // Make a request to a WL socket

// ...\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.936691592697858*^9, 
  3.936691840586625*^9}},ExpressionUUID->"6f729125-1009-4755-89ae-\
1f5ba1b26f55"]
}, Closed]],

Cell[CellGroupData[{

Cell["The WRB IPC Server", "Subsubsection",
 CellChangeTimes->{{3.936688008964822*^9, 3.9366880487324953`*^9}, {
   3.93669215309616*^9, 3.93669215697259*^9}, {3.936692199004652*^9, 
   3.9366921990642843`*^9}, {3.936693556900156*^9, 3.9366935569753113`*^9}, 
   3.936703920246737*^9, 3.936722911667143*^9, 3.936726518748815*^9, 
   3.9380764115657167`*^9},ExpressionUUID->"e17414e6-5178-42c8-bfe0-\
54fa5dbbc07c"],

Cell[TextData[{
 "For deploying on the Web, we create a ",
 ButtonBox["node IPC server",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
web/src/main/server.ts"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/web/src/\
main/server.ts"],
 " to replicated electron\[CloseCurlyQuote]s IPC functionality allowing the \
abstraction of the IPC API for the front-end developer."
}], "Text",
 CellChangeTimes->{{3.936689709871842*^9, 3.936689771958671*^9}, {
  3.936690266907572*^9, 3.936690278145355*^9}, {3.9366904000991096`*^9, 
  3.936690554251712*^9}, {3.936690585279441*^9, 3.936690639278899*^9}, {
  3.936690766197796*^9, 3.9366907661982317`*^9}, {3.9380764406152773`*^9, 
  3.938076451045884*^9}},ExpressionUUID->"2f3ac015-481e-426e-b861-\
b07790bebb21"],

Cell["\<\
Setting up the express HTTP server and Socket.io server socket:\
\>", "Text",
 CellChangeTimes->{{3.936690789169031*^9, 3.936690810225067*^9}, {
  3.9366908534495087`*^9, 
  3.936690860244504*^9}},ExpressionUUID->"df109085-df07-4dd4-8974-\
f579c7c07694"],

Cell["\<\
import express from 'express';
import { createServer } from 'http';
import { Server } from 'socket.io';

const app = express();
const server = createServer(app);
const io = new Server(server, {
\tpath: '/',
\tcors: {
\t\tmethods: ['GET', 'POST'],
\t},
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{
  3.936690718412669*^9, 3.9366907865697727`*^9, {3.9366908298354387`*^9, 
   3.936690830335957*^9}, {3.936690870652012*^9, 
   3.936690878758172*^9}},ExpressionUUID->"66cc9b10-8476-4535-85d9-\
5223640834b4"],

Cell["Setting up event listeners:", "Text",
 CellChangeTimes->{{3.936690883419829*^9, 
  3.936690887198792*^9}},ExpressionUUID->"c885076b-aa2a-40b2-9168-\
e78f76a8caf3"],

Cell["\<\
io.on('connection', (socket) => {
\tconsole.log(
\t\t'Connected users[+]:',
\t\tio.sockets.sockets.size,
\t);

\tconst wlManager = new WLManager(socket, io, base);

\tsocket.on('start-wl', wlManager.startWL);

\tsocket.on('req', (args: [string, object, number]) => {
\t\twlManager
\t\t\t.req(...args)
\t\t\t.then((res) =>
\t\t\t\tconsole.log('WL[Request]:', { from: socket.id, args, res }),
\t\t\t);
\t});

\tsocket.on('disconnect', () => {
\t\tconsole.log(
\t\t\t'Connected users\\x1b[1;31m[-]\\x1b[0;39m:',
\t\t\tio.sockets.sockets.size,
\t\t);
\t\t// Cleanup WL process if no clients
\t\tif (io.sockets.sockets.size < 1) wlManager.cleanupWL();
\t});
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.936690888119945*^9, 
  3.936690926879285*^9}},ExpressionUUID->"e52e1bcf-40e6-4906-a7d2-\
3912f946f280"],

Cell["Listen to incoming connections on port 3000:", "Text",
 CellChangeTimes->{{3.9366910415804367`*^9, 3.936691060945957*^9}, {
  3.936691148881432*^9, 
  3.936691151436523*^9}},ExpressionUUID->"ed4ff1ce-6b4a-4f66-9031-\
ec286e737372"],

Cell["\<\
server.listen(3000, () => {
\tconsole.log('Listening on port 3000');
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.93669106598279*^9, 
  3.936691140161367*^9}},ExpressionUUID->"275e5bfb-1f11-4079-bc6b-\
4ee26ac912fc"]
}, Closed]],

Cell[CellGroupData[{

Cell["WebHanlder", "Subsubsection",
 CellChangeTimes->{{3.9208941421511784`*^9, 3.920894159635481*^9}, {
  3.920894388867655*^9, 3.9208944515770645`*^9}, {3.938077714496722*^9, 
  3.9380777267350283`*^9}, {3.938077818098133*^9, 
  3.9380778449407988`*^9}},ExpressionUUID->"95adb971-4002-4f5c-83c3-\
d18799c55ff5"],

Cell[TextData[{
 "The handler for the web deployment is defined as a class inside ",
 ButtonBox["WebHandler.ts",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
web/src/renderer/WebHandler.ts"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/web/src/\
renderer/WebHandler.ts"],
 "."
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938077741410241*^9, 
   3.938077806421925*^9}},ExpressionUUID->"7d7ab885-c517-48f6-a905-\
355b9b233e94"],

Cell["\<\
Its constructor takes in a socket.io and then exposes its send, on and once \
methods:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938077856418614*^9, 3.938077904203973*^9}, {3.938078118203689*^9, 
   3.9380781184102707`*^9}},ExpressionUUID->"16fa88e5-f2b9-4225-9c52-\
6ab01d4cdf59"],

Cell["\<\
class WebHandler {
\tprivate socket: Socket;
\tpublic api: Handler;
\t
\tprivate on(channel: string, callback: (...args: any[]) => void): void {
\t\tconsole.log(`Setting up listener for event: ${channel}`);
\t\tconst subscription = (...args: unknown[]) => callback(...args);
\t\tthis.socket.on(channel, subscription);

\t\treturn () => {
\t\t\tthis.socket.removeListener(channel, subscription);
\t\t};
\t}
\t
\tprivate send(channel: string, ...args: any[]): void {
\t\tconsole.log(`Sending event: ${channel}`, args);
\t\tthis.socket.emit(channel, ...args);
\t}
\t
\tprivate once(channel: string, func: (...args: unknown[]) => void): void {
\t\tthis.socket.once(channel, func);
\t}

\tconstructor(socket: Socket, mode: Environments = 'web') {
\t\tthis.socket = socket;
\t\tthis.api = {
\t\t\tenv: mode,
\t\t\tipc: {
\t\t\t\ton: this.on.bind(this),
\t\t\t\tsend: this.send.bind(this),
\t\t\t\tonce: this.once.bind(this),
\t\t\t},
\t\t};
\t}
}\
\>", "ExternalLanguage",
 TaggingRules-><|
  "ExternalEvaluateData" -> <|
    "System" -> "NodeJS", "ID" -> "DefaultNodeJSSession"|>|>,
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938077910080616*^9, 3.938077910425119*^9}, {3.9380779957811193`*^9, 
   3.938077997599435*^9}, {3.9380781026312027`*^9, 3.938078103094762*^9}, {
   3.938182749791731*^9, 3.938182750055805*^9}, {3.938226516366168*^9, 
   3.938226518972357*^9}},ExpressionUUID->"a5045ba2-7a79-4883-bc1e-\
72e88b3f956d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rendering Frontend component", "Subsubsection",
 CellChangeTimes->{{3.936695721729354*^9, 3.936695752712813*^9}, 
   3.936703921361765*^9, 3.9367229124758587`*^9, {3.936726519490039*^9, 
   3.936726520405157*^9}, 
   3.938076412654158*^9},ExpressionUUID->"66415059-4ac8-4130-a039-\
9fec5d6dd9c1"],

Cell["\<\
The web renderer then sets up all event listeners and passes the WebHandler \
to the Frontend component:\
\>", "Text",
 CellChangeTimes->{{3.936695838785645*^9, 3.93669584668535*^9}, {
  3.936695912126327*^9, 3.936695943781516*^9}, {3.9366960525191317`*^9, 
  3.9366960773296223`*^9}, {3.93669626339522*^9, 
  3.936696266999229*^9}},ExpressionUUID->"bc094008-3f06-4e0c-8d7e-\
4cca732cd8c4"],

Cell["\<\
import { createRoot } from 'react-dom/client';
import { Frontend } from '@wrb/frontend';
import { io } from 'socket.io-client';
import WebHandler from './WebHandler';
import React from 'react';
import { domain } from '../../package.json';
import Favicon from 'react-favicon';
import favicon from '@wrb/frontend/assets/icon.ico';

const socket = io(
\tprocess.env.NODE_ENV === 'development' ? 'localhost:3000' : `${domain}`,
\t{
\t\tpath: process.env.NODE_ENV === 'development' ? '/' : '/.ipc/',\t\t\t// On \
WAS deployement, nginx is used to route the enpoint /.ipc to port 3000
\t},
);
const webHandler = new WebHandler(socket);

const container = document.getElementById('root') as HTMLElement;
const root = createRoot(container);
root.render(
\t<React.StrictMode>
\t\t<Favicon url={favicon} iconSize={216} />
\t\t<Frontend api={webHandler.api} />
\t</React.StrictMode>,
);

webHandler.api.ipc.on('connect', () => {
\tconsole.log('Connected to server');
\twebHandler.api.ipc.send('start-wl');
});

window.addEventListener('beforeunload', () => {
\tsocket.disconnect();
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.9366959459567013`*^9, 3.9366959507746477`*^9}, {
  3.936695997999242*^9, 3.936696014200798*^9}, {3.9366960896702213`*^9, 
  3.936696179249851*^9}, {3.9366962343725367`*^9, 3.936696236990488*^9}, {
  3.938183777301807*^9, 
  3.938183778304504*^9}},ExpressionUUID->"5d09b175-8293-43a7-aa13-\
5aa70815fc09"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["The useIPC hook", "Subsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, {
  3.93803208450835*^9, 
  3.938032092243906*^9}},ExpressionUUID->"0ab4ebfe-ce54-47a4-a0cd-\
04cae718498c"],

Cell[TextData[{
 "The ",
 ButtonBox["useIPC",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
frontend/src/hooks/useIPC.tsx"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
frontend/src/hooks/useIPC.tsx"],
 " hook, which exposes the required methods for setting up event-based \
communication with the backend. However the correct API is passed in during \
context creation."
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938032171048753*^9, 3.938032301608747*^9}, {3.938033162920877*^9, 
   3.938033183347033*^9}, {3.938033541373437*^9, 3.9380335598813066`*^9}, {
   3.9380337051433268`*^9, 3.938033705925806*^9}, {3.9380337549236717`*^9, 
   3.938033754924878*^9}, {3.938085799885909*^9, 3.938085800532928*^9}, {
   3.93818181494042*^9, 
   3.9381818199951468`*^9}},ExpressionUUID->"26e36512-2716-4c77-ab78-\
c097fd6cb741"],

Cell["\<\
Typical usage from within the renderer would looks something like this:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9380331394834137`*^9, 3.938033151540638*^9}, {3.938033205246697*^9, 
   3.938033218091501*^9}},ExpressionUUID->"c3a00cef-5825-4c48-8d52-\
230eecc38bf9"],

Cell["\<\
/* ... */
import { useIPC, IPCProvider } from '@wrb/frontend/src/hooks/useIPC'

function App() {
\treturn (
\t\t<IPCProvider>
\t\t\t<Component>
\t\t</IPCProvider>
\t)
}

function Component() {
\tconst { env, ipc } = useIPC();
\tconst [data, setData] = useState<string[]>(); 
\t
\t
\t
\tuseEffect(() => {
\t\tipc.once('message', (msg: string) => {
\t\t\tconsole.log('Received message', msg);
\t\t\tipc.send('message', ['reply'])
\t\t})
\t\tipc.on('event', (data: string[]) => {
\t\t\tsetData(data)
\t\t})
\t})
\t
\treturn <>{data && data.map((str) => <Text>{str}</Text>)}<>
}
}\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.9333262090299816`*^9, 3.933326267326948*^9}, {
   3.936686150493496*^9, 3.9366862389568853`*^9}, {3.936686279588873*^9, 
   3.9366865261382627`*^9}, {3.936686576850149*^9, 3.9366867835313263`*^9}, {
   3.936686882896039*^9, 3.9366869306215754`*^9}, {3.938031791243228*^9, 
   3.9380317975619*^9}, 3.9380320458759203`*^9, {3.938181865452284*^9, 
   3.938181949065619*^9}, {3.938181998680698*^9, 3.938182046811005*^9}, {
   3.938182349516786*^9, 3.938182515717636*^9}, {3.9382266225654173`*^9, 
   3.938226628091714*^9}},ExpressionUUID->"e857d3c1-ae7b-4539-ae09-\
249bee7f18d7"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b70cbb7a-2e26-46dd-8653-767005d84470"],

Cell["4 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.93818379081983*^9, 3.938183791566634*^9}, 
   3.938184023159779*^9},ExpressionUUID->"0ff00f0f-56fc-40ea-81df-\
3911399a902c"],

Cell[CellGroupData[{

Cell["The useWL hook", "Section",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938028579127795*^9, 3.938028597319664*^9}, {3.938183973160047*^9, 
   3.938183973462851*^9}},ExpressionUUID->"00997d98-22b1-4d5e-969e-\
0d00ce84c03c"],

Cell[TextData[{
 "The ",
 ButtonBox["useWL",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
frontend/src/hooks/useWL.tsx"], None},
  ButtonNote->
   "/mnt/Data/Working/personal-projects/personal-project-WRB/packages/\
frontend/src/hooks/useWL.tsx"],
 " hook is used to monitor and interface with the WL sockets. It makes use of \
the useIPC hook which makes it agnostic to environment."
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938028631919589*^9, 3.938028725021926*^9}, {3.9380287644245853`*^9, 
   3.938028765674309*^9}, {3.938028820532007*^9, 
   3.938028820533176*^9}},ExpressionUUID->"44217083-0ba6-4b6e-99ff-\
58980695572f"],

Cell[CellGroupData[{

Cell["WL status checks", "Subsection",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9380290242909203`*^9, 3.938029032083371*^9}, {3.9380291920743504`*^9, 
   3.9380291959968224`*^9}},ExpressionUUID->"e81a4ce3-1372-4b37-b8f5-\
e28b96a2778c"],

Cell["\<\
The hook sets up an event-listener on the renderer to receive the status code \
from the main process:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9380290401501827`*^9, 3.938029074390333*^9}, {3.938029198203792*^9, 
   3.938029202465087*^9}},ExpressionUUID->"8b88ee9a-5438-48e0-b7b8-\
0fd94842656f"],

Cell["\<\
useEffect(() => {
\tapi.ipc.on('wl-status', (code) => {
\t\thandleWlCode(code);
\t});
});\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.933323615815214*^9, 3.933323641495062*^9}, {
   3.9333238698034115`*^9, 3.9333239428492393`*^9}, 3.9333252598139687`*^9, 
   3.9333257942146378`*^9, {3.933360618470339*^9, 3.933360618755066*^9}, 
   3.9340139297599373`*^9, {3.936718585167725*^9, 3.93671859069387*^9}, {
   3.936719090162772*^9, 3.9367191262580137`*^9}, {3.936719390401499*^9, 
   3.9367194181618958`*^9}, {3.938029085326911*^9, 
   3.938029136205398*^9}},ExpressionUUID->"aab067fc-d7d2-4c31-bb12-\
137ec2794424"],

Cell["\<\
It also sets up a node timeout to periodically make a request to the WL\
\[CloseCurlyQuote]s diagnostic endpoint:\
\>", "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938029183785445*^9, 3.93802918906872*^9}, {3.93802922428273*^9, 
   3.9380292879795713`*^9}, {3.938180738201517*^9, 
   3.938180739426759*^9}},ExpressionUUID->"50bfafd9-c636-41d3-8c20-\
77b965671258"],

Cell["\<\
useEffect(() => {
\t\tconst interval = setInterval(() => {
\t\t\taliveQ();
\t\t}, 15000); 

\t\treturn () => clearInterval(interval);
\t},[aliveQ, isActive]);\
\>", "ExternalLanguage",
 TaggingRules-><|
  "ExternalEvaluateData" -> <|
    "System" -> "NodeJS", "ID" -> "DefaultNodeJSSession"|>|>,
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938029302295553*^9, 
   3.938029350594994*^9}},ExpressionUUID->"0c96ae1f-e9ba-41d2-a866-\
e9c71861b3f8"],

Cell[TextData[{
 "Both of these set the public state variable ",
 StyleBox["isActive.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9380314856753483`*^9, 
   3.9380315075426826`*^9}},ExpressionUUID->"9ca3c828-d02b-4045-9258-\
f85b437dbe01"]
}, Closed]],

Cell[CellGroupData[{

Cell["WL requests", "Subsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, {
  3.938031102852178*^9, 
  3.938031104545394*^9}},ExpressionUUID->"37db4114-3744-49c3-8f42-\
88221b1848e5"],

Cell[TextData[{
 "The hook exposes the ",
 StyleBox["req",
  FontSlant->"Italic"],
 " function for making requests to the WL sockets in a way that is agnostic \
to environment:"
}], "Text",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938031111332362*^9, 
   3.938031143394906*^9}},ExpressionUUID->"cd8fd52a-5449-41aa-b0ab-\
cfe247b516f0"],

Cell["\<\
async function req(
\tendpoint: string,
\tdataIn: object = {},
\tport: number = 4848,
): Promise<unknown> {
\treturn new Promise((resolve, reject) => {
\t\ttry {
\t\t\tapi.ipc.send('req', [endpoint, dataIn, port]);
\t\t\tapi.ipc.once('req', (res) => {
\t\t\t\tconsole.log('Received response:', res);
\t\t\t\tresolve(res);
\t\t\t});
\t\t} catch (error) {
\t\t\treject(error);
\t\t}
\t});
}\
\>", "ExternalLanguage",
 TaggingRules-><|
  "ExternalEvaluateData" -> <|
    "System" -> "NodeJS", "ID" -> "DefaultNodeJSSession"|>|>,
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.93803114938894*^9, 
   3.938031181014518*^9}},ExpressionUUID->"5e101e5f-acf0-4c40-8474-\
e75a3c045b6a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example usage", "Subsection",
 CellChangeTimes->{{3.920842458044142*^9, 3.920842460357319*^9}, {
  3.938031763224512*^9, 
  3.938031766882922*^9}},ExpressionUUID->"16a52db9-2a9d-4d43-a06a-\
b1fafed345b8"],

Cell["\<\
import { useWL, WLProvider } from '@wrb/frontend/src/hooks/useWL'

function App() {
\treturn (
\t\t<WLProvider>
\t\t\t<Component>
\t\t</WLProvider>
\t)
}

function Component() {
\tconst { isActive, req } = useWL();
\t
\treturn isActive ? (
\t\t<h1> Wolfram Language is active </h1>
\t\t<button
\t\t\tonClick={() => {
\t\t\t\treq(
\t\t\t\t\t'endpoint',\t\t\t\t\t\t// Endpoint
\t\t\t\t\t{ param: 'value' },\t\t// Query parameters [Optional] [Default: {}]
\t\t\t\t\t8888\t\t\t\t\t\t\t\t\t// Port number \t\t\t[Optional] [Default: 4848]
\t\t\t\t)
\t\t\t}}
\t\t> Generate request to WL </button>
\t) : (
\t\t<h1> Error </h1>
\t)
}\
\>", "ExternalLanguage",
 CellEvaluationLanguage->"NodeJS",
 CellChangeTimes->{{3.9333262090299816`*^9, 3.933326267326948*^9}, {
   3.936686150493496*^9, 3.9366862389568853`*^9}, {3.936686279588873*^9, 
   3.9366865261382627`*^9}, {3.936686576850149*^9, 3.9366867835313263`*^9}, {
   3.936686882896039*^9, 3.9366869306215754`*^9}, {3.938031791243228*^9, 
   3.9380317975619*^9}, 3.9380320458759203`*^9, {3.93818203240733*^9, 
   3.938182033202506*^9}},ExpressionUUID->"c60b10d2-2f9b-473d-8ca8-\
76517f731187"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"60ed8df2-87fe-4513-964c-d7768048799e"],

Cell["2 min", "AuthorOnly",
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9381841297016973`*^9, 
   3.93818413114425*^9}},ExpressionUUID->"96b20ee3-73d2-483b-af73-\
112999c5b31a"],

Cell[CellGroupData[{

Cell["Yarn", "Section",
 CellChangeTimes->{{3.936723851435014*^9, 3.936723856517653*^9}, {
   3.936726137915792*^9, 3.936726140570196*^9}, 3.9367265222257957`*^9, 
   3.9380783353875103`*^9},ExpressionUUID->"a7f1f758-be07-4df1-a854-\
8aab439982dc"],

Cell[TextData[{
 ButtonBox["Yarn",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://classic.yarnpkg.com/en/"], None},
  ButtonNote->"https://classic.yarnpkg.com/en/"],
 " is a package manager with its primary strengths over npm being \
deterministic dependency installation and the use of caching and \
parallelization for faster installations and building."
}], "Text",
 CellChangeTimes->{{3.936724556511106*^9, 3.936724669474245*^9}, {
  3.9367248477618647`*^9, 3.936724847762581*^9}, {3.936726118586925*^9, 
  3.936726120570912*^9}, {3.938181002508898*^9, 
  3.9381810078311853`*^9}},ExpressionUUID->"31a1497b-dd81-4756-a659-\
58b37adfef64"],

Cell[CellGroupData[{

Cell["Packages", "Subsection",
 CellChangeTimes->{{3.9367242636295357`*^9, 3.936724266937085*^9}, 
   3.936726523616089*^9, 
   3.938078336409465*^9},ExpressionUUID->"b0e998dc-7f4d-4869-8962-\
5444c90100d1"],

Cell["\<\
Each element of this boilerplate is separated into its own distinct package \
within the \[OpenCurlyQuote]wrb\[CloseCurlyQuote] scope in the syntax \
\[OpenCurlyQuote]@wrb/packageName\[CloseCurlyQuote]. These packages consist \
of the following:\
\>", "Text",
 CellChangeTimes->{{3.936723871005673*^9, 3.936723953060837*^9}, {
  3.936724159800839*^9, 3.936724170994396*^9}, {3.936724932655079*^9, 
  3.936724956056476*^9}},ExpressionUUID->"6d4ccfe3-14d8-4756-b68f-\
64c4ad6c5c34"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["@wrb/frontend ",
  FontWeight->"Bold"],
 "|\tFrontend"
}], "Subsubsection",
 CellChangeTimes->{{3.936723958001845*^9, 3.936723961019146*^9}, {
   3.936724173934292*^9, 3.9367241781117783`*^9}, {3.936724276765397*^9, 
   3.936724306045418*^9}, 3.936726524440103*^9, 3.938078338124818*^9, {
   3.938079110888709*^9, 3.9380791139788113`*^9}, {3.938079160553369*^9, 
   3.9380792355755777`*^9}, {3.938079278086616*^9, 
   3.938079292389021*^9}},ExpressionUUID->"ce2bac37-ce34-4fa2-8511-\
307c0a942c28"],

Cell["\<\
Contains all interface definitions, assets, styles, hooks, tests and any \
other front end resources. It then exports the entire frontend as a single \
React component which takes as input a Handler.\
\>", "Text",
 CellChangeTimes->{{3.936723974813697*^9, 
  3.936724099624893*^9}},ExpressionUUID->"d40ee248-f9be-4712-b707-\
a1a393327ea8"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["@wrb/wl\t\t ",
  FontWeight->"Bold"],
 "| \tWolfram Language"
}], "Subsubsection",
 CellChangeTimes->{{3.936723963992259*^9, 3.936723965385248*^9}, {
   3.936724105967374*^9, 3.936724109809168*^9}, {3.9367241820271177`*^9, 
   3.936724183347535*^9}, {3.936724279547394*^9, 3.9367243080938396`*^9}, 
   3.9367265259198017`*^9, 3.9380783388520184`*^9, {3.9380791233558273`*^9, 
   3.9380791259315147`*^9}, {3.938079161454109*^9, 3.938079174715494*^9}, {
   3.9380792270147467`*^9, 
   3.9380792839431*^9}},ExpressionUUID->"d9f952da-3cdf-424e-9afd-\
efcaa0c0ee32"],

Cell[TextData[{
 "Contains all wolfram language scripts and definitions. Has no export in JS \
and is used through ",
 StyleBox["require.resolve(\[OpenCurlyQuote]@wrb/wl\[CloseCurlyQuote])", 
  "Code"],
 " which returns the directory to the main ",
 StyleBox["deploy.wls",
  FontSlant->"Italic"],
 " script."
}], "Text",
 CellChangeTimes->{{3.936724114550302*^9, 3.93672415594098*^9}, {
  3.9367241887139397`*^9, 3.93672423725432*^9}, {3.9380783543604527`*^9, 
  3.9380783689924192`*^9}},ExpressionUUID->"854dec0a-fe8e-41b6-aed9-\
3a3bd0772461"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["@wrb/electron\t ",
  FontWeight->"Bold"],
 "| \tDesktop"
}], "Subsubsection",
 CellChangeTimes->{{3.936724254064571*^9, 3.936724311308629*^9}, 
   3.936726526652482*^9, 3.938078339798959*^9, {3.9380791295878057`*^9, 
   3.9380791830725307`*^9}, {3.93807924200182*^9, 
   3.9380792845677977`*^9}},ExpressionUUID->"11d10c18-8259-4288-a9d7-\
614f09c5a82d"],

Cell["\<\
Contains all electron main and handler definitions and the index.tsx script \
which passes the electron handler to the Frontend component and sets up all \
event handlers.\
\>", "Text",
 CellChangeTimes->{{3.936724319165217*^9, 3.936724372560726*^9}, {
  3.936724424976557*^9, 
  3.9367244746064157`*^9}},ExpressionUUID->"70733b42-0daa-49e4-b0b9-\
6c43040d609d"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["@wrb/web",
  FontWeight->"Bold"],
 "  \t| \tWeb"
}], "Subsubsection",
 CellChangeTimes->{{3.9367242909728107`*^9, 3.936724315255354*^9}, 
   3.9367265274305773`*^9, 3.9380783405278673`*^9, {3.938079151018186*^9, 
   3.938079176813198*^9}, {3.938079298220236*^9, 3.938079313984983*^9}, {
   3.938181125335834*^9, 
   3.9381811306216*^9}},ExpressionUUID->"40dd5e8b-304c-4bc9-820c-\
02e5c146b64f"],

Cell["\<\
Contains definitions  of WRB IPC node server and the index.tsx script passing \
the WebHandler to the Frontend and setting up all event listeners.\
\>", "Text",
 CellChangeTimes->{{3.936724376475025*^9, 3.936724421216116*^9}, {
  3.936724479900689*^9, 
  3.936724504663138*^9}},ExpressionUUID->"248367b4-af69-4290-a853-\
3a657ebed37e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Scripts", "Subsection",
 CellChangeTimes->{{3.936724723936098*^9, 3.936724725703727*^9}, 
   3.936726528321252*^9, 
   3.938078879142922*^9},ExpressionUUID->"29132159-4664-49b1-bfec-\
3b6426830c6f"],

Cell[TextData[{
 "Yarn scripts allow for the definitions of commands within the ",
 StyleBox["package.json",
  FontSlant->"Italic"],
 " file which can be easily run in the command line using ",
 StyleBox["yarn commandName", "Code"],
 "."
}], "Text",
 CellChangeTimes->{{3.9367247292642603`*^9, 3.936724831624205*^9}, {
  3.938078440694728*^9, 
  3.93807845063008*^9}},ExpressionUUID->"b18b1419-4e5a-4da3-9aa6-\
58de2a4badf3"],

Cell["\<\
Each sub-package within WRB contains its own yarn scripts and there are far \
too many to go through in this talk, however, the main scripts are exposed to \
the main root package are outlined below:\
\>", "Text",
 CellChangeTimes->{{3.936724867750608*^9, 3.9367249159137506`*^9}, {
  3.9367249678482513`*^9, 
  3.936724977867158*^9}},ExpressionUUID->"3e9d1043-af72-4c5f-b706-\
54923381614e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Script" -> "yarn test", "Alternatives" -> "-", "Description" -> 
        "Runs front-end jest tests"|>, <|
       "Script" -> "yarn start:{alt}", "Alternatives" -> 
        "'web' | 'electron' | 'wl'", "Description" -> 
        "Starts a preview version of the application"|>, <|
       "Script" -> "yarn dev:{alt}", "Alternatives" -> "'web' | 'electron'", 
        "Description" -> 
        "Starts a development server for the application"|>, <|
       "Script" -> "yarn build:{alt}", "Alternatives" -> "'web' | 'electron'",
         "Description" -> "Compile and build package files"|>, <|
       "Script" -> "yarn package:{alt}", "Alternatives" -> 
        "'win' | 'mac' | 'linux'", "Description" -> 
        "Package electron application distributable for given platform"|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Script"} -> 
        1, {All, "Alternatives"} -> 1, {All, "Description"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Script" -> TypeSystem`PackageScope`AtomShape[201.60000000000002`],
             "Alternatives" -> TypeSystem`PackageScope`AtomShape[280.], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.]|>], 
          DirectedInfinity[1], 3, {All}]], 30, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Script", "Alternatives", "Description"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Script"} -> 
        1, {All, "Alternatives"} -> 1, {All, "Description"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Script" -> TypeSystem`PackageScope`AtomShape[201.60000000000002`],
             "Alternatives" -> TypeSystem`PackageScope`AtomShape[280.], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.]|>], 
          DirectedInfinity[1], 3, {All}]], 30, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Script", "Alternatives", "Description"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 5], "Path" -> {}, "DisplayedRowCount" -> 
     30, "DisplayedColumnCount" -> 3, "DataRowCount" -> 5, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["Script", FontWeight -> "DemiBold"], 
                  Style[
                   Style["Script", FontWeight -> "DemiBold"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Script"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Script"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
             Hue[0., 0., 0.7], Background -> Hue[0., 0., 0.15], 
             Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], Automatic}}, Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["Alternatives", FontWeight -> "DemiBold"], 
                  Style[
                   Style["Alternatives", FontWeight -> "DemiBold"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Alternatives"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Alternatives"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
             Hue[0., 0., 0.7], Background -> Hue[0., 0., 0.15], Frame -> {{
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], Automatic}}, Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style["Description", FontWeight -> "DemiBold"], 
                  Style[
                   Style["Description", FontWeight -> "DemiBold"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
             Hue[0., 0., 0.7], Background -> Hue[0., 0., 0.15], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], Automatic}}, Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["yarn test", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Script"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], Automatic}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Alternatives"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], Automatic}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Runs front-end jest tests", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], Automatic}}, ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["yarn start:{alt}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Script"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["'web' | 'electron' | 'wl'", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Alternatives"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Starts a preview version of the application", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["yarn dev:{alt}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Script"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["'web' | 'electron'", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Alternatives"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Starts a development server for the application", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["yarn build:{alt}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Script"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["'web' | 'electron'", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Alternatives"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Compile and build package files", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["yarn package:{alt}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Script"]}, "Item", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{Automatic, 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["'win' | 'mac' | 'linux'", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Alternatives"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Package electron application distributable for given platform", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             Hue[0., 0., 0.05], Frame -> {{
                Hue[0, 0, 0.2], Automatic}, {
                Hue[0, 0, 0.2], 
                Hue[0, 0, 0.2]}}, ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1068., {84.062890625, 94.644921875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1068., {84.062890625, 94.644921875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Text",ExpressionUUID->"3da72850-c9b1-4ccc-92fc-\
e52e52e307e7"],

Cell["For example, package Linux application:", "Text",
 CellChangeTimes->{{3.9367251526060543`*^9, 3.936725160787903*^9}, {
  3.938078480746057*^9, 3.93807849459385*^9}, {3.938078761708803*^9, 
  3.938078764380294*^9}, {3.938078807776409*^9, 
  3.9380788470379763`*^9}},ExpressionUUID->"4224ce0c-4f03-4e94-b5bf-\
54818055b5b1"],

Cell["yarn package:linux", "ExternalLanguage",
 CellEvaluationLanguage->"Shell",
 CellChangeTimes->{{3.936725161755053*^9, 3.936725181175292*^9}, {
  3.938078801191296*^9, 
  3.938078806171062*^9}},ExpressionUUID->"4db82a1a-fae8-43f6-ab16-\
43486be5fbe8"],

Cell["Or a command within a sub-package can be called using:", "Text",
 CellChangeTimes->{{3.9367251990083513`*^9, 
  3.93672521491648*^9}},ExpressionUUID->"fe7a5241-81e4-4e8c-8579-\
84c608e778c5"],

Cell[TextData[{
 "yarn workspace ",
 StyleBox["subPackageName",
  FontSlant->"Italic"],
 " ",
 StyleBox["commandName",
  FontSlant->"Italic"]
}], "ExternalLanguage",
 CellEvaluationLanguage->"Shell",
 CellChangeTimes->{{3.936725216613476*^9, 
  3.936725268310885*^9}},ExpressionUUID->"2f54a1e3-b925-4c86-9788-\
56c7c747e73e"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b9db956e-a07f-418e-945c-5416e6ec55e6"],

Cell["Thank you for watching!", "Title",
 CellFrame->False,
 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.938079674325823*^9, 3.9380796901426573`*^9}, {3.938079746625152*^9, 
   3.938079752534521*^9}},ExpressionUUID->"729a46eb-5221-41f4-a385-\
23c511ca0443"],

Cell["\<\
There are many more tools incorporated by this boilerplate that were not \
covered in this talk like:\
\>", "Text",
 CellChangeTimes->{{3.9333268330262566`*^9, 3.9333269955701904`*^9}, {
  3.9366819825792227`*^9, 3.936682002919413*^9}, {3.936707296261197*^9, 
  3.936707298506276*^9}, {3.936725861456427*^9, 3.936725957333267*^9}, {
  3.936728461078413*^9, 3.936728514190353*^9}, {3.938079367749659*^9, 
  3.9380793689486723`*^9}, {3.938079489117062*^9, 3.9380794976574707`*^9}, {
  3.9380795630940332`*^9, 3.938079563514649*^9}, {3.938079596784896*^9, 
  3.938079597139332*^9}, {3.938079773881001*^9, 
  3.93807978712272*^9}},ExpressionUUID->"878bd6ab-2b53-4fbb-8e28-\
e6e2d4ef0639"],

Cell["Jest for frontend unit testing.", "Item",
 CellChangeTimes->{{3.9333268330262566`*^9, 3.9333269955701904`*^9}, {
  3.9366819825792227`*^9, 3.936682002919413*^9}, {3.936707296261197*^9, 
  3.936707298506276*^9}, {3.936725861456427*^9, 3.936725957333267*^9}, {
  3.936728461078413*^9, 3.936728514190353*^9}, {3.938079367749659*^9, 
  3.9380793689486723`*^9}, {3.938079489117062*^9, 
  3.938079525256974*^9}},ExpressionUUID->"c3e20de1-626e-4a64-a635-\
6b4c7b78cb3e"],

Cell["ESLint and Prettier for code linting.", "Item",
 CellChangeTimes->{{3.9333268330262566`*^9, 3.9333269955701904`*^9}, {
  3.9366819825792227`*^9, 3.936682002919413*^9}, {3.936707296261197*^9, 
  3.936707298506276*^9}, {3.936725861456427*^9, 3.936725957333267*^9}, {
  3.936728461078413*^9, 3.936728514190353*^9}, {3.938079367749659*^9, 
  3.9380793689486723`*^9}, {3.938079489117062*^9, 
  3.938079546892705*^9}},ExpressionUUID->"fccf22fd-53e7-4331-8d1c-\
eef3a594efc4"],

Cell["\<\
Github actions for the automation of testing and deployment workflows.\
\>", "Item",
 CellChangeTimes->{{3.9333268330262566`*^9, 3.9333269955701904`*^9}, {
  3.9366819825792227`*^9, 3.936682002919413*^9}, {3.936707296261197*^9, 
  3.936707298506276*^9}, {3.936725861456427*^9, 3.936725957333267*^9}, {
  3.936728461078413*^9, 3.936728514190353*^9}, {3.938079367749659*^9, 
  3.9380793689486723`*^9}, {3.938079489117062*^9, 3.938079511719507*^9}, {
  3.9380809214749928`*^9, 3.938080937245809*^9}, {3.9380809714411297`*^9, 
  3.938080971442753*^9}, {3.938184232125445*^9, 
  3.938184232126668*^9}},ExpressionUUID->"f5235aa7-e875-460b-9ed0-\
7da75327b233"],

Cell["And a bunch more.", "Item",
 CellChangeTimes->{{3.9333268330262566`*^9, 3.9333269955701904`*^9}, {
  3.9366819825792227`*^9, 3.936682002919413*^9}, {3.936707296261197*^9, 
  3.936707298506276*^9}, {3.936725861456427*^9, 3.936725957333267*^9}, {
  3.936728461078413*^9, 3.936728514190353*^9}, {3.938079367749659*^9, 
  3.9380793689486723`*^9}, {3.938079489117062*^9, 3.938079511719507*^9}, {
  3.9380809214749928`*^9, 3.938080937245809*^9}, {3.9380809714411297`*^9, 
  3.938080971442753*^9}, {3.9381842339530363`*^9, 
  3.938184244694706*^9}},ExpressionUUID->"a3b5bcbc-9f1e-4b34-9c0a-\
3f6b4efc58ec"],

Cell["\<\
If you\[CloseCurlyQuote]d like to use this boilerplate as a template for your \
projects, the repository can found on the WRB GitHub page.\
\>", "Text",
 CellChangeTimes->{{3.9333268330262566`*^9, 3.9333269955701904`*^9}, {
   3.9366819825792227`*^9, 3.936682002919413*^9}, {3.936707296261197*^9, 
   3.936707298506276*^9}, {3.936725861456427*^9, 3.936725957333267*^9}, {
   3.936728461078413*^9, 3.936728514190353*^9}, {3.938079367749659*^9, 
   3.938079367799548*^9}, {3.938079452212924*^9, 3.938079478485746*^9}, {
   3.93807960954283*^9, 3.93807962470465*^9}, {3.938081008590578*^9, 
   3.938081036318254*^9}, 3.93808106773907*^9, {3.938103879771923*^9, 
   3.938103880294128*^9}, {3.938181206155581*^9, 
   3.938181206465847*^9}},ExpressionUUID->"da085347-dce7-4f98-aba8-\
26742ba35b73"],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt1kFqVFEQBdBGJ850C67BiVOHTiMuIMEYnEToFsSduELXYQecifJ5v+r9
278P3IiGpqvqnjfw9d3Xm8/PDofD6cX5j5vb7++Ox9sfH16d//Hx8fTl4fH+
0/vHb/cP98e3d8/Pv/z55+fp76c3v2QfORxebpixDbe9PbPDhB04cuSYswNH
jhxzduDY4VjV0pjIzCZn3tU9K2EHjhw55uzAkSPHnB04znGsamns3rTpfe9z
zayEHThy5JizA0eOHHN24Lg/x6pv7gtHjhw5cuTIkSPHa3Zckm3fDEeOHDly
5MiRI8c0x6r09V9l1OfY3WHCDhw5cszZgSNHjjk7cOxwnJk06743091hwg45
/XPkyDGnf44cOeb0f7mOe81MR+kLx32E4z7CcR/huI9cm+Oa//H+P2mz0vRr
r+CYbMSRI8ccI44cOeYYjV2xJjNl+6bPvKuqZ44cOXLkyJEjx307jjW5bWa+
tG3fTO11aeHIkWNOOHLkmBOOY3vObKnqpc28dE3bfeHIkWNOOHLkmBOOl+g4
1lKfdb5R1RVVsxK65ciRI0eOHDlynOnY19KaPedMn2k9tvP8Wzhy5JhzC0eO
HHNu4XiJjlXZ9s1se8WaSznmXMGRI8ecKzhy5JhzRYJjVbdVn5m5YV+W38WR
I0eOHDly5HjNjlXWVSJ9b29selXWXMGRI0eOHDly5LhXx7RU7Tnz7eXfxTGt
f44cOeb0z5Ejx5z+//U9Szbvy9i9286a+Znld3FM/gzHfCOOHDnmGHHkuMTx
7++vSt+sqib7dh57aQndcuTIMadbjhw55nTLMc1xyQ5VTc7sLS0cOXLMCUeO
HHPCkWO+Y9+svukz98nsliNHjjndcuTIMadbjhyrOpkjUvsZjhw5cuTIkSPH
a3asSvctW02vyppLOXLkyJEjR44cr8dxZmY6bjtrbJ/lHXLkyJEjR44cOe7V
UXaQ30PLckA=
    "], {{0, 152.}, {152., 0}}, {0, 255},
    ColorFunction->Hue],
   BoxForm`ImageTag["Byte", ColorSpace -> "HSB", Interleaving -> True],
   Selectable->False],
  AspectRatio->1.0016803956307636`,
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{318.34176733283755`, 318.87670744775323`},
  ImageSizeRaw->{152., 152.},
  PlotRange->{{-1.3881416668551196`, 
   152.7499793273126}, {-1.3881416668551196`, 153.00899235236537`}},
  PlotRangePadding->None], "\[IndentingNewLine]", 
 ButtonBox[
  RowBox[{"WRB", " ", "Github", " ", "page"}],
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/ToneAr/wolfram-react-boilerplate"], None},
  ButtonNote->"https://github.com/ToneAr/wolfram-react-boilerplate"]}], "Text",\

 CellChangeTimes->{
  3.921165072571169*^9, {3.934656135665935*^9, 3.9346561412891407`*^9}, 
   3.937039473524708*^9, {3.93703963216148*^9, 3.937039633101706*^9}, {
   3.9380806978036613`*^9, 3.93808075963795*^9}, {3.9380810127578707`*^9, 
   3.938081018942951*^9}},
 TextAlignment->Center,ExpressionUUID->"61ec7fda-05c7-493e-859d-774b25a9575e"]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 27}},
Magnification:>1.4 Inherited,
FrontEndVersion->"14.2 for Linux x86 (64-bit) (October 2, 2024)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "ReverseColor.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
      "DarkModeEverything", "Subtitle", 
       CellChangeTimes -> {{3.920972590741377*^9, 3.920972598058214*^9}}], 
      Cell[
       CellGroupData[{
         Cell["Notebook", "Section"], 
         Cell[
          StyleData["Notebook"], NotebookAutoSave -> True, 
          InitializationCellEvaluation -> True, InitializationCellWarning -> 
          False, WindowElements -> {
           "VerticalScrollBar", "HorizontalScrollBar", "MenuBar"}, 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.2, 0.2, 0.2], "HoverColor" -> 
            RGBColor[0.14, 0.74, 0.82], "Margins" -> {0, 5}, "Thickness" -> 
            1.2, "Widths" -> {0, 6}}, 
          CellLabelTemplate -> <|
           "In" -> "`1` \[RightAngleBracket]", "InExpired" -> 
            "\:f759 \[RightAngleBracket]", "Out" -> "\[LeftAngleBracket] `1`",
             "OutExpired" -> "\[LeftAngleBracket] \:f759"|>, 
          CellChangeTimes -> {
           3.921165072571169*^9, {3.934656135665935*^9, 
            3.9346561412891407`*^9}, 3.937039473524708*^9, {
            3.93703963216148*^9, 3.937039633101706*^9}}, 
          AutoStyleOptions -> {
           "CommentStyle" -> {
             FontColor -> Hue[0.72, 0.5, 1], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False, 
              FontWeight -> None}, 
            "ExcessArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "FunctionLocalVariableStyle" -> {
             FontColor -> RGBColor[0.5, 0.84, 0.45]}, 
            "GraphicsCompatibilityProblemStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "LocalScopeConflictStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "LocalVariableStyle" -> {
             FontColor -> RGBColor[0.52549, 0.843137, 0.5]}, 
            "MissingArgumentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "MisspelledWordStyle" -> {
             FontColor -> 
              RGBColor[
               0.8274509803921568, 0.21176470588235294`, 0.5098039215686274]},
             "NoKernelPresentStyle" -> {FontColor -> RGBColor[0.6, 0.1, 0.1]},
             "PatternVariableStyle" -> {
             FontColor -> RGBColor[0.486275, 0.72549, 0.619608], FontSlant -> 
              "Italic"}, 
            "StringStyle" -> {
             FontColor -> RGBColor[0.95, 0.76, 0.1], ShowAutoStyles -> False, 
              ShowSyntaxStyles -> False, AutoNumberFormatting -> False}, 
            "SymbolContextStyles" -> {"System`" -> {
                Hue[0.05, 0., 1]}, "Global`" -> {
                Hue[0.22, 0.3, 1]}, Automatic -> {
                Hue[0.4, 0.25, 1]}}, 
            "UndefinedSymbolStyle" -> {FontColor -> Hue[0.59, 0.45, 1]}, 
            "UnknownOptionStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 0.1843137254901961]},
             "UnwantedAssignmentStyle" -> {
             FontColor -> 
              RGBColor[
               0.8627450980392157, 0.19607843137254902`, 
                0.1843137254901961]}}, 
          CodeAssistOptions -> {
           "HeadHighlightStyle" -> {Background -> Hue[0.6, 0.8, 0.75]}, 
            "MatchHighlightStyle" -> {
             Background -> RGBColor[0.5, 0.8, 0.3], FontColor -> 
              RGBColor[0.1, 0.1, 0.1]}}, TabSpacings -> {2.}, 
          StyleHints -> <|
           "CodeFont" -> "Anonymous Pro", "GroupOpener" -> {"Inline"}, 
            "OperatorRenderings" -> <|
             "|->" -> "\[Function]", "->" -> "\[Rule]", ":>" -> 
              "\[RuleDelayed]", "<=" -> "\[LessEqual]", ">=" -> 
              "\[GreaterEqual]", "!=" -> "\[NotEqual]", "==" -> "\[Equal]", 
              "<->" -> "\[TwoWayRule]", "[[" -> "\[LeftDoubleBracket]", "]]" -> 
              "\[RightDoubleBracket]", "<|" -> "\[LeftAssociation]", "|>" -> 
              "\[RightAssociation]"|>|>, FontColor -> RGBColor[0, 0, 0], 
          Background -> Hue[0.05, 0.15, 0.07], 
          PaneBoxOptions -> {Background -> GrayLevel[0.2]}, 
          CodeAssistOptions -> {"MenuHoverColor" -> GrayLevel[0.8]}, 
          CodeAssistOptions -> {
           "MenuHighlightFillColor" -> Hue[0.5, 0.3, 0.6]}, 
          CodeAssistOptions -> {"MenuHoverFillColor" -> Hue[0.5, 0.3, 0.6]}], 
         
         Cell[
          CellGroupData[{
            Cell[
             StyleData["AuthorOnly", StyleDefinitions -> StyleData["Text"]], 
             CellFrameLabels -> {{
                StyleBox["Note", "Message", Background -> None], None}, {
               None, None}}, MenuCommandKey :> MenuKey["a"]], 
            Cell[
             StyleData["AuthorOnly", "SlideShow"], CellOpen -> False]}, 
           Open]], 
         Cell[
          StyleData["DockedCell"], Background -> GrayLevel[0.1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Code Assist Styles", "Section"], 
         Cell[
          StyleData["CodeAssistCompletion"], CellFrame -> 1., 
          CellFrameMargins -> {{18., 17.}, {7., 7.}}, CellFrameColor -> 
          RGBColor[0.96, 0.96, 0.96], TextAlignment -> Left, 
          TextJustification -> 0., ShowStringCharacters -> False, FontFamily -> 
          Dynamic[
            AbsoluteCurrentValue[{StyleHints, "CodeFont"}]], FontSize :> 
          CurrentValue["MenuFontSize"], FontWeight -> "DemiBold", FontSlant -> 
          "Plain", Magnification -> 1, FontColor :> GrayLevel[0.1], 
          FontOpacity -> Automatic, Background -> GrayLevel[0]], 
         Cell[
          StyleData[
          "CodeAssistTemplate", StyleDefinitions -> 
           StyleData["CodeAssistCompletion"]], 
          CellFrameMargins -> {{15., 15.}, {9., 10.}}, FontColor -> 
          GrayLevel[0], Background -> None], 
         Cell[
          StyleData[
          "CodeAssistSpecialCharacter", StyleDefinitions -> 
           StyleData["CodeAssistCompletion"]], FontSize -> 6 + Inherited], 
         Cell[
          StyleData[
          "CodeAssistCompletionHighlight", StyleDefinitions -> 
           StyleData["CodeAssistCompletion"]], 
          FontVariations -> {"Underline" -> True}], 
         Cell[
          StyleData[
          "CodeAssistVariableCompletion", StyleDefinitions -> 
           StyleData["CodeAssistCompletion"]], FontColor -> 
          RGBColor[0., 0., 0.4]], 
         Cell[
          StyleData[
          "CodeAssistVariableCompletionHighlight", StyleDefinitions -> 
           StyleData["CodeAssistVariableCompletion"]], 
          FontVariations -> {"Underline" -> True}], 
         Cell[
          StyleData[
          "CodeAssistSeparator", StyleDefinitions -> 
           StyleData["CodeAssistUsage"]], 
          CellFrameMargins -> {{9., 7.}, {7., 7.}}, FontFamily :> 
          CurrentValue["MenuFontFamily"], FontWeight -> "Bold", FontColor -> 
          RGBColor[0.4, 0.5, 0.58]], 
         Cell[
          StyleData[
          "CodeAssistSeparatorHighlight", StyleDefinitions -> 
           StyleData["CodeAssistSeparator"]], FontWeight -> "Bold"], 
         Cell[
          StyleData["CodeAssistUsage"], 
          CodeAssistOptions -> {
           "MenuBorderColor" -> RGBColor[0.93, 0.93, 0.93]}, TextAlignment -> 
          Left, TextJustification -> 0., ShowStringCharacters -> False, 
          FontFamily -> "Helvetica", FontSize :> 
          CurrentValue["MenuFontSize"] - 1., FontWeight -> "Plain", FontSlant -> 
          "Plain", Magnification -> 1, FontColor -> RGBColor[0.3, 0.3, 0.3], 
          FontOpacity -> Automatic, Background -> None], 
         Cell[
          StyleData[
          "FunctionTemplateTooltip", StyleDefinitions -> 
           StyleData["TooltipLabel"]], 
          CellFrameMargins -> {{5., 5.}, {5., 5.}}, CellFrameColor :> 
          CurrentValue[{"SystemColors", "TooltipFrame"}], 
          CodeAssistOptions -> {
           "MenuBorderColor" -> RGBColor[0.93, 0.93, 0.93]}, FontColor :> 
          GrayLevel[0.2], Background -> RGBColor[0.996, 0.992, 0.832]], 
         Cell[
          StyleData["FunctionTemplateArgument"], StyleMenuListing -> None, 
          FontFamily -> "Times", FontSize :> CurrentValue["TooltipFontSize"], 
          FontWeight -> "Plain", FontSlant -> "Italic"], 
         Cell[
          StyleData["FunctionTemplateHighlight"], StyleMenuListing -> None, 
          FontFamily :> CurrentValue["TooltipFontFamily"], FontSize :> 
          CurrentValue["TooltipFontSize"], FontWeight -> "Bold"], 
         Cell[
          StyleData[
          "CodeAssistString", StyleDefinitions -> 
           StyleData["CodeAssistCompletion"]], 
          CellFrameMargins -> {{9., 9.}, {7., 7.}}, FontColor :> 
          GrayLevel[0.4]], 
         Cell[
          StyleData[
          "CodeAssistCharCompletion", StyleDefinitions -> 
           StyleData["CodeAssistCompletion"]], 
          CellFrameMargins -> {{18., 11.}, {7., 7.}}], 
         Cell[
          StyleData["MisspelledWord"], 
          FontVariations -> {"SquiggleStyle" -> RGBColor[1., 0., 0.]}, 
          FontOpacity -> Automatic], 
         Cell[
          StyleData["CodeAssistInlineFormula"], StripStyleOnPaste -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           LanguageCategory -> "Formula", ScriptLevel -> 1, 
          SingleLetterItalics -> True], 
         Cell[
          StyleData["Translation", StyleDefinitions -> StyleData["Input"]], 
          ShowAutoStyles -> False, SpanMinSize -> 1.5, SpanMaxSize -> 1.5, 
          FontFamily -> "Helvetica", FontSize -> -2 + Inherited, FontWeight -> 
          "Plain", Magnification -> Dynamic[
            AbsoluteCurrentValue[
             EvaluationNotebook[], Magnification]], FontColor -> 
          RGBColor[0.55, 0.68, 0.75], 
          TemplateBoxOptions -> {DisplayFunction -> (GridBox[{{
                SlotSequence[1]}}]& )}, 
          GridBoxOptions -> {GridBoxBackground -> {}}], 
         Cell[
          StyleData[
          "SelectedTranslation", StyleDefinitions -> 
           StyleData["Translation"]], FontWeight -> "Bold"], 
         Cell[
          StyleData["CodeAssistReference"], 
          CellFrameMargins -> {{18., 7.}, {4., 5.}}, TextAlignment -> Left, 
          TextJustification -> 0., ShowStringCharacters -> False, FontFamily -> 
          "Source Sans Pro", FontSize :> CurrentValue["MenuFontSize"], 
          FontWeight -> "Plain", FontSlant -> "Plain", FontTracking -> 
          "Plain", Magnification -> 1, FontColor -> RGBColor[0.2, 0.2, 0.2], 
          FontOpacity -> Automatic, Background -> None]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{0, 0}, {4, 0}}, 
             CellMargins -> {{10, 0}, {5, 5}}, CellFrameMargins -> 10, 
             CellFrameColor -> Hue[0.44, 0.15, 1], 
             CellSize -> {Automatic, Automatic}, TextAlignment -> Center, 
             FontSize -> 50, FontWeight -> Bold, 
             FontVariations -> {"Outline" -> True}, FontColor -> 
             Hue[0.42, 0.2, 1]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{10, 0}, {5, 5}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], CellMargins -> {{0, 0}, {40, 0}}, 
             TextAlignment -> Right, FontColor -> Hue[0.42, 0.2, 1]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{0, 0}, {40, 0}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Chapter"], CellFrame -> {{0, 0}, {0, 3}}, 
             ShowGroupOpener -> "InsideFrame", 
             CellMargins -> {{10, 0}, {5, 5}}, CellFrameColor -> 
             Hue[0.47, 0.4, 0.7], FontColor -> Hue[0.42, 0.35, 1], Background -> 
             Hue[0.12, 0, 0.24, 0.]], 
            Cell[
             StyleData["Chapter", "SlideShow"], 
             CellMargins -> {{10, 0}, {5, 5}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 2}}, 
             ShowGroupOpener -> "InsideFrame", 
             CellMargins -> {{25, 0}, {5, 5}}, CellFrameColor -> 
             Hue[0.5, 0.5, 0.55], FontColor -> Hue[0.47, 0.6, 0.75], 
             Background -> RGBColor[0.13, 0.15, 0.15, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{40, 0}, {5, 5}}, 
             CellChangeTimes -> {{3.938036229554076*^9, 
              3.938036230092506*^9}}]}, Closed]], 
         Cell[
          StyleData[
          "SectionThumbnail", StyleDefinitions -> StyleData["Section"]], 
          ShowGroupOpener -> "Thumbnail"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellFrame -> {{0, 0}, {0, 1}}, 
             ShowGroupOpener -> "InsideFrame", 
             CellMargins -> {{40, 0}, {5, 5}}, CellFrameColor -> 
             Hue[0.5, 0.5, 0.27], 
             CellChangeTimes -> {{3.920842458044142*^9, 
              3.920842460357319*^9}}, FontSize -> 25, FontColor -> 
             Hue[0.5, 0.6, 0.6], Background -> None], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{80, 0}, {5, 5}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellFrame -> {{0, 0}, {0, 1}}, 
             ShowGroupOpener -> "InsideFrame", 
             CellMargins -> {{55, 0}, {5, 5}}, CellFrameColor -> 
             Hue[0.53, 0.5, 0.15], FontColor -> Hue[0.55, 0.55, 0.6]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{110, 0}, {5, 5}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsubsection"], CellFrame -> {{0, 0}, {0, 1}}, 
             ShowGroupOpener -> "InsideFrame", 
             CellMargins -> {{55, 0}, {5, 5}}, CellFrameColor -> 
             Hue[0.55, 0.5, 0.11], 
             CellChangeTimes -> {{3.920970122165268*^9, 
              3.9209701229044056`*^9}}, FontWeight -> Plain, FontColor -> 
             Hue[0.58, 0.54, 0.35]], 
            Cell[
             StyleData["Subsubsubsection", "SlideShow"], 
             CellMargins -> {{140, 0}, {5, 5}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{55, 10}, {10, 15}}, 
             StyleKeyMapping -> {"Tab" -> "Item", "*" -> "Item"}, 
             CellFrameColor -> GrayLevel[0.2], FontSize -> 14, FontColor -> 
             GrayLevel[1], Background -> None], 
            Cell[
             StyleData["Text", "SlideShow"], 
             CellMargins -> {{100, 10}, {10, 15}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Item", StyleDefinitions -> StyleData["Text"]], 
             CellDingbat -> Cell[
               BoxData[
                StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
                 Hue[0.45, 0.5, 1]]]], CellMargins -> {{85, 10}, {10, -2}}, 
             ReturnCreatesNewCell -> True, 
             StyleKeyMapping -> {
              "Tab" -> "Subitem", "*" -> "Subitem", "Backspace" -> 
               "Text", $CellContext`KeyEvent[
                "Tab", $CellContext`Modifiers -> {"Shift"}] -> "Text"}, 
             CellFrameColor -> GrayLevel[0.2], 
             CellChangeTimes -> {{3.918897773570772*^9, 
              3.918897773657557*^9}}, FontSize -> 12], 
            Cell[
             StyleData[
             "Item", "SlideShow", StyleDefinitions -> StyleData["Text"]], 
             CellMargins -> {{160, 10}, {10, -2}}, FontSize -> 20]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subitem", StyleDefinitions -> StyleData["Item"]], 
             CellDingbat -> 
             StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
               Hue[0.55, 0.6, 0.7]], CellMargins -> {{105, 10}, {10, -2}}, 
             ReturnCreatesNewCell -> True, 
             StyleKeyMapping -> {
              "Tab" -> "Subsubitem", "*" -> "Subsubitem", "Backspace" -> 
               "Item", $CellContext`KeyEvent[
                "Tab", $CellContext`Modifiers -> {"Shift"}] -> "Item"}], 
            Cell[
             StyleData[
             "Subitem", "SlideShow", StyleDefinitions -> 
              StyleData["Item", "SlideShow"]], 
             CellMargins -> {{180, 10}, {10, -2}}, FontSize -> 20]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubitem", StyleDefinitions -> StyleData["Item"]], 
             CellDingbat -> 
             StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
               Hue[0.6, 0.7, 0.4]], CellMargins -> {{130, 10}, {10, -2}}, 
             ReturnCreatesNewCell -> True, 
             StyleKeyMapping -> {
              "Backspace" -> 
               "Subitem", $CellContext`KeyEvent[
                "Tab", $CellContext`Modifiers -> {"Shift"}] -> "Subitem"}], 
            Cell[
             StyleData[
             "Subsubitem", "SlideShow", StyleDefinitions -> 
              StyleData["Item", "SlideShow"]], 
             CellMargins -> {{200, 10}, {10, -2}}]}, Closed]], 
         Cell[
          StyleData["CodeText"]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Input/Output", "Section"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1, 5}], 
         Cell[
          StyleData["WolframAlphaFullOutput"], CellDingbat -> None, 
          CellMargins -> {{80, 0}, {0, 0}}, Background -> None, 
          FractionBoxOptions -> {FontColor -> GrayLevel[1]}], 
         Cell[
          StyleData["CellLabel"], FontSize -> 10, FontWeight -> Bold, 
          FontColor -> Hue[0.5, 0., 0.8]], 
         Cell[
          StyleData["CellLabelExpired"], FontSize -> 10, FontSlant -> False, 
          FontColor -> Hue[0., 0.4, 0.6, 0.5]], 
         Cell[
          StyleData["CalculateInput"], FontColor -> Hue[0., 0., 0.9]], 
         Cell[
          StyleData["WolframAlphaShort"], CellMargins -> {{55, 0}, {10, 10}}, 
          CellLabelTemplate -> <|
           "In" -> "", "InExpired" -> "", "Out" -> "", "OutExpired" -> ""|>, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[FreeformPrompt]", FontColor -> Hue[0.45, 0.5, 1]]]], 
             None}, {None, None}}, FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> 
           StyleData["WolframAlphaShort"]], FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData["WolframAlphaLong"], CellMargins -> {{50.6, 0}, {10, 10}},
           CellLabelTemplate -> <|
           "In" -> "", "InExpired" -> "", "Out" -> "", "OutExpired" -> ""|>, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               StyleBox[
               "\[WolframAlphaPrompt]", FontColor -> Hue[0.45, 0.5, 1]]]], 
             None}, {None, None}}, FontColor -> GrayLevel[0.8]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], PageWidth -> WindowWidth, 
             CellFrame -> {{5, 0}, {3, 2}}, CellMargins -> {{55, 0}, {0, -1}},
              StyleKeyMapping -> {
              "`" -> "Code", "=" -> "WolframAlphaShort", ">" -> 
               "ExternalLanguageDefault", "-" -> "Delimiter"}, 
             TextClipboardType -> "PlainText", 
             CellLabelStyle -> {"CellLabel", "CellLabelExpired"}, 
             CellLabelPositioning -> Left, 
             CellLabelMargins -> {{4, 0}, {2, 0}}, 
             CellFrameMargins -> {{7, 10}, {10, 10}}, CellFrameColor -> 
             GrayLevel[0.4], AutoIndent -> True, 
             CellChangeTimes -> {{3.9208941421511784`*^9, 
              3.920894159635481*^9}, {3.920894388867655*^9, 
              3.9208944515770645`*^9}}, LineIndent -> 0, FontColor -> 
             GrayLevel[1], Background -> Hue[0.2, 0., 0.11]], 
            Cell[
             StyleData["Input", "SlideShow"], 
             CellMargins -> {{140, 0}, {0, -1}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], PageWidth -> WindowWidth, 
             CellFrame -> {{0, 5}, {2, 2}}, CellMargins -> {{55, 0}, {0, -2}},
              CellFrameMargins -> {{15, 10}, {10, 10}}, CellFrameColor -> 
             GrayLevel[0.4], CellSize -> {Automatic, Automatic}, 
             CellChangeTimes -> {3.9208939629004135`*^9}, Hyphenation -> True,
              FontColor -> GrayLevel[1], Background -> GrayLevel[0.], 
             PaneBoxOptions -> {Background -> GrayLevel[0.2]}, 
             PaneBoxOptions -> {FontColor -> GrayLevel[0.9]}], 
            Cell[
             StyleData["Output", "SlideShow"], 
             CellMargins -> {{140, 0}, {0, -2}}]}, Open]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Code"], PageWidth -> WindowWidth, 
             CellFrame -> {{5, 0}, {2, 2}}, CellMargins -> {{55, 0}, {0, -1}},
              StyleKeyMapping -> {
              "`" -> "Input", "Tab" -> "InitializationCell"}, 
             InitializationCell -> False, 
             CellFrameMargins -> {{7, 10}, {10, 10}}, CellFrameColor -> 
             GrayLevel[0.4], ShowSpecialCharacters -> True, Hyphenation -> 
             True, LinebreakAdjustments -> {1, 2, 10, 0, 1}, FontWeight -> 
             "DemiBold", FontColor -> GrayLevel[1], Background -> 
             GrayLevel[0.05]], 
            Cell[
             StyleData["Code", "SlideShow"], 
             CellMargins -> {{140, 0}, {0, -1}}]}, Open]], 
         Cell[
          StyleData[
          "InitializationCell", StyleDefinitions -> StyleData["Code"]], 
          StyleKeyMapping -> {"`" -> "Input", "Tab" -> "Code"}, 
          InitializationCell -> True, 
          CellLabelTemplate -> <|
           "In" -> "", "InExpired" -> "", "Out" -> "", "OutExpired" -> ""|>, 
          CellFrameMargins -> {{7, 10}, {10, 10}}, CellFrameColor -> 
          GrayLevel[1]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ExternalLanguage"], CellFrame -> {{5, 1}, {2, 2}}, 
             CellMargins -> {{19, 0}, {0, -1}}, 
             CellLabelTemplate -> <|
              "In" -> "", "InExpired" -> "", "Out" -> "", "OutExpired" -> 
               ""|>, CellFrameMargins -> {{7, 10}, {10, 10}}, CellFrameColor -> 
             Hue[0.15, 0.37, 0.4], MenuSortingValue -> 10000, FontColor -> 
             GrayLevel[1], Background -> Hue[0.15, 0.37, 0.07]], 
            Cell[
             StyleData["ExternalLanguage", "SlideShow"], 
             CellMargins -> {{104, 0}, {0, -1}}]}, Open]], 
         Cell[
          StyleData["MessageStack"], ShowAutoStyles -> True, ShowSyntaxStyles -> 
          True, AutoStyleOptions -> {"StringStyle" -> Dynamic[
              CurrentValue[
               EvaluationNotebook[], {AutoStyleOptions, "StringStyle"}]]}, 
          LanguageCategory -> "Input", ShowStringCharacters -> True, FontSize -> 
          11, FontWeight -> "Plain", FontColor -> GrayLevel[0], 
          RasterBoxOptions -> {ImageEditMode -> False}, 
          Raster3DBoxOptions -> {ImageEditMode -> False}, 
          AutoStyleOptions -> {FontColor -> GrayLevel[0]}], 
         Cell[
          StyleData["MessageMenu"], FontSize -> 11, FontColor -> 
          GrayLevel[0]], 
         Cell[
          StyleData["Delimiter"], Editable -> False, 
          CellFrame -> {{0, 0}, {0, 0.5}}, ShowCellBracket -> Automatic, 
          CellMargins -> {{55, 0}, {4, 15}}, 
          CellElementSpacings -> {"CellMinHeight" -> 1}, 
          CellFrameMargins -> {{0, 0}, {2, 10}}, CellFrameColor -> 
          Hue[0.74, 0.8, 1], CellChangeTimes -> {3.920930609342507*^9}, 
          StyleMenuListing -> None, FontFamily -> "Source Sans Pro", FontSize -> 
          1], 
         Cell[
          StyleData["InputField"], FontColor -> GrayLevel[0.6]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Print/Messages", "Section"], 
         Cell[
          StyleData["MessagesWindow"], DockedCells -> {
            Cell[
            "", CellMargins -> 0, 
             CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 
             0, CellFrameColor -> GrayLevel[0.1], CellSize -> {Automatic, 3}, 
             Background -> Hue[0., 0., 0.1]], 
            Cell[
             BoxData[
              TagBox[
               ButtonBox[
                FrameBox[
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MessageToolbarText", "ButtonDeleteAll"], 
                   ImageSizeCache -> {84., {2., 7.}}], "Label", "Output", 
                  FontFamily -> "Roboto", FontSize -> 9, FontColor -> 
                  RGBColor[0.8, 0.8, 0.8], Background -> None], Alignment -> 
                 Center, Background -> FEPrivate`If[
                   FrontEnd`CurrentValue["MouseOver"], 
                   RGBColor[0.1, 0.04, 0.04], 
                   RGBColor[0.2, 0.1, 0.1]], FrameMargins -> {{7, 7}, {3, 3}},
                  FrameStyle -> RGBColor[1., 0.3294, 0.3294], RoundingRadius -> 
                 2], Appearance -> None, ButtonFunction :> (FrontEndExecute[{
                   FrontEndToken[
                    FrontEnd`MessagesNotebook[], "SelectAll"], 
                   FrontEndToken[
                    FrontEnd`MessagesNotebook[], "Clear"]}]& ), 
                ButtonMinHeight -> 0, Evaluator -> None, Method -> 
                "Preemptive"], 
               MouseAppearanceTag["LinkHand"]]], "Small", 
             CellFrame -> {{0, 0}, {1, 0}}, CellMargins -> {{0, 0}, {0, 0}}, 
             CellFrameMargins -> 
             FEPrivate`Switch[
              FEPrivate`$OperatingSystem, "MacOSX", {{2, 0}, {1, 1}}, 
               Blank[], {{2, 0}, {1, 0}}], CellFrameColor -> 
             RGBColor[0, 0, 0], TextAlignment -> Left, Background -> 
             Hue[0., 0., 0.15]]}, MenuSortingValue -> 10000, Background -> 
          GrayLevel[0]], 
         Cell[
          StyleData["EchoLabel"], FontColor -> Hue[0.29, 0, 0.5]], 
         Cell[
          StyleData["EchoDingbat"], FontColor -> Hue[0.29, 0, 0.5]], 
         Cell[
          StyleData["EchoTiming", StyleDefinitions -> StyleData["Echo"]], 
          CellDingbat -> {}, CellMargins -> {{64.6, 0}, {0, -1}}, 
          CellFrameMargins -> {{20, 0}, {5, 5}}, CellFrameLabels -> {{
             Cell[
             "\[WatchIcon]", "EchoDingbat", FontColor -> Hue[0.1, 0.9, 0.7], 
              Background -> None], None}, {None, None}}, 
          CellFrameLabelMargins -> {{-20, 80}, {10, 10}}, 
          CellChangeTimes -> {3.9209979652035313`*^9}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Echo"], CellFrame -> {{5, 5}, {1, 0}}, CellDingbat -> 
             None, CellMargins -> {{66.7, 0}, {0, -4}}, GeneratedCell -> 
             False, CellFrameMargins -> {{20, 0}, {5, 5}}, CellFrameColor -> 
             GrayLevel[0.4], CellFrameLabels -> {{
                Cell[
                "\[RightGuillemet]", "EchoDingbat", Background -> None, 
                 FontColor -> Hue[0.1, 0.9, 0.7]], None}, {None, None}}, 
             CellFrameLabelMargins -> {{-20, 80}, {10, 10}}, FontColor -> 
             GrayLevel[0.5], Background -> 
             GrayLevel[0], $CellContext`GeneratedCellOptions -> {
              FontColor -> Hue[0.1, 0.9, 0.1]}], 
            Cell[
             StyleData["Echo", "SlideShow"], 
             CellMargins -> {{148.5, 0}, {0, -4}}]}, Open]], 
         Cell[
          StyleData["EchoBefore", StyleDefinitions -> StyleData["Echo"]], 
          CellDingbat -> None, CellMargins -> {{66.7, 0}, {0, -1}}, 
          CellFrameLabels -> {{
             Cell[
             "\[LeftGuillemet]", "EchoBeforeDingbat", Background -> None], 
             None}, {None, None}}, FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["EchoAfter", StyleDefinitions -> StyleData["Echo"]], 
          CellMargins -> {{66.7, 0}, {0, -4}}, CellFrameLabels -> {{
             Cell[
             "\[RightGuillemet]", "EchoAfterDingbat", Background -> None], 
             None}, {None, None}}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], CellFrame -> {{5, 5}, {1, 0}}, 
             CellMargins -> {{67, 0}, {0, -1}}, GeneratedCell -> False, 
             CellFrameMargins -> {{20, 0}, {5, 5}}, CellFrameColor -> 
             GrayLevel[0.4], CellFrameLabels -> {{
                Cell["\[RightPointer]", Background -> None], None}, {
               None, None}}, CellFrameLabelMargins -> {{-20, 80}, {10, 10}}, 
             FontColor -> RGBColor[0.1, 0.9, 0.1], Background -> 
             GrayLevel[0], $CellContext`GeneratedCellOptions -> {
              FontColor -> 
               RGBColor[0.1, 0.9, 0.1]}, $CellContext`RowBoxOptions -> {
              FontColor -> GrayLevel[1]}], 
            Cell[
             StyleData["Print", "SlideShow"], 
             CellMargins -> {{148.5, 0}, {0, -1}}]}, Open]], 
         Cell[
          StyleData["PrintTemporary"], CellFrame -> {{5, 5}, {1, 0}}, 
          CellMargins -> {{67, 0}, {0, -1}}, 
          CellFrameMargins -> {{20, 0}, {5, 5}}, CellFrameColor -> 
          GrayLevel[0.4], CellFrameLabels -> {{
             Cell["\[RightPointer]", Background -> None], None}, {
            None, None}}, CellFrameLabelMargins -> {{-20, 80}, {10, 10}}, 
          FontColor -> RGBColor[0.1, 0.9, 0.1, 0.6], Background -> 
          GrayLevel[0]], 
         Cell[
          StyleData["MessagesWindowCellLabel"], FontWeight -> Bold, FontColor -> 
          RGBColor[0.1, 0.9, 0.2]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], CellFrame -> {{5, 5}, {1, 0}}, 
             CellMargins -> {{55, 0}, {0, -2}}, ShowCellLabel -> False, 
             CellFrameMargins -> {{10, 10}, {5, 5}}, CellFrameColor -> 
             GrayLevel[0.4], Background -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "SlideShow"], 
             CellMargins -> {{140, 0}, {0, -2}}]}, Open]], 
         Cell[
          StyleData["MSG"], CellFrame -> {{5, 5}, {1, 0}}, 
          CellMargins -> {{55, 0}, {0, -1}}, ShowCellLabel -> False, 
          CellFrameMargins -> {{6, 10}, {5, 5}}, CellFrameColor -> 
          GrayLevel[0.4], FontColor -> RGBColor[0.1, 0.9, 0.1, 0.9], 
          Background -> GrayLevel[0]], 
         Cell[
          StyleData["MessageMenuLabel"], FontColor -> RGBColor[1, 0, 0]], 
         Cell[
          StyleData["MessageText"], FontColor -> RGBColor[0.7, 0.7, 0.7]], 
         Cell[
          StyleData["PanelLabel"], FontColor -> 
          RGBColor[0.1, 0.9, 0.1], $CellContext`CellTagColor -> 
          GrayLevel[1]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Links", "Section"], 
         Cell[
          StyleData["Link"], MenuSortingValue -> 10000, FontColor -> 
          RGBColor[0.4, 0.5, 0.9]], 
         Cell[
          StyleData["Hyperlink"], MenuSortingValue -> 10000, FontColor -> 
          RGBColor[0.4, 0.6, 0.8]], 
         Cell[
          StyleData["HyperlinkActive"], MenuSortingValue -> 10000, FontColor -> 
          RGBColor[0.9, 0.7, 0.3]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["NL input", "Section"], 
         Cell[
          StyleData["IndexedDefault"], MenuSortingValue -> 10000, FontColor -> 
          GrayLevel[0.2]], 
         Cell[
          StyleData["LinguisticAssistantTemplate"], 
          TemplateBoxOptions -> {
           DisplayFunction -> (NamespaceBox[
             "LinguisticAssistantTemplateBoxID", 
              DynamicBox[
               ToBoxes[
                AlphaIntegration`LinguisticAssistantBoxes[
                 Slot["query"], 
                 Slot["version"], 
                 Slot["contextinfo"], 
                 Dynamic[
                  Slot["query"]], 
                 Dynamic[
                  Slot["boxes"]], 
                 Dynamic[
                  Slot["allassumptions"]], 
                 Dynamic[
                  Slot["assumptions"]], 
                 Dynamic[
                  Slot["open"]], 
                 Dynamic[
                  Slot["querystate"]]], StandardForm], TrackedSymbols :> {
                 Slot["query"], 
                 Slot["boxes"], 
                 Slot["allassumptions"], 
                 Slot["assumptions"], 
                 Slot["open"], 
                 Slot["querystate"]}]]& ), 
            InterpretationFunction -> (Slot["boxes"]& )}, 
          TemplateBoxOptions -> {FontColor -> GrayLevel[0]}], 
         Cell[
          StyleData[
          "NaturalLanguageInput", StyleDefinitions -> StyleData["Input"]], 
          BackgroundAppearance -> 
          FrontEnd`FileName[{"WolframAlphaClient"}, "NLInputQuery.9.png"], 
          CellDingbat -> PaneBox[
            ButtonBox["\[FreeformPrompt]", ButtonFunction :> (SelectionMove[
                ParentCell[
                 EvaluationCell[]], All, Expression]; 
              FrontEndTokenExecute["EvaluateCells"]), Evaluator -> Automatic, 
             BaselinePosition -> Baseline, Appearance -> None, FrameMargins -> 
             0, ImageMargins -> 0, ContentPadding -> False, BaseStyle -> {}, 
             DefaultBaseStyle -> {}, Tooltip -> DynamicBox[
               ToBoxes[
                FrontEndResource["WAStrings", "DoQueryTooltip"]]]], 
            BaselinePosition -> (Center -> Center), 
            BaseStyle -> {
             FontSize -> 10, FontColor -> 
              RGBColor[0.949219, 0.4375, 0.128906], FontFamily -> Dynamic[
                AbsoluteCurrentValue[{StyleHints, "CodeFont"}]]}], 
          CellMargins -> {{66, 21}, {5, 10}}, CellDingbatMargin -> -17, 
          StyleKeyMapping -> {" " -> "Text", "*" -> "Item"}, 
          CellTrayWidgets -> <|
           "GearMenu" -> <|
             "Disabled" -> {
               "CopyAs", "ConvertTo", "Formatting", "InitializationCell"}|>|>,
           CellEvaluationFunction -> 
          AlphaIntegration`NaturalLanguageInputEvaluate, 
          CellEventActions -> {
           PassEventsDown -> False, "ReturnKeyDown" :> (Quiet[
               WolframAlpha[]]; 
             WolframAlphaClient`Private`moveAfterPreviousOutputs[
               EvaluationCell[], 
               EvaluationNotebook[]]; MathLink`CallFrontEnd[
               FrontEnd`CellEvaluate[
                EvaluationCell[]]]), {"MenuCommand", "HandleShiftReturn"} :> 
            NotebookWrite[
              InputNotebook[], "\n"], {"MenuCommand", "EvaluateCells"} :> 
            NotebookWrite[
              InputNotebook[], "\n"]}, ShowCellLabel -> False, 
          CellFrameMargins -> {{22, 8}, {3, 4}}, CellFrameColor -> 
          RGBColor[1, 0.5, 0], CellFrameLabelMargins -> 6, DefaultFormatType -> 
          TextForm, ShowAutoStyles -> False, ShowCodeAssist -> False, 
          ShowAutoSpellCheck -> False, AllowInlineCells -> False, FormatType -> 
          TextForm, ShowStringCharacters -> False, 
          MenuCommandKey :> $CellContext`MenuKey[
           "9", $CellContext`Modifiers -> {"Shift"}], FontFamily -> 
          "Helvetica", FontSize -> 14, FontWeight -> "Plain", 
          PrivateFontOptions -> {"OperatorSubstitution" -> True}], 
         Cell[
          StyleData[
          "NaturalLanguage2DInput", StyleDefinitions -> 
           StyleData["NaturalLanguageInput"]], 
          CellEvaluationFunction -> (
           AlphaIntegration`NaturalLanguageInputEvaluate[
           "NaturalLanguage2DInput" -> EvaluationCell[], #2]& ), 
          DefaultFormatType -> TraditionalForm, InputAutoReplacements -> {}, 
          AutoOperatorRenderings -> {}, AutoSpacing -> False, 
          AutoMultiplicationSymbol -> {}, SingleLetterItalics -> False, 
          ZeroWidthTimes -> True], 
         Cell[
          StyleData[
          "DeployedNLInput", StyleDefinitions -> 
           StyleData["NaturalLanguageInput"]], Selectable -> False, 
          BackgroundAppearance -> None, CellFrame -> None, CellDingbat -> 
          None, CellMargins -> {{66, 10}, {5, 10}}, StyleKeyMapping -> {}, 
          CellEventActions -> {
           PassEventsDown -> False, {"MenuCommand", "HandleShiftReturn"} :> 
            NotebookWrite[
              InputNotebook[], "\n"], {"MenuCommand", "EvaluateCells"} :> 
            NotebookWrite[
              InputNotebook[], "\n"]}, CellFrameMargins -> 0, CellFrameColor -> 
          GrayLevel[0.8], InputAutoReplacements -> {}, 
          AutoOperatorRenderings -> {}, 
          AutoMultiplicationSymbol -> {}, $CellContext`CellFrameCSS -> {
           "border-radius" -> "5px"}], 
         Cell[
          StyleData["DeployedWLInput"], BackgroundAppearance -> 
          FrontEnd`FileName[{"WolframAlphaClient"}, "WLInput.9.png"], 
          CellMargins -> {{66, 15}, {12, -5}}, CellEditDuplicate -> True, 
          CellGroupingRules -> "OutputGrouping", 
          CellTrayWidgets -> <|"SCUWidget" -> <|"Condition" -> Dynamic[
                And[
                 TrueQ[
                  AbsoluteCurrentValue[
                   EvaluationCell[], {CodeAssistOptions, "SCUPopupEnable"}]], 
                 
                 FEPrivate`MatchQ[
                  AbsoluteCurrentValue[
                   EvaluationCell[], {
                   PrivateCellOptions, "CellSettings", "UsageTags"}], {
                   BlankSequence[]}]]]|>|>, GeneratedCell -> True, 
          CellAutoOverwrite -> True, CellLabelPositioning -> Left, 
          CellFrameMargins -> {{10, 0}, {3, 1}}, 
          CellFrameLabelMargins -> {{-4, Inherited}, {Inherited, Inherited}}, 
          DefaultDuplicateCellStyle -> "Input", NumberMarks -> False, 
          FontSize -> 11, FontOpacity -> 
          0.7, $CellContext`CellFrameCSS -> {
           "background" -> "linear-gradient(rgb(25,25,25), rgb(24,24,24))", 
            "border-radius" -> "0px 0px 5px 5px"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Graphics/Display", "Section"], 
         Cell[
          StyleData["Graphics"], LineColor -> GrayLevel[0.5], EdgeColor -> 
          GrayLevel[0.5], FrontFaceColor -> GrayLevel[0.5], BackFaceColor -> 
          GrayLevel[0.5], GraphicsColor -> GrayLevel[0.5], FontColor -> 
          GrayLevel[0.8]], 
         Cell[
          StyleData["GraphicsLabel"], FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["GraphicsFrame"], FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["GraphicsTicks"], ScriptLevel -> 1, LineColor -> 
          GrayLevel[0.4], FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["GraphicsFrameTicks"], ScriptLevel -> 1, LineColor -> 
          GrayLevel[0.4], FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["OSLText"], ShowAutoStyles -> False, ShowStringCharacters -> 
          False, NumberMarks -> False, CacheGraphics -> False, FontFamily :> 
          CurrentValue["PanelFontFamily"], FontSize :> 
          CurrentValue["PanelFontSize"], FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.2]], 
         Cell[
          StyleData["OSLControl"], FontColor -> 
          RGBColor[
           0.5792858777752345, 0.7019531548027772, 0.8252155336842909]], 
         Cell[
          StyleData["OSLControlActive"], FontColor -> 
          RGBColor[
           0.9987258716716259, 0.47419699397268633`, 0.16755168993667505`]], 
         Cell[
          StyleData["OSLBottomFrame"], FontColor -> GrayLevel[0.7], 
          FrameBoxOptions -> {
           Background -> GrayLevel[0.12], FrameStyle -> GrayLevel[0.6]}, 
          GridBoxOptions -> {FrameStyle -> GrayLevel[0.6]}], 
         Cell[
          StyleData["OSLTopFrame"], 
          FrameBoxOptions -> {
           Background -> GrayLevel[0.05], FrameStyle -> Directive[
              GrayLevel[0.65], 
              Dashing[{2, 2}]]}], 
         Cell[
          StyleData["OutputSizeLimit`Skeleton"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.2], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False, FontOpacity -> 1}, 
              BaselinePosition -> Baseline, ContentPadding -> False, 
              FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
              RoundingRadius -> 7]& )}], 
         Cell[
          StyleData["GraphicsFrame"], MenuSortingValue -> 10000, FontColor -> 
          GrayLevel[0.9]], 
         Cell[
          StyleData["Row"]], 
         Cell[
          StyleData["RowDefault"]], 
         Cell[
          StyleData["Panel"], FontColor -> GrayLevel[0.9], Background -> 
          GrayLevel[0, 0.5], PanelBoxOptions -> {Background -> GrayLevel[0]}], 
         Cell[
          StyleData["NotebookTemplateExpressionUI"]], 
         Cell[
          StyleData["Manipulate"], 
          DynamicBoxOptions -> {Background -> GrayLevel[0.]}, 
          PanelBoxOptions -> {Background -> GrayLevel[0.]}, 
          DynamicBoxOptions -> {FontColor -> GrayLevel[0.9]}, 
          PanelBoxOptions -> {FontColor -> GrayLevel[0.9]}, 
          "ContentAreaBackground" -> GrayLevel[0.]], 
         Cell[
          StyleData["DisplayFormulaNumbered"]], 
         Cell[
          StyleData["DisplayFormula"]], 
         Cell[
          StyleData["QuantityPanel"], MenuSortingValue -> 10000, FontColor -> 
          RGBColor[{0.8, 0.6196, 0.5294}]], 
         Cell[
          StyleData["InlineFormula"]], 
         Cell[
          StyleData["MenuView"], FontColor -> GrayLevel[0]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notation styles", "Section"], 
         Cell[
          StyleData["NotationTemplateTag"], 
          CellChangeTimes -> {{3.9207062937075577`*^9, 
           3.9207063114990063`*^9}, {3.920706347676857*^9, 
           3.920706347904022*^9}}, StyleMenuListing -> None, Background -> 
          RGBColor[0.3, 0.3, 0.15], TagBoxOptions -> {SyntaxForm -> "symbol"},
           TemplateBoxOptions -> {
           DisplayFunction -> (
             FrameBox[#, Background -> RGBColor[0.3, 0.3, 0.15], 
              FrameMargins -> {{5, 5}, {3, 3}}, FrameStyle -> GrayLevel[0.6], 
              BaselinePosition -> Baseline]& ), SyntaxForm -> "symbol"}], 
         Cell[
          StyleData["NotationPatternTag"], StyleMenuListing -> None, 
          Background -> RGBColor[0.3, 0.2, 0.28], 
          TagBoxOptions -> {SyntaxForm -> "symbol"}, 
          TemplateBoxOptions -> {
           DisplayFunction -> (
             FrameBox[#, Background -> RGBColor[0.3, 0.2, 0.28], 
              FrameMargins -> {{5, 5}, {3, 3}}, FrameStyle -> GrayLevel[0.6], 
              BaselinePosition -> Baseline]& ), SyntaxForm -> "symbol"}], 
         Cell[
          StyleData["NotationMadeBoxesTag"], StyleMenuListing -> None, 
          Background -> RGBColor[0.2, 0.19, 0.3], 
          TagBoxOptions -> {SyntaxForm -> "symbol"}, 
          TemplateBoxOptions -> {
           DisplayFunction -> (
             FrameBox[#, Background -> RGBColor[0.2, 0.19, 0.3], 
              FrameMargins -> {{5, 5}, {3, 3}}, FrameStyle -> GrayLevel[0.6], 
              BaselinePosition -> Baseline]& ), SyntaxForm -> "symbol"}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          TextData[{
            Cell[
             BoxData[
              FormBox[
               StyleBox[
                RowBox[{"T", 
                  AdjustmentBox[
                  "E", BoxBaselineShift -> 0.5, 
                   BoxMargins -> {{-0.3, 0}, {0, 0}}], "X"}], 
                SingleLetterItalics -> False], TraditionalForm]]], " Input"}],
           "Section", 
          CellChangeTimes -> {{3.9209824308246956`*^9, 3.9209824339254*^9}}], 
         
         Cell[
          StyleData["TeXAssistantTemplate"], Deployed -> True, 
          TemplateBoxOptions -> {DisplayFunction -> (DynamicBox[
              InputAssistant`InputAssistantBoxes[1, "TeXAssistant", 
               Dynamic[
                Slot["input"]], 
               Dynamic[
                Slot["boxes"]], 
               Dynamic[
                Slot["errors"]], 
               Dynamic[
                Slot["state"]]], TrackedSymbols :> {
                Slot["input"], 
                Slot["boxes"], 
                Slot["errors"], 
                Slot["state"], InputAssistant`InputAssistantBoxes}]& ), 
            InterpretationFunction -> (Slot["boxes"]& )}], 
         Cell[
          StyleData["TeXAssistantInput"], FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["TeXAssistantBoxes"], ScriptLevel -> 0], 
         Cell[
          StyleData["TeXAssistantBoxesActive"], ScriptLevel -> 0, FontColor -> 
          RGBColor[1, 0.5, 0]], 
         Cell[
          StyleData["TeXAssistantError"], FontWeight -> "Plain", FontSlant -> 
          "Plain"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Information", "Section"], 
         Cell[
          StyleData["DialogStyle"], FontColor -> GrayLevel[1]], 
         Cell[
          StyleData["InformationTitleText"], MenuSortingValue -> 10000, 
          FontColor -> GrayLevel[0.8]], 
         Cell[
          StyleData["InformationTitleBackground"], MenuSortingValue -> 10000, 
          ItemBoxOptions -> {Background -> GrayLevel[0.12]}], 
         Cell[
          StyleData["InformationGenericSubtitleBackground"], MenuSortingValue -> 
          10000, ItemBoxOptions -> {Background -> GrayLevel[0.12]}], 
         Cell[
          StyleData["InformationUsageSubtitleBackground"], MenuSortingValue -> 
          10000, ItemBoxOptions -> {Background -> GrayLevel[0.12]}], 
         Cell[
          StyleData["InformationEntitySubtitleBackground"], MenuSortingValue -> 
          10000, ItemBoxOptions -> {Background -> GrayLevel[0.12]}], 
         Cell[
          StyleData["InformationTitleFrame"], MenuSortingValue -> 10000, 
          FontColor -> GrayLevel[1], 
          FrameBoxOptions -> {Background -> GrayLevel[0.12]}, 
          FrameBoxOptions -> {FontColor -> GrayLevel[1]}], 
         Cell[
          StyleData["InformationGridFrame"], MenuSortingValue -> 10000, 
          FontColor -> GrayLevel[1], 
          FrameBoxOptions -> {Background -> GrayLevel[0.12]}, 
          FrameBoxOptions -> {FontColor -> GrayLevel[1]}], 
         Cell[
          StyleData["InformationGridPlain"], Editable -> True, Deletable -> 
          True, MenuSortingValue -> 10000, FontColor -> GrayLevel[1], 
          FrameBoxOptions -> {Background -> GrayLevel[0.12]}, 
          FrameBoxOptions -> {FontColor -> GrayLevel[1]}], 
         Cell[
          StyleData["InformationUsageText"], MenuSortingValue -> 10000, 
          FontColor -> GrayLevel[1], 
          FrameBoxOptions -> {Background -> GrayLevel[0.12]}, 
          FrameBoxOptions -> {FontColor -> GrayLevel[1]}], 
         Cell[
          StyleData["InformationGridButton"], MenuSortingValue -> 10000, 
          FontColor -> RGBColor[0.3196, 0.586274509, 0.95098]], 
         Cell[
          StyleData["InformationGridLink"], MenuSortingValue -> 10000, 
          ButtonBoxOptions -> {
           FontColor -> RGBColor[0.3196, 0.586274509, 0.95098]}], 
         Cell[
          StyleData["InformationRowOpener"], MenuSortingValue -> 10000, 
          FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["InformationRowLabel"], MenuSortingValue -> 10000, 
          FontColor -> GrayLevel[0.7], 
          TagBoxOptions -> {FontColor -> GrayLevel[0.7]}], 
         Cell[
          StyleData["HyperlinkTemplate"], MenuSortingValue -> 10000, 
          FontColor -> RGBColor[0.3196, 0.586274509, 0.95098]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Objects", "Section"], 
         Cell[
          StyleData["ClickToCopy"], 
          TemplateBoxOptions -> {
           DisplayFunction -> (TemplateBox[{#, #}, "ClickToCopy2"]& ), 
            InterpretationFunction -> (
             RowBox[{"ClickToCopy", "[", #, "]"}]& ), Tooltip -> None}], 
         Cell[
          StyleData["ClickToCopy2"], 
          TemplateBoxOptions -> {DisplayFunction -> (TagBox[
              DynamicModuleBox[{Typeset`boxobj$$, Typeset`cellobj$$}, 
               TagBox[
                TagBox[
                 ButtonBox[
                  
                  TagBox[#, BoxForm`Undeploy, 
                   DefaultBaseStyle -> {Deployed -> False}], ButtonFunction :> 
                  FrontEndExecute[{
                    CopyToClipboard[
                    Cell[
                    BoxData[#2], "Input"]], 
                    NotebookDelete[Typeset`cellobj$$], 
                    FrontEnd`AttachCell[Typeset`boxobj$$, 
                    Cell[
                    BoxData[
                    TemplateBox[{"Copied"}, "ClickToCopyTooltip"]]], {
                    1, {Center, Bottom}}, {Center, Top}, 
                    "ClosingActions" -> {"ParentChanged", "MouseExit"}]}], 
                  Evaluator -> None, 
                  Appearance -> {
                   "Default" -> None, "Hover" -> 
                    FrontEnd`FileName[{"Typeset", "ClickToCopy"}, 
                    "Hover.9.png"], "Pressed" -> 
                    FrontEnd`FileName[{"Typeset", "ClickToCopy"}, 
                    "Pressed.9.png"]}, BaseStyle -> {}, 
                  DefaultBaseStyle -> {}, BaselinePosition -> Baseline, 
                  FrameMargins -> 2, Method -> "Preemptive"], 
                 
                 EventHandlerTag[{
                  "MouseEntered" :> (Typeset`cellobj$$ = MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`boxobj$$, 
                    Cell[
                    BoxData[
                    TemplateBox[{"Copy"}, "ClickToCopyTooltip"]]], {
                    1, {Center, Bottom}}, {Center, Top}, 
                    "ClosingActions" -> {"ParentChanged"}]]), "MouseExited" :> 
                   NotebookDelete[Typeset`cellobj$$], PassEventsDown -> True, 
                   Method -> "Preemptive", PassEventsUp -> True}]], 
                MouseAppearanceTag["LinkHand"]], 
               Initialization :> (Typeset`boxobj$$ = EvaluationBox[]), 
               DynamicModuleValues :> {}, 
               UnsavedVariables :> {Typeset`boxobj$$, Typeset`cellobj$$}, 
               BaseStyle -> {Editable -> False}], Deploy, DefaultBaseStyle -> 
              "Deploy"]& ), 
            InterpretationFunction -> (RowBox[{"ClickToCopy", "[", 
               RowBox[{#, ",", #2}], "]"}]& ), Tooltip -> None}], 
         Cell[
          StyleData["IconizedObject"], 
          TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`Switch[
                    Hold[
                    FEPrivate`TemplateArgValue[#2]], 
                    Hold["ListIcon"], 
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeListIcon"], 
                    Hold["AssociationIcon"], 
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeAssociationIcon"], 
                    Hold["StringIcon"], 
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeStringIcon"], 
                    Hold["SequenceIcon"], 
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeSequenceIcon"], 
                    Blank[], 
                    InterpretationBox[
                    FEPrivate`TemplateArgValue[#2], None]], BaseStyle -> 
                    "IconizedDefaultName"], Alignment -> Left, 
                    FrameMargins -> {{3, 3}, {0, 0}}, BaselinePosition -> 
                    Baseline], 
                    ItemBox[
                    PaneBox[
                    SetterBox[#4, {True}, 
                    DynamicBox[
                    FEPrivate`FrontEndResource["FEBitmaps", "IconizeOpener"], 
                    ImageSizeCache -> {
                    35.91900157928467, {6., 9.256000518798828}}], 
                    BaselinePosition -> Baseline, Appearance -> None, 
                    ContentPadding -> False, FrameMargins -> 0], Alignment -> 
                    Left, FrameMargins -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Baseline], Frame -> {{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`Switch[
                    Hold[
                    FEPrivate`TemplateArgValue[#2]], 
                    Hold["ListIcon"], 
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeListIcon"], 
                    Hold["AssociationIcon"], 
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeAssociationIcon"], 
                    Hold["StringIcon"], 
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeStringIcon"], 
                    Hold["SequenceIcon"], 
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeSequenceIcon"], 
                    Blank[], 
                    InterpretationBox[
                    FEPrivate`TemplateArgValue[#2], None]], BaseStyle -> 
                    "IconizedDefaultName"], Alignment -> Left, 
                    FrameMargins -> {{3, 3}, {0, 0}}, BaselinePosition -> 
                    Baseline], 
                    ItemBox[
                    PaneBox[
                    SetterBox[#4, {False}, 
                    DynamicBox[
                    FEPrivate`FrontEndResource["FEBitmaps", "IconizeCloser"], 
                    ImageSizeCache -> {
                    35.91900157928467, {6., 9.256000518798828}}], 
                    BaselinePosition -> Baseline, Appearance -> None, 
                    ContentPadding -> False, FrameMargins -> 0], Alignment -> 
                    Left, FrameMargins -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Baseline], Frame -> {{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{0}}}]}, {
                    
                    PaneBox[#3, Alignment -> Left, 
                    FrameMargins -> {{5, 4}, {0, 4}}, BaselinePosition -> 
                    Baseline]}, {
                    PaneBox[
                    ButtonBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    DynamicBox[
                    FEPrivate`FrontEndResource["FEBitmaps", "UniconizeIcon"]], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "uniconizeLabel"]]], FontColor -> 
                    GrayLevel[0.2]]}}, AutoDelete -> False, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0}}}], True -> GridBox[{{
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "UniconizeIconHot"]], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "uniconizeLabel"]]], FontColor -> 
                    RGBColor[0.11, 0.48, 0.75]]}}, AutoDelete -> False, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0}}}]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, ImageSize -> 
                    Automatic], BaseStyle -> {}, DefaultBaseStyle -> {}, 
                    Appearance -> None, Evaluator -> "System", ButtonFunction :> 
                    FE`uniconizeButtonFunction[
                    ButtonNotebook[], 
                    EvaluationBox[]], Tooltip -> DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "FEStrings", "uniconizeTooltip"]]]], BaselinePosition -> 
                    Baseline, FrameMargins -> {{5, 0}, {0, 1}}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}, 
                   GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {False, 
                    GrayLevel[0.8], 
                    GrayLevel[0.8], False}}]}, #4, BaselinePosition -> 
                Baseline, ImageSize -> Automatic]}, "IconizedFrame"]& ), 
            Tooltip -> None}], 
         Cell[
          StyleData["IconizedNameLight"], FontSize -> 1 + Inherited, 
          FontColor -> GrayLevel[0.6], TagBoxOptions -> {Selectable -> True}], 
         Cell[
          StyleData["IconizedItem"], FontColor -> GrayLevel[0.6], 
          TagBoxOptions -> {Selectable -> True}], 
         Cell[
          StyleData["IconizedLabel"], FontColor -> GrayLevel[0.9]], 
         Cell[
          StyleData["IconizedDefaultName"], FontSize -> 12, 
          PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
          GrayLevel[0.6]], 
         Cell[
          StyleData["IconizedFrame"], 
          TemplateBoxOptions -> {
           DisplayFunction -> (
             FrameBox[#, BaselinePosition -> Baseline, 
              FrameMargins -> {{0, 0}, {2, 1}}, FrameStyle -> 
              RGBColor[0.4, 0.5, 0.4], Background -> RGBColor[0, 0, 0], 
              RoundingRadius -> 4, 
              DefaultBaseStyle -> {
               "DialogStyle", FontFamily -> "Roboto", FontSize -> 11}]& ), 
            Tooltip -> None}], 
         Cell[
          StyleData["IconizedCustomName"], FontColor -> GrayLevel[0.7]], 
         Cell[
          StyleData["DateObject"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              
              StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontSize -> 
               13, FontWeight -> "Plain", FontColor -> Hue[0.53, 0.7, 0.7], 
               ShowStringCharacters -> False], Background -> 
              Hue[0.53, 0.2, 0.2], FrameMargins -> {{5, 5}, {2, 2}}, 
              FrameStyle -> Hue[0.53, 0.7, 0.4], RoundingRadius -> 2, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {FontFamily -> "Courier"}]& ), 
            InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["TimeObject"], ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "TimeObject"], 
          TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
              
              StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontSize -> 
               13, FontWeight -> "Plain", FontColor -> Hue[0.53, 0.7, 0.7], 
               ShowStringCharacters -> False], Background -> 
              Hue[0.53, 0.2, 0.2], FrameMargins -> {{5, 5}, {2, 2}}, 
              FrameStyle -> Hue[0.53, 0.7, 0.4], RoundingRadius -> 2, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {FontFamily -> "Courier"}]& ), 
            InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["Entity"], 
          CellChangeTimes -> {{3.9209140701023064`*^9, 3.920914070504141*^9}},
           TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    StyleBox[#, FontColor -> Hue[0.08, 0.4, 0.99]], 
                    PaneBox[
                    StyleBox[#4, "EntityTypeLabel"], BaselinePosition -> 
                    Baseline, ContentPadding -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 1}], False -> 
                 PaneBox[#, BaseStyle -> {FontColor -> Hue[0.08, 0.4, 0.99]}, 
                   BaselinePosition -> Baseline]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {FontFamily -> "Helvetica"}], FrameStyle -> 
               Hue[0.08, 0.7, 0.7], Background -> Hue[0.1, 0.2, 0.2], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4, 
               BaseStyle -> {FontFamily -> "Courier"}], #3, 
              BaseStyle -> {
               ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}, 
              TooltipDelay -> 0.4]& ), Editable -> False, 
            InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFrame"], 
          TemplateBoxOptions -> {
           DisplayFunction -> (
             FrameBox[#, FrameStyle -> Hue[0.08, 0.7, 0.4], Background -> 
              Hue[0.08, 0.2, 0.2], FrameMargins -> 0, BaselinePosition -> 
              Baseline, RoundingRadius -> 4, 
              BaseStyle -> {FontFamily -> "Courier"}]& )}], 
         Cell[
          StyleData["EntityFrameless"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    StyleBox[#, FontColor -> Hue[0.08, 0.4, 0.99]], 
                    PaneBox[
                    StyleBox[#4, "EntityTypeLabel"], BaselinePosition -> 
                    Baseline, ContentPadding -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 1}], False -> 
                PaneBox[#, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontColor -> 
                    RGBColor[0.395437, 0.20595, 0.061158]}, BaselinePosition -> 
                  Baseline]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {FontFamily -> "Source Sans Pro"}], #3, 
              BaseStyle -> {
               FontSize -> 0.92 Inherited, FontFamily -> "Source Sans Pro", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}, 
              TooltipDelay -> 0.4]& ), Editable -> False, 
            InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityFramelessHot"], ShowStringCharacters -> False, 
          TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   StyleBox[#, FontColor -> GrayLevel[1]], 
                   PaneBox[
                    StyleBox[#4, "EntityTypeLabel"], BaselinePosition -> 
                    Baseline, ContentPadding -> False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 1}], False -> 
               PaneBox[#, 
                 BaseStyle -> {
                  FontFamily -> "Source Sans Pro", FontColor -> GrayLevel[1]},
                  BaselinePosition -> Baseline]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontSize -> 0.92 Inherited, FontFamily -> "Source Sans Pro", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClass"], ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Entity"], 
          AutoStyleOptions -> {"HighlightSyntaxErrors" -> False}, 
          ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> Hue[0.08, 0.4, 0.99], FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold"], 
                    PaneBox[
                    StyleBox[#4, "EntityTypeLabel"], BaselinePosition -> 
                    Baseline, ContentPadding -> False]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Baseline], 
                    
                    StyleBox[#, FontColor -> Hue[0.08, 0.4, 0.99], FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold"]}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}},
                    BaselinePosition -> {1, 2}]}, 
                Dynamic[
                 CurrentValue[Evaluatable]], ImageSize -> Automatic, 
                BaselinePosition -> Baseline, 
                BaseStyle -> {
                 FontFamily -> "Source Sans Pro", FontSize -> 0.985 Inherited,
                   FontWeight -> "SemiBold"}], FrameStyle -> 
               Hue[0.08, 0.7, 0.7], Background -> Hue[0.08, 0.2, 0.2], 
               FrameMargins -> {{5, 5}, {0.5, 0.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4, 
               BaseStyle -> {FontFamily -> "Courier"}], #3, 
              BaseStyle -> {
               FontSize -> 0.92 Inherited, FontFamily -> "Source Sans Pro", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}, 
              TooltipDelay -> 0.4]& ), Editable -> False, 
            InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFrameless"], 
          CellChangeTimes -> {{3.9209138497993546`*^9, 
            3.920913850184622*^9}, {3.9209141918891144`*^9, 
            3.9209141924047966`*^9}, {3.9209142267022896`*^9, 
            3.9209142383844757`*^9}, 3.9209143438964634`*^9, {
            3.9209144005778904`*^9, 3.9209144195410137`*^9}}, 
          ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              PaneSelectorBox[{True -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                    
                    StyleBox[#, FontColor -> Hue[0.08, 0.5, 0.9], FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold"], 
                    PaneBox[
                    StyleBox[#4, "EntityTypeLabel"], BaselinePosition -> 
                    Baseline, ContentPadding -> False]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}], False -> GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Baseline], 
                    
                    StyleBox[#, FontColor -> Hue[0.08, 0.5, 0.9], FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold"]}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}, 
                  BaselinePosition -> {1, 2}]}, 
               Dynamic[
                CurrentValue[Evaluatable]], ImageSize -> Automatic, 
               BaselinePosition -> Baseline, 
               BaseStyle -> {
                FontFamily -> "Source Sans Pro", FontSize -> 0.985 Inherited, 
                 FontWeight -> "SemiBold"}], #3, 
              BaseStyle -> {
               FontSize -> 0.92 Inherited, FontFamily -> "Source Sans Pro", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}, 
              TooltipDelay -> 0.4]& ), Editable -> False, 
            InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFramelessHot"], ShowStringCharacters -> False,
           TemplateBoxOptions -> {
           DisplayFunction -> (PaneSelectorBox[{True -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], 
                   
                   StyleBox[#, FontColor -> GrayLevel[1], FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold"], 
                   PaneBox[
                    StyleBox[#4, "EntityTypeLabel"], BaselinePosition -> 
                    Baseline, ContentPadding -> False]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], False -> GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Baseline], 
                   
                   StyleBox[#, FontColor -> GrayLevel[1], FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold"]}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}]}, 
              Dynamic[
               CurrentValue[Evaluatable]], ImageSize -> Automatic, 
              BaselinePosition -> Baseline, 
              BaseStyle -> {
               FontSize -> 0.92 Inherited, FontFamily -> "Source Sans Pro", 
                FontWeight -> "SemiBold", ShowStringCharacters -> False, 
                LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}]& ), 
            Editable -> False, InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityClassFrame"], 
          TemplateBoxOptions -> {
           DisplayFunction -> (
             FrameBox[#, FrameStyle -> Hue[0.08, 0.7, 0.4], Background -> 
              Hue[0.08, 0.2, 0.2], FrameMargins -> 0, BaselinePosition -> 
              Baseline, RoundingRadius -> 4, 
              BaseStyle -> {FontFamily -> "Courier"}]& )}], 
         Cell[
          StyleData["EntityProperty"], 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               
               PaneBox[#, 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Helvetica", FontColor -> Hue[0.14, 0.4, 0.99]}, 
                BaselinePosition -> Baseline], FrameStyle -> 
               Hue[0.14, 0.7, 0.4], Background -> Hue[0.14, 0.2, 0.2], 
               FrameMargins -> {{5, 5}, {1.5, 1.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4, 
               BaseStyle -> {FontFamily -> "Courier"}], #3, 
              BaseStyle -> {
               ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}, 
              TooltipDelay -> 0.4]& ), Editable -> False, 
            InterpretationFunction -> (#2& )}], 
         Cell[
          StyleData["EntityPropertyClass"], ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Entity"], 
          AutoStyleOptions -> {"HighlightSyntaxErrors" -> False}, 
          ShowStringCharacters -> False, 
          TemplateBoxOptions -> {DisplayFunction -> (TooltipBox[
              FrameBox[
               PaneBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`ToFileName[{"Typeset", "Entity"}, 
                    "EntityClass.png"]], ImageSizeCache -> {8., {2., 6.}}], 
                    BaselinePosition -> Bottom], #}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0}}}, 
                 BaselinePosition -> {1, 2}], 
                BaseStyle -> {
                 FontSlant -> Italic, FontWeight -> Plain, FontFamily -> 
                  "Source Sans Pro", FontColor -> Hue[0.14, 0.4, 0.99]}, 
                BaselinePosition -> Baseline], FrameStyle -> 
               Hue[0.14, 0.7, 0.4], Background -> Hue[0.14, 0.2, 0.2], 
               FrameMargins -> {{5, 5}, {0.5, 0.5}}, 
               ImageMargins -> {{2, 2}, {2, 2}}, BaselinePosition -> Baseline,
                RoundingRadius -> 4, 
               BaseStyle -> {FontFamily -> "Courier"}], #3, 
              BaseStyle -> {
               FontSize -> 0.92 Inherited, FontFamily -> "Source Sans Pro", 
                ShowStringCharacters -> False, LineIndent -> 0, 
                PrivateFontOptions -> {"OperatorSubstitution" -> False}}, 
              TooltipDelay -> 0.4]& ), Editable -> False, 
            InterpretationFunction -> (#2& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Toolbar", "Section", 
          CellChangeTimes -> {{3.9209793469191856`*^9, 
           3.920979348342947*^9}}], 
         Cell[
          StyleData["NotebookToolbarText"], FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontWeight -> Plain, FontColor -> GrayLevel[0.6]], 
         Cell[
          StyleData[
          "NotebookToolbarGhostText", StyleDefinitions -> 
           StyleData["NotebookToolbarText"]], FontSize -> 14, FontSlant -> 
          Italic, FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData[
          "NotebookToolbarTooltip", StyleDefinitions -> 
           StyleData["NotebookToolbarText"]], 
          CellFrameMargins -> {{4, 4}, {0, 0}}], 
         Cell[
          StyleData["NotebookToolbarButton"], 
          ButtonBoxOptions -> {
           BaselinePosition -> Baseline, ContentPadding -> False, ImageSize -> 
            Automatic}], 
         Cell[
          StyleData["NotebookToolbarButtonFrame"], 
          FrameBoxOptions -> {
           Alignment -> Center, Background -> None, 
            BaselinePosition -> (Bottom -> Bottom), ContentPadding -> False, 
            FrameMargins -> 0, FrameStyle -> None, 
            ImageMargins -> {{0, 1}, {1, 0}}, ImageSize -> {25, 25}, 
            RoundingRadius -> 2}], 
         Cell[
          StyleData[
          "NotebookToolbarButtonFrameDefault", StyleDefinitions -> 
           StyleData["NotebookToolbarButtonFrame"]], 
          FrameBoxOptions -> {Background -> None, FrameStyle -> None}, 
          FrameBoxOptions -> {FontColor -> GrayLevel[0.6]}], 
         Cell[
          StyleData[
          "NotebookToolbarButtonFrameHover", StyleDefinitions -> 
           StyleData["NotebookToolbarButtonFrame"]], 
          FrameBoxOptions -> {
           Background -> GrayLevel[0], FrameStyle -> GrayLevel[0.4]}], 
         Cell[
          StyleData[
          "NotebookToolbarButtonFramePressed", StyleDefinitions -> 
           StyleData["NotebookToolbarButtonFrame"]], 
          FrameBoxOptions -> {
           Background -> GrayLevel[0.], FrameStyle -> GrayLevel[0.6]}], 
         Cell[
          StyleData["NotebookToolbarButtonOverlay"], 
          OverlayBoxOptions -> {
           Alignment -> {Center, Center}, BaselinePosition -> Baseline, 
            ContentPadding -> False, FrameMargins -> 0}], 
         Cell[
          StyleData[
          "NotebookToolbarMenuHeader", StyleDefinitions -> 
           StyleData["NotebookToolbarText"]], FontSize -> 11, 
          FrameBoxOptions -> {
           Alignment -> {Left, Center}, Background -> GrayLevel[0.937], 
            FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> None, ImageSize -> {
              Scaled[1], 18}, RoundingRadius -> {0, Top -> 1}}], 
         Cell[
          StyleData[
          "NotebookToolbarMenuItem", StyleDefinitions -> 
           StyleData["NotebookToolbarText"]], 
          FrameBoxOptions -> {
           Alignment -> {Left, Center}, FrameMargins -> {{4, 4}, {0, 0}}, 
            ImageSize -> {{
               Scaled[1], 
               Scaled[1]}, {25, Automatic}}}], 
         Cell[
          StyleData["NotebookToolbarDelimiter"], CapForm -> "Round", 
          LineColor -> GrayLevel[0.898], Thickness -> Absolute[1], 
          GraphicsBoxOptions -> {
           AspectRatio -> Full, BaselinePosition -> (Bottom -> Bottom), 
            ImagePadding -> None}], 
         Cell[
          StyleData[
          "NotebookToolbarMenuDelimiter", StyleDefinitions -> 
           StyleData["NotebookToolbarDelimiter"]], 
          GraphicsBoxOptions -> {
           BaselinePosition -> (Center -> Center), 
            ImagePadding -> {{3, 3}, {0, 0}}, ImageSize -> {Full, 3}}], 
         Cell[
          StyleData["NotebookToolbarSpacer"], 
          PaneBoxOptions -> {BaselinePosition -> (Center -> Center)}, 
          GraphicsBoxOptions -> {
           Background -> None, BaselinePosition -> (Center -> Center)}], 
         Cell[
          StyleData["NotebookToolbarOverflow"], 
          FrameBoxOptions -> {
           Background -> GrayLevel[0.1], FrameMargins -> 0, FrameStyle -> 
            Directive[
              AbsoluteThickness[1], 
              GrayLevel[0.4]], ImageMargins -> {{0, 1}, {1, 0}}, 
            RoundingRadius -> 3}, 
          PaneBoxOptions -> {
           Alignment -> {Left, Top}, AppearanceElements -> None, 
            BaseStyle -> {
             LinebreakAdjustments -> {10, 1, 1, 10, 10}, LineIndent -> 0, 
              LineSpacing -> {1.2, 0}}, ImageSizeAction -> "Scrollable", 
            Scrollbars -> {False, Automatic}}, 
          PaneSelectorBoxOptions -> {
           FrameMargins -> 0, ImageSize -> Automatic}]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Summary", "Section"], 
         Cell[
          StyleData["SummaryItemAnnotation"], FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["SummaryPanel"], FontFamily :> 
          CurrentValue["PanelFontFamily"], FontSize :> 0.8 Inherited, 
          FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[0.9], TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
              
              FrameBox[#, FrameStyle -> GrayLevel[0.3], Background -> 
               GrayLevel[0.15], FrameMargins -> 7, RoundingRadius -> 3, 
               BaselinePosition -> Baseline], Active -> False, Alignment -> 
              Left, Appearance -> None, BaseStyle -> {Deployed -> False}, 
              DefaultBaseStyle -> {"Pane", Background -> None}, 
              BaselinePosition -> Baseline]& ), Tooltip -> None}, 
          GraphicsBoxOptions -> {
           Axes -> False, 
            DefaultBaseStyle -> {
             "GraphicsNoFontsOrMenu", CacheGraphics -> False}, ImageSize -> 
            Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}]}, 
          Graphics3DBoxOptions -> {
           Axes -> False, DefaultBaseStyle -> {"Graphics3DNoFontsOrMenu"}, 
            ImageSize -> 
            Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}]}]}, Open]]}, Open]]}, Visible -> False, 
  FrontEndVersion -> "14.2 for Linux x86 (64-bit) (October 2, 2024)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"f781a902-7937-4a0e-a262-0dd996ef8ed2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"a0f5d527-7abc-443f-af60-c264045018c7",
   CellTags->"SlideShowHeader"],
  Cell[178029, 2951, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b600b26c-d45a-4a3f-9fdc-7c694c2d24a4",
   CellTags->"SlideShowHeader"],
  Cell[216005, 3730, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8c67ebe2-f0ab-4387-9174-671ced27d814",
   CellTags->"SlideShowHeader"],
  Cell[292100, 5053, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"429f2f64-66fa-42d8-938d-f3e34c370d2b",
   CellTags->"SlideShowHeader"],
  Cell[648853, 11939, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"a6e27d9e-1550-42b8-9ff3-cdd2968fb97a",
   CellTags->"SlideShowHeader"],
  Cell[708113, 13169, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4ce73afd-33ce-430c-9f7d-970c4c53b881",
   CellTags->"SlideShowHeader"],
  Cell[717425, 13412, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d8ee5f5f-2dad-4b3b-9676-92a1e259181e",
   CellTags->"SlideShowHeader"],
  Cell[887920, 16564, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b70cbb7a-2e26-46dd-8653-767005d84470",
   CellTags->"SlideShowHeader"],
  Cell[895649, 16795, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"60ed8df2-87fe-4513-964c-d7768048799e",
   CellTags->"SlideShowHeader"],
  Cell[941085, 17704, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b9db956e-a07f-418e-945c-5416e6ec55e6",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1032020, 19572}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"a0f5d527-7abc-443f-af60-c264045018c7",
 CellTags->"SlideShowHeader"],
Cell[705, 26, 352, 6, 26, "AuthorOnly",ExpressionUUID->"10f348fd-c2cb-4221-9468-ae9de3210783"],
Cell[1060, 34, 175187, 2876, 324, "Text",ExpressionUUID->"45ca76cc-28f1-401f-99c8-ba12e1478f3e"],
Cell[CellGroupData[{
Cell[176272, 2914, 623, 8, 159, "Title",ExpressionUUID->"28529afc-3c16-4158-b86f-7ae84eac1bd5"],
Cell[176898, 2924, 543, 9, 228, "Subtitle",ExpressionUUID->"45fee397-5a76-4e67-9c40-7817723ff842"],
Cell[177444, 2935, 462, 8, 119, "Subtitle",ExpressionUUID->"6e55df08-a48b-4a3e-8bd7-96daaad169c2"],
Cell[177909, 2945, 71, 0, 76, "Text",ExpressionUUID->"a3bb9a6d-0ad0-44d4-800b-2df6ccaec3a1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[178029, 2951, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b600b26c-d45a-4a3f-9fdc-7c694c2d24a4",
 CellTags->"SlideShowHeader"],
Cell[178154, 2955, 525, 9, 26, "AuthorOnly",ExpressionUUID->"cbe4d6aa-d589-4633-a309-ca0775f2075b"],
Cell[CellGroupData[{
Cell[178704, 2968, 306, 6, 98, "Section",ExpressionUUID->"ee18775b-2335-4f1f-b7df-57e50fac12c7"],
Cell[CellGroupData[{
Cell[179035, 2978, 470, 9, 83, "Subsection",ExpressionUUID->"ba6e4cb6-0846-4d11-9259-4eecb6fbab52"],
Cell[179508, 2989, 1182, 19, 76, "Text",ExpressionUUID->"b718e72b-1063-4ceb-839c-30bc1d9293e2"],
Cell[180693, 3010, 239, 6, 48, "Item",ExpressionUUID->"0e16071e-f2c5-4675-8ef8-554e3780ee39"],
Cell[180935, 3018, 267, 6, 48, "Item",ExpressionUUID->"3ce18277-2793-4e2b-9bdd-6a8f9434f134"],
Cell[181205, 3026, 317, 6, 48, "Item",ExpressionUUID->"ae11d090-e48e-4213-a5af-7bde67366afa"],
Cell[181525, 3034, 337, 7, 48, "Item",ExpressionUUID->"994db237-3144-412e-b1cc-821df685acac"],
Cell[181865, 3043, 1069, 15, 76, "Text",ExpressionUUID->"60a2ed65-4d5e-4adc-832e-3d96de8e028d"],
Cell[CellGroupData[{
Cell[182959, 3062, 8279, 134, 149, "Subsubsection",ExpressionUUID->"14f24dec-ee22-4ebb-b1b3-a7997ec792d4"],
Cell[191241, 3198, 1929, 36, 169, "Text",ExpressionUUID->"096bdfcd-28a0-49b6-9902-558edfa91aac"]
}, Closed]],
Cell[CellGroupData[{
Cell[193207, 3239, 3788, 66, 160, "Subsubsection",ExpressionUUID->"84460f51-3adb-4c21-8f41-e5222b346d84"],
Cell[196998, 3307, 1784, 31, 122, "Text",ExpressionUUID->"44c4d59e-cfac-44c8-9064-9fbaba36116f"]
}, Closed]],
Cell[CellGroupData[{
Cell[198819, 3343, 9090, 153, 172, "Subsubsection",ExpressionUUID->"9cd08b4e-4a64-43c3-aa44-c8e0584e7fee"],
Cell[207912, 3498, 1026, 26, 169, "Text",ExpressionUUID->"c5904cf9-2410-4aee-a781-c1c4b715a735"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208987, 3530, 384, 8, 83, "Subsection",ExpressionUUID->"ffac0a7b-3124-43d1-a7b7-03bd811a2b6f"],
Cell[209374, 3540, 489, 10, 76, "Text",ExpressionUUID->"5d25dff2-562f-4e2f-afca-2eea2478cf18"],
Cell[CellGroupData[{
Cell[209888, 3554, 458, 9, 75, "Subsubsection",ExpressionUUID->"8ae28d27-5bc0-4c5b-9e78-e4ea49a5e1c7"],
Cell[210349, 3565, 337, 6, 48, "Item",ExpressionUUID->"326b28f7-c16a-4d90-92f7-0ee2b8ce779c"],
Cell[210689, 3573, 349, 6, 48, "Item",ExpressionUUID->"3a3f8619-95a1-40e8-8569-8b450cdae9ab"],
Cell[211041, 3581, 478, 14, 48, "Item",ExpressionUUID->"a03804d7-4e57-43e6-91ae-50f63fac8652"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211556, 3600, 417, 8, 75, "Subsubsection",ExpressionUUID->"b14b3560-124a-4ecd-9abf-4b5446f3e7c3"],
Cell[211976, 3610, 262, 6, 48, "Item",ExpressionUUID->"24642c07-e5af-496f-9ed2-cadfeb09bdb0"],
Cell[212241, 3618, 220, 4, 48, "Item",ExpressionUUID->"aed9dee8-bffa-4a4a-841d-3e5c846698cd"],
Cell[212464, 3624, 296, 7, 48, "Item",ExpressionUUID->"c64a3bea-88c8-4b16-889d-e8e1398e4962"],
Cell[212763, 3633, 297, 7, 48, "Item",ExpressionUUID->"455ebbc4-7834-46c7-a3cb-5a8799ea4af3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213097, 3645, 227, 4, 75, "Subsubsection",ExpressionUUID->"b66d1493-6a01-4816-9b26-f7d27e264d81"],
Cell[213327, 3651, 351, 7, 48, "Item",ExpressionUUID->"9586e06c-8e04-46eb-82fb-180a22f56de7"],
Cell[213681, 3660, 271, 6, 48, "Item",ExpressionUUID->"d90705a6-23de-4756-9f5a-315dcc09fb74"],
Cell[213955, 3668, 573, 17, 90, "Item",ExpressionUUID->"75225126-296c-42a6-bdb1-2ccd5dce2bf5"],
Cell[214531, 3687, 438, 10, 48, "Subitem",ExpressionUUID->"a2367023-b0df-4624-9f94-9c9063462f9c"],
Cell[214972, 3699, 472, 10, 48, "Subitem",ExpressionUUID->"e26cfd0c-1995-466c-a00b-498b4a2927a0"],
Cell[215447, 3711, 485, 11, 48, "Subitem",ExpressionUUID->"ed94e5cc-25e9-47c6-a7e0-587c3c3a2416"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216005, 3730, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"8c67ebe2-f0ab-4387-9174-671ced27d814",
 CellTags->"SlideShowHeader"],
Cell[216130, 3734, 406, 7, 26, "AuthorOnly",ExpressionUUID->"9c6717be-1323-4940-a566-4da57380d748"],
Cell[CellGroupData[{
Cell[216561, 3745, 208, 4, 98, "Section",ExpressionUUID->"6e71a1d8-a0cc-48ee-b1f0-b0cdf395fb73"],
Cell[CellGroupData[{
Cell[216794, 3753, 209, 4, 83, "Subsection",ExpressionUUID->"4a755da2-96f0-4e8c-b7ac-abfc088c31d2"],
Cell[217006, 3759, 469, 9, 90, "Item",ExpressionUUID->"e26e45e1-145d-4b62-9311-781349d93210"],
Cell[217478, 3770, 410, 8, 90, "Item",ExpressionUUID->"99a86956-6e41-4aa0-8f75-59f4e36f7e46"],
Cell[217891, 3780, 314, 7, 48, "Item",ExpressionUUID->"f60cdac8-bc64-43f0-97f5-31f6cea727e1"],
Cell[218208, 3789, 421, 8, 90, "Item",ExpressionUUID->"c55d86c2-a6bf-4661-9346-8922b6439464"]
}, Closed]],
Cell[CellGroupData[{
Cell[218666, 3802, 183, 3, 80, "Subsection",ExpressionUUID->"0a3443f8-86e6-4660-84f4-d9b627e04ee3"],
Cell[218852, 3807, 341, 7, 90, "Item",ExpressionUUID->"a77b3d2e-bccd-460a-9fcc-4a97c0e5faa3"],
Cell[219196, 3816, 486, 6, 48, "Item",ExpressionUUID->"72219a2f-bdc1-42f2-9001-d9b3fa25b083"],
Cell[219685, 3824, 502, 8, 48, "Subitem",ExpressionUUID->"074e7158-b64f-42bf-bd2d-832d56539c9b"],
Cell[220190, 3834, 513, 8, 48, "Subitem",ExpressionUUID->"28e8799f-1bd4-49ad-943f-8412a41fc4e0"],
Cell[220706, 3844, 480, 7, 48, "Subitem",ExpressionUUID->"cce0179f-8ee5-4bb3-b1e3-a916e6d9f9bb"],
Cell[221189, 3853, 525, 8, 48, "Subitem",ExpressionUUID->"a6c7e0ed-2143-4b36-a6f2-7607f26fb4bb"],
Cell[221717, 3863, 714, 15, 48, "Item",ExpressionUUID->"c2bd907c-21b3-44f6-bce8-19fb3f4b64b9"],
Cell[222434, 3880, 609, 15, 48, "Item",ExpressionUUID->"2565517a-8b70-4bfc-80e2-f9838e933839"],
Cell[223046, 3897, 643, 15, 48, "Item",ExpressionUUID->"0302ad24-5cc0-4d1c-a7c4-6fb85832f229"],
Cell[223692, 3914, 768, 16, 48, "Item",ExpressionUUID->"aaf7caea-fc9e-46de-a373-6bb9d8270e73"],
Cell[224463, 3932, 541, 8, 48, "Item",ExpressionUUID->"027ad996-7a72-46c1-acff-9ca306a4f912"],
Cell[225007, 3942, 67032, 1104, 608, "Text",ExpressionUUID->"0c91e847-a81d-4f6a-a26e-80a98137a3ac"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292100, 5053, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"429f2f64-66fa-42d8-938d-f3e34c370d2b",
 CellTags->"SlideShowHeader"],
Cell[292225, 5057, 347, 6, 37, "AuthorOnly",ExpressionUUID->"d8760497-af4c-40db-bbc1-bd63aaffe193"],
Cell[CellGroupData[{
Cell[292597, 5067, 307, 6, 98, "Section",ExpressionUUID->"818effdb-ab6d-409d-8482-8738518dadd0"],
Cell[292907, 5075, 410, 8, 48, "Item",ExpressionUUID->"e39c0fbf-5b17-437c-a944-af18a1b5356f"],
Cell[293320, 5085, 442, 9, 48, "Item",ExpressionUUID->"3ef128ab-d849-4d97-8e91-e76b6e8449a9"],
Cell[293765, 5096, 521, 10, 48, "Item",ExpressionUUID->"c342fc2c-ba3d-46e7-b671-78d810b76617"],
Cell[CellGroupData[{
Cell[294311, 5110, 316, 6, 83, "Subsection",ExpressionUUID->"674c05a8-8d14-4ffd-bf8d-18c2653694ad"],
Cell[294630, 5118, 349, 7, 48, "Item",ExpressionUUID->"8c7a2558-740c-4fcb-ac8b-855ee53cf93f"],
Cell[294982, 5127, 364, 5, 48, "Item",ExpressionUUID->"9ddcb43d-3183-4342-90a1-925baf37483f"],
Cell[295349, 5134, 471, 9, 90, "Item",ExpressionUUID->"ec6488a1-5a5b-4502-be0a-6188d4a24a27"]
}, Closed]],
Cell[CellGroupData[{
Cell[295857, 5148, 313, 6, 80, "Subsection",ExpressionUUID->"9f58ec89-c43a-44b3-8ef6-db405e10f1b2"],
Cell[296173, 5156, 629, 12, 122, "Text",ExpressionUUID->"3287d3b2-e5bd-47a1-b8d6-6969080672ac"],
Cell[CellGroupData[{
Cell[296827, 5172, 1044, 23, 277, "Input",ExpressionUUID->"6e9e5790-de8d-4c9c-b988-dbf87ca1a7e4"],
Cell[297874, 5197, 15900, 333, 124, "Output",ExpressionUUID->"d056984c-905c-48c4-beea-2379c2b14c23"],
Cell[313777, 5532, 39273, 759, 124, "Output",ExpressionUUID->"71590693-0140-4450-b371-ec149c975847"]
}, Open  ]],
Cell[353065, 6294, 464, 7, 76, "Text",ExpressionUUID->"0d6e56ab-2af3-43dd-b5cd-09a1d342967f"],
Cell[353532, 6303, 145, 3, 43, "Delimiter",ExpressionUUID->"0e96c856-b040-4e58-acc5-6907c337f05d"],
Cell[353680, 6308, 468, 9, 76, "Text",ExpressionUUID->"2052ffcf-fa0a-4a55-836c-8b9a430e2ed2"],
Cell[CellGroupData[{
Cell[354173, 6321, 404, 6, 61, "Input",ExpressionUUID->"a78dfe2a-fb95-4efd-b1a9-f99d4b0a3bdf"],
Cell[354580, 6329, 11428, 234, 124, "Output",ExpressionUUID->"58f523f2-7e4f-4ccb-8385-1b84c095005b"]
}, Open  ]],
Cell[366023, 6566, 368, 9, 76, "Text",ExpressionUUID->"2787b2a2-6b36-4fe4-a520-963dc2d51cc5"],
Cell[366394, 6577, 360, 6, 68, "Input",ExpressionUUID->"b0736b07-42e4-42cc-885c-8887396ee8a1"],
Cell[366757, 6585, 519, 10, 76, "Text",ExpressionUUID->"67f85198-26b5-4003-abfa-355d696eac03"],
Cell[367279, 6597, 33880, 689, 547, "Echo",ExpressionUUID->"6fa87d68-6343-41b8-af31-f7d28452abec"],
Cell[401162, 7288, 432, 9, 76, "Text",ExpressionUUID->"906ff1b7-96c6-48ec-bb2c-93a078b37071"],
Cell[401597, 7299, 145, 3, 43, "Delimiter",ExpressionUUID->"f4eeb603-4cb5-4a3c-b2b9-75f7777c9c1f"],
Cell[401745, 7304, 424, 7, 76, "Text",ExpressionUUID->"92ac09fa-6daa-4075-a83e-b4591670b065"],
Cell[CellGroupData[{
Cell[402194, 7315, 539, 9, 61, "Input",ExpressionUUID->"1d565f73-e511-4966-bd85-41e56b809298"],
Cell[402736, 7326, 350, 5, 58, "Output",ExpressionUUID->"9a5bec1e-d599-4b68-b58a-9daa7dcac858"]
}, Open  ]],
Cell[403101, 7334, 383, 9, 76, "Text",ExpressionUUID->"9a8729be-73ca-4ba6-95c5-8951b43343e2"],
Cell[CellGroupData[{
Cell[403509, 7347, 311, 5, 61, "Input",ExpressionUUID->"f8ac81bb-87f9-43e7-9b41-0ea819a9e104"],
Cell[403823, 7354, 715, 16, 95, "Message",ExpressionUUID->"978aac3c-4cc8-4f5d-9aa1-d91a5566513f"],
Cell[404541, 7372, 11980, 245, 124, "Output",ExpressionUUID->"4a18ea42-3752-4626-af44-f2afd8aaedb5"]
}, Open  ]],
Cell[416536, 7620, 147, 3, 43, "Delimiter",ExpressionUUID->"04902400-f670-45e1-a2cf-6c10e597649a"],
Cell[416686, 7625, 741, 15, 122, "Text",ExpressionUUID->"1f502f80-ba7e-4c13-969d-3eedaf92b7f1"],
Cell[417430, 7642, 1106, 19, 216, "Input",ExpressionUUID->"bb428509-960f-4853-b37e-75ecf0eeb7e5"],
Cell[418539, 7663, 1283, 25, 320, "Input",ExpressionUUID->"4d26b975-d4f9-42c1-b4f6-16a821633f1e"],
Cell[419825, 7690, 575, 12, 122, "Text",ExpressionUUID->"ca8abad7-d00a-4d42-9c7b-5892eed34f26"],
Cell[CellGroupData[{
Cell[420425, 7706, 263, 4, 61, "Input",ExpressionUUID->"80ed83a0-fd01-4812-a99f-79ad1d8aad23"],
Cell[420691, 7712, 661, 15, 50, "Message",ExpressionUUID->"1e70c03e-c908-4900-b0a5-79ef0e0708c3"],
Cell[421355, 7729, 12223, 248, 124, "Output",ExpressionUUID->"5aec31ee-34f5-48bf-8192-7720a3082403"]
}, Open  ]],
Cell[433593, 7980, 147, 3, 43, "Delimiter",ExpressionUUID->"668e7975-c232-4538-834d-eb3f7226dba7"],
Cell[433743, 7985, 779, 17, 122, "Text",ExpressionUUID->"c056456f-f2c1-417f-9452-610871a784e0"],
Cell[434525, 8004, 1686, 33, 519, "Input",ExpressionUUID->"ad73b8d5-d61a-4e2a-89e9-2005f865f202"],
Cell[CellGroupData[{
Cell[436236, 8041, 310, 5, 61, "Input",ExpressionUUID->"5ed8ed90-9549-44ca-a8b2-38b7586c6bbb"],
Cell[436549, 8048, 273, 4, 58, "Output",ExpressionUUID->"dea1e411-88eb-48f2-9690-af34e4b62591"]
}, Open  ]],
Cell[436837, 8055, 145, 3, 43, "Delimiter",ExpressionUUID->"810a8a91-8372-451e-88c0-8b671092d34a"],
Cell[436985, 8060, 535, 11, 76, "Text",ExpressionUUID->"6a0514db-10df-41c2-aa83-0146c3f50f08"],
Cell[437523, 8073, 2762, 63, 820, "Input",ExpressionUUID->"47b5ac77-4d2e-40db-a0a0-9e079d57a238"],
Cell[CellGroupData[{
Cell[440310, 8140, 627, 13, 68, "Input",ExpressionUUID->"379281cb-5e25-4d4e-bb88-c00849c149d5"],
Cell[440940, 8155, 208, 3, 58, "Output",ExpressionUUID->"e27418b4-fddd-45fc-bc6b-93041e149af6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441185, 8163, 576, 12, 68, "Input",ExpressionUUID->"0cac7e8a-e1ab-49c1-9b7b-ba1ce8a9c42f"],
Cell[441764, 8177, 234, 3, 58, "Output",ExpressionUUID->"2d1657b8-95f6-4055-83cf-8a1889ac22d3"]
}, Open  ]],
Cell[442013, 8183, 145, 3, 43, "Delimiter",ExpressionUUID->"4e4e5b55-5b6d-4852-ac2a-85d04178c483"],
Cell[442161, 8188, 617, 12, 122, "Text",ExpressionUUID->"36801a94-51b8-424d-849a-db509845e616"],
Cell[442781, 8202, 752, 14, 122, "Text",ExpressionUUID->"64fb8bff-464f-49e8-b8fd-7e27150ad29d"],
Cell[443536, 8218, 3294, 75, 932, "Input",ExpressionUUID->"071f8493-39f7-4381-b349-39e0d38483c6"],
Cell[CellGroupData[{
Cell[446855, 8297, 373, 10, 68, "Input",ExpressionUUID->"515b0238-f090-4a2b-b346-b07a0aa2b537"],
Cell[447231, 8309, 110176, 1810, 240, "Output",ExpressionUUID->"61aa61f8-fca9-4658-919f-98521a18f350"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[557456, 10125, 320, 6, 83, "Subsection",ExpressionUUID->"a936a9e6-9521-473b-bfce-420e2a90de74"],
Cell[557779, 10133, 426, 9, 48, "Item",ExpressionUUID->"2cecc98a-c32d-40ac-ab46-351ef170d691"],
Cell[558208, 10144, 423, 8, 48, "Item",ExpressionUUID->"391b51ce-122b-4c3f-b85a-1a50d90727f0"],
Cell[558634, 10154, 391, 6, 48, "Item",ExpressionUUID->"61e8eef0-a161-4ff9-98a8-4ffb8947550d"],
Cell[559028, 10162, 407, 8, 76, "Text",ExpressionUUID->"2914a57b-6f15-4e05-98e3-2641281049dc"],
Cell[559438, 10172, 1622, 38, 530, "Input",ExpressionUUID->"804b8c8d-2c31-478d-9c06-9ba53f8c4198"]
}, Closed]],
Cell[CellGroupData[{
Cell[561097, 10215, 313, 6, 80, "Subsection",ExpressionUUID->"db4b086a-38ff-4d9d-9704-da6f7d7512b2"],
Cell[561413, 10223, 169, 3, 76, "Text",ExpressionUUID->"f76068ce-5aa0-4678-b639-14f72f09d008"],
Cell[561585, 10228, 341, 6, 96, "Input",ExpressionUUID->"65f88c1f-91f8-43af-a4a0-dc70bdf2a12b"],
Cell[561929, 10236, 246, 4, 76, "Text",ExpressionUUID->"25022f65-a5cf-4b37-8552-d7d55d900540"],
Cell[CellGroupData[{
Cell[562200, 10244, 1913, 41, 357, "Input",ExpressionUUID->"859562df-65e6-451c-ae5d-36f7b117e2b0"],
Cell[564116, 10287, 75617, 1423, 124, "Output",ExpressionUUID->"cd6fab46-55ff-4ded-be08-cf23d2188f39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639770, 11715, 2029, 41, 514, "Input",ExpressionUUID->"55dad597-fe50-4c71-843d-173a3bb5a3ea"],
Cell[641802, 11758, 6904, 171, 202, "Output",ExpressionUUID->"89a6bf9f-1b44-49ae-a71c-7c0232227b82"]
}, Open  ]],
Cell[648721, 11932, 71, 0, 76, "Text",ExpressionUUID->"1f6502ca-e788-4634-854a-e9d78e750aac"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[648853, 11939, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"a6e27d9e-1550-42b8-9ff3-cdd2968fb97a",
 CellTags->"SlideShowHeader"],
Cell[648978, 11943, 378, 7, 26, "AuthorOnly",ExpressionUUID->"d0c01ad0-5a0f-4225-9da4-f65f2b879803"],
Cell[CellGroupData[{
Cell[649381, 11954, 357, 6, 98, "Section",ExpressionUUID->"febe690f-ea53-4e79-b0c7-738f687d67ce"],
Cell[649741, 11962, 386, 9, 76, "Text",ExpressionUUID->"6ea83d38-00dc-4b35-96e7-e202348857f2"],
Cell[CellGroupData[{
Cell[650152, 11975, 311, 6, 83, "Subsection",ExpressionUUID->"e4ae71f0-5585-4464-994a-fc401190e8f2"],
Cell[650466, 11983, 400, 10, 122, "Text",ExpressionUUID->"496fc0ed-e268-4ce9-a15f-ed5f84cdd817"],
Cell[650869, 11995, 1454, 31, 514, "Input",ExpressionUUID->"dafc237f-faab-42e9-a100-0b30940a7624"]
}, Closed]],
Cell[CellGroupData[{
Cell[652360, 12031, 381, 7, 80, "Subsection",ExpressionUUID->"cc326b7a-f58d-45cd-b8f1-e42dbc94b8b8"],
Cell[652744, 12040, 842, 18, 122, "Text",ExpressionUUID->"cae4c32b-d9a3-4435-bf0e-7c71a642e706"],
Cell[653589, 12060, 726, 15, 215, "Input",ExpressionUUID->"2affa689-3a25-41fc-a32d-85331da7ea4e"],
Cell[CellGroupData[{
Cell[654340, 12079, 422, 6, 57, "ExternalLanguage",ExpressionUUID->"153569fe-34ac-4e1f-b9c8-e52ee7e57a9a"],
Cell[654765, 12087, 312, 5, 39, "Print",ExpressionUUID->"73bd3451-38f4-49c5-9071-512d13e44289"],
Cell[655080, 12094, 7271, 156, 124, "Output",ExpressionUUID->"582abea0-a93a-4bdd-9605-9f05d21a07bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662388, 12255, 218, 4, 75, "Subsubsection",ExpressionUUID->"15278911-aae3-47f9-a163-b8692e5e5919"],
Cell[662609, 12261, 464, 9, 122, "Text",ExpressionUUID->"6b03b4c5-fa42-430a-a194-59c640238ef3"],
Cell[663076, 12272, 387, 9, 76, "Text",ExpressionUUID->"1ad3fb7b-b294-4952-928b-e41de6e8a302"],
Cell[663466, 12283, 1712, 37, 755, "Input",ExpressionUUID->"3dc38e5e-ca9f-4a97-b2e8-336dd4d5ebfe"]
}, Closed]],
Cell[CellGroupData[{
Cell[665215, 12325, 220, 4, 72, "Subsubsection",ExpressionUUID->"49213a2c-0f13-4b54-94da-126180f78144"],
Cell[665438, 12331, 373, 8, 76, "Text",ExpressionUUID->"dca86c69-4932-4de5-9e6b-2aeafe7e03ce"],
Cell[665814, 12341, 394, 9, 76, "Text",ExpressionUUID->"33b731d1-288b-4325-84ff-cae9ced15e9d"],
Cell[CellGroupData[{
Cell[666233, 12354, 419, 8, 61, "Input",ExpressionUUID->"5ce63f16-aacb-4294-9642-e8882fb18c6f"],
Cell[666655, 12364, 35855, 649, 254, "Output",ExpressionUUID->"aacb919e-264f-4c5a-ae1e-c0301a883a6b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[702559, 13019, 315, 6, 72, "Subsubsection",ExpressionUUID->"147249ba-8aaa-4436-b633-f21d9766e0ae"],
Cell[702877, 13027, 574, 10, 122, "Text",ExpressionUUID->"e37b7334-6dff-4bc4-8f22-d2d091873052"],
Cell[703454, 13039, 1088, 28, 348, "Input",ExpressionUUID->"d3a331d2-dc28-4e43-8c2c-e212640174c5"]
}, Closed]],
Cell[CellGroupData[{
Cell[704579, 13072, 311, 6, 72, "Subsubsection",ExpressionUUID->"8beb48b2-fb02-434f-ac9f-83ca1bda4a2b"],
Cell[704893, 13080, 345, 7, 76, "Text",ExpressionUUID->"122a7b71-158a-4de8-8ac7-acb80b27312d"],
Cell[705241, 13089, 329, 5, 76, "Text",ExpressionUUID->"b3399212-5fc5-419b-aa36-5c31f12225d8"],
Cell[705573, 13096, 387, 10, 61, "Input",ExpressionUUID->"cda3f81a-4194-48e4-a6f1-34ad09a98875"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[706009, 13112, 340, 6, 80, "Subsection",ExpressionUUID->"4d6b20f7-55e7-47d2-9f79-b3ed530e2bcd"],
Cell[706352, 13120, 462, 9, 76, "Text",ExpressionUUID->"17aa38cb-f237-4bf2-9066-3643dfb3f1be"],
Cell[706817, 13131, 757, 19, 76, "Text",ExpressionUUID->"d88680cb-a379-4ff0-9e68-d1ac200b2c43"],
Cell[707577, 13152, 475, 10, 57, "ExternalLanguage",ExpressionUUID->"295867f3-7927-4c64-9879-9cca2f4fedad"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[708113, 13169, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"4ce73afd-33ce-430c-9f7d-970c4c53b881",
 CellTags->"SlideShowHeader"],
Cell[708238, 13173, 424, 7, 26, "AuthorOnly",ExpressionUUID->"12c58e02-67cc-407a-b2f3-29b6178118b9"],
Cell[CellGroupData[{
Cell[708687, 13184, 315, 6, 98, "Section",ExpressionUUID->"f24b35b8-4ab5-4b68-8737-813f12aaa677"],
Cell[709005, 13192, 484, 11, 76, "Text",ExpressionUUID->"5ab33e11-1049-4f33-9328-6e31e3250cfc"],
Cell[709492, 13205, 371, 8, 76, "Text",ExpressionUUID->"2c585e90-81b8-4538-8917-9e9779796576"],
Cell[709866, 13215, 721, 21, 272, "ExternalLanguage",ExpressionUUID->"ce7ed61c-b00c-48eb-91b3-fdf709556e56"],
Cell[710590, 13238, 506, 15, 169, "Text",ExpressionUUID->"a12f3568-17a6-48fe-897a-d5a7a1e2ab97"],
Cell[711099, 13255, 793, 15, 138, "ExternalLanguage",ExpressionUUID->"548f95a0-130b-4a01-b4d8-63899ab19aea"],
Cell[711895, 13272, 713, 14, 138, "ExternalLanguage",ExpressionUUID->"e19bce81-23da-4415-991e-eccb47b81b83"],
Cell[712611, 13288, 385, 11, 76, "Text",ExpressionUUID->"cee5c676-35d8-4460-bcf5-128c98617679"],
Cell[712999, 13301, 1056, 22, 246, "ExternalLanguage",ExpressionUUID->"5d288cc6-6005-4a1b-b388-f7faf5032ee0"],
Cell[714058, 13325, 446, 9, 76, "Text",ExpressionUUID->"668569c8-fa33-4b87-8da2-41a4d194b94f"],
Cell[714507, 13336, 512, 10, 122, "Text",ExpressionUUID->"efaa6291-0c8f-4067-bd80-29c0bc5874d6"],
Cell[715022, 13348, 1295, 29, 462, "ExternalLanguage",ExpressionUUID->"c5455ff9-7b4c-43d9-b0e3-2e0a7de0a739"],
Cell[716320, 13379, 435, 9, 76, "Text",ExpressionUUID->"eda66611-33ed-4049-b401-fb6608f54f79"],
Cell[716758, 13390, 618, 16, 219, "ExternalLanguage",ExpressionUUID->"10a575dd-4491-49be-9e97-e8c7e7e72996"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[717425, 13412, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"d8ee5f5f-2dad-4b3b-9676-92a1e259181e",
 CellTags->"SlideShowHeader"],
Cell[717550, 13416, 301, 6, 26, "AuthorOnly",ExpressionUUID->"5d67e08f-31a8-4f7d-a3de-4b68f82a9fd8"],
Cell[CellGroupData[{
Cell[717876, 13426, 305, 6, 98, "Section",ExpressionUUID->"e7667274-ed87-4691-8db9-b41b6a786eb9"],
Cell[718184, 13434, 535, 10, 122, "Text",ExpressionUUID->"f36b0a0c-38b6-43b6-a1ac-224b7d5afe66"],
Cell[CellGroupData[{
Cell[718744, 13448, 207, 4, 83, "Subsection",ExpressionUUID->"15a06f4d-1b3c-479d-b9f9-bbf008a3f70f"],
Cell[718954, 13454, 628, 11, 122, "Text",ExpressionUUID->"60628758-e2a1-4aee-8154-b93e243a1bc3"],
Cell[719585, 13467, 572, 8, 76, "Text",ExpressionUUID->"1a68aca8-5468-4694-9865-e8e9e7220d01"],
Cell[720160, 13477, 737, 22, 326, "ExternalLanguage",ExpressionUUID->"d0f30779-efd1-4f1a-9b1a-c0a6bccdc9ca"],
Cell[720900, 13501, 785, 19, 76, "Text",ExpressionUUID->"a888845e-6568-4a9c-a795-1df076d1a22c"],
Cell[721688, 13522, 752, 19, 247, "ExternalLanguage",ExpressionUUID->"60b3aa67-0705-4959-a06b-db7c0919ecf2"]
}, Closed]],
Cell[CellGroupData[{
Cell[722477, 13546, 257, 4, 80, "Subsection",ExpressionUUID->"873ca2bb-f120-4637-b081-0cd019cffcf9"],
Cell[722737, 13552, 795, 18, 122, "Text",ExpressionUUID->"bd44439b-c5d4-4186-ab22-9e4275f383b3"],
Cell[723535, 13572, 494, 12, 122, "Text",ExpressionUUID->"012ab46e-6d32-40e2-9472-0186a8a683fb"],
Cell[724032, 13586, 67213, 1105, 530, "Text",ExpressionUUID->"0771a8b1-266b-4649-a2e9-8eb994c94693"],
Cell[CellGroupData[{
Cell[791270, 14695, 256, 4, 75, "Subsubsection",ExpressionUUID->"ca2f5913-0e98-45ea-9282-ca0fd5895920"],
Cell[791529, 14701, 882, 19, 76, "Text",ExpressionUUID->"5c4b2f27-7a99-424e-ae15-58baed277817"],
Cell[792414, 14722, 291, 4, 76, "Text",ExpressionUUID->"92c414fc-5e96-469b-8604-e4d72e5b8830"],
Cell[792708, 14728, 409, 10, 111, "ExternalLanguage",ExpressionUUID->"bb634a1e-5afd-4fc8-bfce-e8e85e9f8d94"],
Cell[793120, 14740, 547, 17, 300, "ExternalLanguage",ExpressionUUID->"35560935-8e12-4d45-be85-47a9b9fab9eb"],
Cell[793670, 14759, 268, 6, 76, "Text",ExpressionUUID->"522d8bd1-e489-4320-8c16-a213563b2f27"],
Cell[793941, 14767, 374, 13, 219, "ExternalLanguage",ExpressionUUID->"b1bc8947-9014-4e3d-9558-e8e124b06751"]
}, Closed]],
Cell[CellGroupData[{
Cell[794352, 14785, 273, 4, 72, "Subsubsection",ExpressionUUID->"495c1c42-b749-41ec-9460-4cecee180adb"],
Cell[794628, 14791, 411, 8, 76, "Text",ExpressionUUID->"8fb33562-48c4-4a51-a0d4-42477db11395"],
Cell[795042, 14801, 746, 25, 515, "ExternalLanguage",ExpressionUUID->"c3f3269c-8310-4a4c-a952-a85e2f4c8573"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[795837, 14832, 301, 5, 80, "Subsection",ExpressionUUID->"75c03db2-2ef0-46da-b1de-4abdd488df6f"],
Cell[796141, 14839, 980, 24, 168, "Text",ExpressionUUID->"732a5980-6a66-42d1-8f57-a223b49a1edc"],
Cell[797124, 14865, 75722, 1245, 551, "InputOnly",ExpressionUUID->"432e5d6c-7ef9-4da3-95f0-4bc46d7d4e76"],
Cell[CellGroupData[{
Cell[872871, 16114, 389, 6, 75, "Subsubsection",ExpressionUUID->"2e854220-b7ba-4d18-8790-6bbd8e68c5dc"],
Cell[873263, 16122, 1013, 21, 187, "Text",ExpressionUUID->"7b07685b-3c89-4eb4-bfb6-cd244bdd2057"],
Cell[874279, 16145, 603, 20, 290, "ExternalLanguage",ExpressionUUID->"8456c936-d801-4e09-80cb-7f76f5df2438"],
Cell[874885, 16167, 244, 4, 61, "Text",ExpressionUUID->"4c388f1d-815a-4389-90a0-2fb9cefa0fb6"],
Cell[875132, 16173, 739, 26, 402, "ExternalLanguage",ExpressionUUID->"6f729125-1009-4755-89ae-1f5ba1b26f55"]
}, Closed]],
Cell[CellGroupData[{
Cell[875908, 16204, 414, 6, 73, "Subsubsection",ExpressionUUID->"e17414e6-5178-42c8-bfe0-54fa5dbbc07c"],
Cell[876325, 16212, 871, 18, 92, "Text",ExpressionUUID->"2f3ac015-481e-426e-b861-b07790bebb21"],
Cell[877199, 16232, 264, 6, 61, "Text",ExpressionUUID->"df109085-df07-4dd4-8974-f579c7c07694"],
Cell[877466, 16240, 554, 19, 253, "ExternalLanguage",ExpressionUUID->"66cc9b10-8476-4535-85d9-5223640834b4"],
Cell[878023, 16261, 169, 3, 61, "Text",ExpressionUUID->"c885076b-aa2a-40b2-9168-e78f76a8caf3"],
Cell[878195, 16266, 853, 32, 533, "ExternalLanguage",ExpressionUUID->"e52e1bcf-40e6-4906-a7d2-3912f946f280"],
Cell[879051, 16300, 237, 4, 61, "Text",ExpressionUUID->"ed4ff1ce-6b4a-4f66-9031-ec286e737372"],
Cell[879291, 16306, 268, 8, 86, "ExternalLanguage",ExpressionUUID->"275e5bfb-1f11-4079-bc6b-4ee26ac912fc"]
}, Closed]],
Cell[CellGroupData[{
Cell[879596, 16319, 313, 5, 73, "Subsubsection",ExpressionUUID->"95adb971-4002-4f5c-83c3-d18799c55ff5"],
Cell[879912, 16326, 685, 17, 61, "Text",ExpressionUUID->"7d7ab885-c517-48f6-a905-355b9b233e94"],
Cell[880600, 16345, 433, 9, 61, "Text",ExpressionUUID->"16fa88e5-f2b9-4225-9c52-6ab01d4cdf59"],
Cell[881036, 16356, 1593, 48, 682, "ExternalLanguage",ExpressionUUID->"a5045ba2-7a79-4883-bc1e-72e88b3f956d"]
}, Closed]],
Cell[CellGroupData[{
Cell[882666, 16409, 302, 5, 73, "Subsubsection",ExpressionUUID->"66415059-4ac8-4130-a039-9fec5d6dd9c1"],
Cell[882971, 16416, 400, 8, 61, "Text",ExpressionUUID->"bc094008-3f06-4e0c-8d7e-4cca732cd8c4"],
Cell[883374, 16426, 1472, 43, 680, "ExternalLanguage",ExpressionUUID->"5d09b175-8293-43a7-aa13-5aa70815fc09"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[884895, 16475, 211, 4, 80, "Subsection",ExpressionUUID->"0ab4ebfe-ce54-47a4-a0cd-04cae718498c"],
Cell[885109, 16481, 1080, 23, 168, "Text",ExpressionUUID->"26e36512-2716-4c77-ab78-c097fd6cb741"],
Cell[886192, 16506, 418, 8, 76, "Text",ExpressionUUID->"c3a00cef-5825-4c48-8d52-230eecc38bf9"],
Cell[886613, 16516, 1246, 41, 818, "ExternalLanguage",ExpressionUUID->"e857d3c1-ae7b-4539-ae09-249bee7f18d7"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[887920, 16564, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b70cbb7a-2e26-46dd-8653-767005d84470",
 CellTags->"SlideShowHeader"],
Cell[888045, 16568, 323, 6, 26, "AuthorOnly",ExpressionUUID->"0ff00f0f-56fc-40ea-81df-3911399a902c"],
Cell[CellGroupData[{
Cell[888393, 16578, 354, 6, 98, "Section",ExpressionUUID->"00997d98-22b1-4d5e-969e-0d00ce84c03c"],
Cell[888750, 16586, 843, 19, 122, "Text",ExpressionUUID->"44217083-0ba6-4b6e-99ff-58980695572f"],
Cell[CellGroupData[{
Cell[889618, 16609, 365, 6, 83, "Subsection",ExpressionUUID->"e81a4ce3-1372-4b37-b8f5-e28b96a2778c"],
Cell[889986, 16617, 449, 9, 76, "Text",ExpressionUUID->"8b88ee9a-5438-48e0-b7b8-0fd94842656f"],
Cell[890438, 16628, 662, 15, 165, "ExternalLanguage",ExpressionUUID->"aab067fc-d7d2-4c31-bb12-137ec2794424"],
Cell[891103, 16645, 508, 10, 76, "Text",ExpressionUUID->"50bfafd9-c636-41d3-8c20-77b965671258"],
Cell[891614, 16657, 615, 18, 219, "ExternalLanguage",ExpressionUUID->"0c96ae1f-e9ba-41d2-a866-e9c71861b3f8"],
Cell[892232, 16677, 401, 10, 76, "Text",ExpressionUUID->"9ca3c828-d02b-4045-9258-f85b437dbe01"]
}, Closed]],
Cell[CellGroupData[{
Cell[892670, 16692, 208, 4, 80, "Subsection",ExpressionUUID->"37db4114-3744-49c3-8f42-88221b1848e5"],
Cell[892881, 16698, 464, 12, 76, "Text",ExpressionUUID->"cd8fd52a-5449-41aa-b0ab-cfe247b516f0"],
Cell[893348, 16712, 844, 28, 490, "ExternalLanguage",ExpressionUUID->"5e101e5f-acf0-4c40-8474-e75a3c045b6a"]
}, Closed]],
Cell[CellGroupData[{
Cell[894229, 16745, 210, 4, 80, "Subsection",ExpressionUUID->"16a52db9-2a9d-4d43-a06a-b1fafed345b8"],
Cell[894442, 16751, 1146, 37, 765, "ExternalLanguage",ExpressionUUID->"c60b10d2-2f9b-473d-8ca8-76517f731187"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[895649, 16795, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"60ed8df2-87fe-4513-964c-d7768048799e",
 CellTags->"SlideShowHeader"],
Cell[895774, 16799, 303, 6, 26, "AuthorOnly",ExpressionUUID->"96b20ee3-73d2-483b-af73-112999c5b31a"],
Cell[CellGroupData[{
Cell[896102, 16809, 248, 4, 98, "Section",ExpressionUUID->"a7f1f758-be07-4df1-a854-8aab439982dc"],
Cell[896353, 16815, 654, 14, 122, "Text",ExpressionUUID->"31a1497b-dd81-4756-a659-58b37adfef64"],
Cell[CellGroupData[{
Cell[897032, 16833, 207, 4, 83, "Subsection",ExpressionUUID->"b0e998dc-7f4d-4869-8962-5444c90100d1"],
Cell[897242, 16839, 490, 9, 122, "Text",ExpressionUUID->"6d4ccfe3-14d8-4756-b68f-64c4ad6c5c34"],
Cell[CellGroupData[{
Cell[897757, 16852, 525, 11, 75, "Subsubsection",ExpressionUUID->"ce2bac37-ce34-4fa2-8511-307c0a942c28"],
Cell[898285, 16865, 349, 7, 168, "Text",ExpressionUUID->"d40ee248-f9be-4712-b707-a1a393327ea8"]
}, Closed]],
Cell[CellGroupData[{
Cell[898671, 16877, 588, 12, 72, "Subsubsection",ExpressionUUID->"d9f952da-3cdf-424e-9afd-efcaa0c0ee32"],
Cell[899262, 16891, 545, 13, 92, "Text",ExpressionUUID->"854dec0a-fe8e-41b6-aed9-3a3bd0772461"]
}, Closed]],
Cell[CellGroupData[{
Cell[899844, 16909, 380, 9, 72, "Subsubsection",ExpressionUUID->"11d10c18-8259-4288-a9d7-614f09c5a82d"],
Cell[900227, 16920, 372, 8, 92, "Text",ExpressionUUID->"70733b42-0daa-49e4-b0b9-6c43040d609d"]
}, Closed]],
Cell[CellGroupData[{
Cell[900636, 16933, 421, 10, 72, "Subsubsection",ExpressionUUID->"40dd5e8b-304c-4bc9-820c-02e5c146b64f"],
Cell[901060, 16945, 345, 7, 92, "Text",ExpressionUUID->"248367b4-af69-4290-a853-3a657ebed37e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[901454, 16958, 204, 4, 80, "Subsection",ExpressionUUID->"29132159-4664-49b1-bfec-3b6426830c6f"],
Cell[901661, 16964, 425, 11, 122, "Text",ExpressionUUID->"b18b1419-4e5a-4da3-9aa6-58de2a4badf3"],
Cell[902089, 16977, 402, 8, 168, "Text",ExpressionUUID->"3e9d1043-af72-4c5f-b706-54923381614e"],
Cell[902494, 16987, 37413, 678, 262, "Text",ExpressionUUID->"3da72850-c9b1-4ccc-92fc-e52e52e307e7"],
Cell[939910, 17667, 328, 5, 76, "Text",ExpressionUUID->"4224ce0c-4f03-4e94-b5bf-54818055b5b1"],
Cell[940241, 17674, 255, 5, 57, "ExternalLanguage",ExpressionUUID->"4db82a1a-fae8-43f6-ab16-43486be5fbe8"],
Cell[940499, 17681, 197, 3, 76, "Text",ExpressionUUID->"fe7a5241-81e4-4e8c-8579-84c608e778c5"],
Cell[940699, 17686, 325, 11, 57, "ExternalLanguage",ExpressionUUID->"2f54a1e3-b925-4c86-9788-56c7c747e73e"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[941085, 17704, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"b9db956e-a07f-418e-945c-5416e6ec55e6",
 CellTags->"SlideShowHeader"],
Cell[941210, 17708, 382, 7, 140, "Title",ExpressionUUID->"729a46eb-5221-41f4-a385-23c511ca0443"],
Cell[941595, 17717, 694, 12, 76, "Text",ExpressionUUID->"878bd6ab-2b53-4fbb-8e28-e6e2d4ef0639"],
Cell[942292, 17731, 469, 7, 48, "Item",ExpressionUUID->"c3e20de1-626e-4a64-a635-6b4c7b78cb3e"],
Cell[942764, 17740, 475, 7, 48, "Item",ExpressionUUID->"fccf22fd-53e7-4331-8d1c-eef3a594efc4"],
Cell[943242, 17749, 664, 11, 48, "Item",ExpressionUUID->"f5235aa7-e875-460b-9ed0-7da75327b233"],
Cell[943909, 17762, 605, 9, 48, "Item",ExpressionUUID->"a3b5bcbc-9f1e-4b34-9c0a-3f6b4efc58ec"],
Cell[944517, 17773, 802, 13, 76, "Text",ExpressionUUID->"da085347-dce7-4f98-aba8-26742ba35b73"],
Cell[945322, 17788, 2135, 43, 519, "Text",ExpressionUUID->"61ec7fda-05c7-493e-859d-774b25a9575e"]
}, Open  ]]
}
]
*)

